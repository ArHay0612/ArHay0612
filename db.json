{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/css/noscript.styl","path":"css/noscript.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/config.js","path":"js/config.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/comments.js","path":"js/comments.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/sidebar.js","path":"js/sidebar.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schedule.js","path":"js/schedule.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/pjax.js","path":"js/pjax.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/addtoany.js","path":"js/third-party/addtoany.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/fancybox.js","path":"js/third-party/fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/pace.js","path":"js/third-party/pace.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/matomo.js","path":"js/third-party/analytics/matomo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/tags/wavedrom.js","path":"js/third-party/tags/wavedrom.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":1,"renderable":1},{"_id":"source/images/eslint.png","path":"images/eslint.png","modified":1,"renderable":0},{"_id":"source/images/build_push_rtsp.jpg","path":"images/build_push_rtsp.jpg","modified":1,"renderable":0},{"_id":"source/avatar/avator.jpg","path":"avatar/avator.jpg","modified":1,"renderable":0},{"_id":"source/images/favicon.png","path":"images/favicon.png","modified":1,"renderable":0},{"_id":"source/images/hls-result.png","path":"images/hls-result.png","modified":1,"renderable":0},{"_id":"source/images/git2.x.jpg","path":"images/git2.x.jpg","modified":1,"renderable":0},{"_id":"source/images/git1.x.jpg","path":"images/git1.x.jpg","modified":1,"renderable":0},{"_id":"source/images/live2d_demo.jpg","path":"images/live2d_demo.jpg","modified":1,"renderable":0},{"_id":"source/images/m3u8-res.png","path":"images/m3u8-res.png","modified":1,"renderable":0},{"_id":"source/images/photo.gif","path":"images/photo.gif","modified":1,"renderable":0},{"_id":"source/images/push_to_rtmp.png","path":"images/push_to_rtmp.png","modified":1,"renderable":0},{"_id":"source/images/push_rtmp_res.png","path":"images/push_rtmp_res.png","modified":1,"renderable":0},{"_id":"source/images/prettier.png","path":"images/prettier.png","modified":1,"renderable":0},{"_id":"source/images/rtmp-result.png","path":"images/rtmp-result.png","modified":1,"renderable":0},{"_id":"source/images/push_to_rtsp.png","path":"images/push_to_rtsp.png","modified":1,"renderable":0},{"_id":"source/images/vscode.1.30.png","path":"images/vscode.1.30.png","modified":1,"renderable":0},{"_id":"source/images/rtsp_to_rtsp.png","path":"images/rtsp_to_rtsp.png","modified":1,"renderable":0},{"_id":"source/images/wechat_channel.jpg","path":"images/wechat_channel.jpg","modified":1,"renderable":0},{"_id":"source/live2d_models/fll/fll.moc3","path":"live2d_models/fll/fll.moc3","modified":1,"renderable":0},{"_id":"source/live2d_models/fll/fll.4096/texture_00.png","path":"live2d_models/fll/fll.4096/texture_00.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/_posts/JDK.md","hash":"5f352fed89bb792224f3b23aa0f66bc0df8973b3","modified":1745309832593},{"_id":"source/_posts/Linux下安装nodejs.md","hash":"2a9da2d55dddbe743c1844bac433ceeeff7b5891","modified":1745309848187},{"_id":"source/_posts/Linux常用压缩解压缩.md","hash":"cabe9ec4d9e03c7fe842dae302a25ac4d3d0b1d6","modified":1745309905195},{"_id":"source/_posts/Linux下安装maven.md","hash":"2749f26fbac2a92d2cfd39e8bd973aed8b5bf0e1","modified":1745309839878},{"_id":"source/_posts/Linux增加使用文件代替swap分区分方法.md","hash":"4a511a131e685bbfd31de13a31dc0b1e922ef90b","modified":1745309896872},{"_id":"source/_posts/MySQL字段值默认不区分大小写问题.md","hash":"402c57434899383b7592659e6387ca77486856b6","modified":1745309976018},{"_id":"source/_posts/MySQL中utf8和utf8mb4区别对emoji支持.md","hash":"f23ddb77ac5766e1e2d8c882d42807db9554b875","modified":1745309963819},{"_id":"source/_posts/MySQL设置用户远程登录.md","hash":"0b5d9d3c38051b92f3e59bb139b472083ec0e642","modified":1745310007139},{"_id":"source/_posts/Shell基础.md","hash":"a518d3e3830a93c640c213a8de593e88b61c3c59","modified":1745310039585},{"_id":"source/_posts/MySQL新版本设置root密码和重置root密码.md","hash":"2fefbf3635af7d93f7a79990be3685106f4af06d","modified":1745310004732},{"_id":"source/_posts/atom配置vue前端开发环境.md","hash":"f63b6cbd1b3f458b2da92b20e9390915e30259c5","modified":1745309437375},{"_id":"source/_posts/git常用的使用总结.md","hash":"1376131d1ce884f5d1deadf2326617c550488aa0","modified":1745309813549},{"_id":"source/_posts/axis2调用webservice.md","hash":"bbff3047a6794f08ce4c50e2262edc830c41f421","modified":1745309788040},{"_id":"source/_posts/deepin-linux下初识docker.md","hash":"f4fc4ee5786ea2a14147029cba48870061a69943","modified":1745309803573},{"_id":"source/_posts/java实现图片的灰度化处理.md","hash":"00204dee8e0c1358f7f032e29311b3ec9657e66e","modified":1745309818562},{"_id":"source/_posts/jsp訪問API報錯PKIX path building failed，JAVA添加信任SSL證書.md","hash":"2bdce69471a82a54c9db9c79bf0fb13e5d5853c4","modified":1745480127605},{"_id":"source/_posts/debian系系统编译CuraEngine引擎.md","hash":"78062f740bc6633ebb912fedee4b037f8d7cc05b","modified":1745309796558},{"_id":"source/_posts/linux使用systemd方式添加开机自动执行脚本.md","hash":"4393c1d7c94378199ac6683860a835e08a321f6d","modified":1745309882315},{"_id":"source/_posts/linux系统之间远程连接和传输文件.md","hash":"986b0a8922107fc904f8a6a200398ecda2e49a05","modified":1745309910517},{"_id":"source/_posts/tomcat解决java-lang-IllegalArgumentException-Invalid-character异常.md","hash":"dff9bf7ca2f2b45504e5fbd61d8493f7ba56e9e5","modified":1745310047488},{"_id":"source/_posts/nginx限制某个IP同一时间段的访问次数.md","hash":"facd3f7f83aba9e681de41605216a1ce11595270","modified":1745310031116},{"_id":"source/_posts/linux下nginx部署配置多站点.md","hash":"01ee4f97998f4bbabd149dc5fcbf1cc08b28825d","modified":1745309838548},{"_id":"source/_posts/pdfbox解析PDF文件.md","hash":"3f1228ae052494f7e09f62952c74c806615cbb1b","modified":1745310034220},{"_id":"source/_posts/nginx-rtmp-module-ffmpeg视频推流和rtsp转rtmp及hls.md","hash":"d13790883364f23cefab545f16434ab5305cc91c","modified":1745310021305},{"_id":"source/_posts/使用hexo創建和部署個人博客.md","hash":"32e8b778ea227114a4ac0ed1b8844520baa04a86","modified":1745549254241},{"_id":"source/about/index.md","hash":"7775344060828bef85ec8b6450fd6a2cd4eb8b82","modified":1745304361759},{"_id":"source/_posts/编译安装nginx添加rtmp模块.md","hash":"32ef251dd766fc3298e45458e59f8c802ddca0d5","modified":1745310086595},{"_id":"source/_posts/vscode配置前端vue开发环境.md","hash":"67d77890bca904028284d1dab41b77808f4f4d01","modified":1745310051348},{"_id":"source/categories/index.md","hash":"b0f809879550e089cf172105153d8cbfa9773e23","modified":1745304386777},{"_id":"source/_posts/远程tomcat配置jconsole连接监测jvm参数.md","hash":"f266b6172be2639783df3c082743457f0ad51678","modified":1745310091932},{"_id":"source/images/eslint.png","hash":"d96f83e95db59002459180d878c30b2eee09671a","modified":1745284720041},{"_id":"source/_posts/基于vue组件实现web端页面调用摄像头拍照.md","hash":"4161c203f00433a9d6d598319ce6c0f3258b4e78","modified":1745480967371},{"_id":"source/images/favicon.png","hash":"bf952c6228f82a7ecf3a71ac19396c1a5bd7f123","modified":1745284720043},{"_id":"source/images/git2.x.jpg","hash":"a60fa4a4d305105f17dc2591eea0ba46d7578d1f","modified":1745284720072},{"_id":"source/images/git1.x.jpg","hash":"554a219078b2011cf4a4d720097aa3de496c2bc7","modified":1745284720045},{"_id":"source/images/live2d_demo.jpg","hash":"2890d86259ad28a0d109bfb657f45aa830471d97","modified":1745488023412},{"_id":"source/images/prettier.png","hash":"5926d8e888835484036add4e16541c41eb3c6406","modified":1745284720112},{"_id":"source/tags/index.md","hash":"38e7a3f706e2e9c8ee70ca11253a9b9e2f4657b4","modified":1745284720148},{"_id":"source/live2d_models/fll/fll.physics3.json","hash":"61083b346458ecf372d7f3fa8786ce5a84566a85","modified":1701078398000},{"_id":"source/live2d_models/fll/fll.model3.json","hash":"9ab0fb0c7f237253163b5eb76c655cae7dbbcf54","modified":1701078398000},{"_id":"source/images/wechat_channel.jpg","hash":"36d28697808031fd26cc96bd7f368b5f64798b73","modified":1745475373567},{"_id":"source/live2d_models/fll/fll.cdi3.json","hash":"ed73f26f14105c2e05d4470ce1e09241287df2d4","modified":1701078398000},{"_id":"source/images/vscode.1.30.png","hash":"283dfd9e7d2e876c13bfa34d9ad476316e83ebe5","modified":1745284720145},{"_id":"source/images/hls-result.png","hash":"f4774c41b82aa0a02e95285dddfe8476aeec7ff1","modified":1745284720076},{"_id":"source/live2d_models/fll/fll.moc3","hash":"a7305178b32877338d6100401c6b9e66d1b63e1e","modified":1701078398000},{"_id":"source/images/rtmp-result.png","hash":"e3907881f94f08adbd78521c62790cd9de503a39","modified":1745284720137},{"_id":"source/images/m3u8-res.png","hash":"b9c164956f380d006bb9e4abb7240d252360baa1","modified":1745284720080},{"_id":"source/images/push_rtmp_res.png","hash":"afaa47fa0de44289ac30a384e74f10ca65ba260d","modified":1745284720117},{"_id":"source/images/push_to_rtsp.png","hash":"ac24c9193c13de755b822fdf2b9013f4d9ad5188","modified":1745284720133},{"_id":"source/images/rtsp_to_rtsp.png","hash":"f939a3f0df70d24fe477c6c36b6827f189f097f2","modified":1745284720142},{"_id":"themes/next/.gitattributes","hash":"aeeca2f1e987d83232d7870d1435a4e3ed66b648","modified":1745474384203},{"_id":"themes/next/.gitignore","hash":"087b7677078303acb2acb47432165950e4d29b43","modified":1745474384235},{"_id":"themes/next/_config.yml","hash":"1937f06a43c8fad4754b9fb5832560c74eff7123","modified":1745549256344},{"_id":"themes/next/.editorconfig","hash":"731c650ddad6eb0fc7c3d4a91cad1698fe7ad311","modified":1745474384202},{"_id":"themes/next/_vendors.yml","hash":"4674814e52c342bea7166687247f1c9ab0d87a33","modified":1745474384241},{"_id":"themes/next/package.json","hash":"afbaa8ed02dd2e2022bd6c40d0b669dc6798e012","modified":1745474384366},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1745474384242},{"_id":"themes/next/renovate.json","hash":"767b077c7b615e20af3cf865813cd64674a9bea6","modified":1745474384367},{"_id":"themes/next/.githooks/pre-commit","hash":"b69b9d0b51e27d5d4c87c3242f5067c2cda26e44","modified":1745474384209},{"_id":"themes/next/LICENSE.md","hash":"8cfb03967dd4cbaf3b825271ffce0039aa3fc22a","modified":1745474384237},{"_id":"themes/next/.stylelintrc","hash":"20f46858e47aba6b3fc47e9b43e9f7531fa66e33","modified":1745474384236},{"_id":"themes/next/README.md","hash":"baeaa3d4983ae5a6add10ad67c8971eee35e45ed","modified":1745474384238},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"2fdca1040427cabfe27cae6754ec5e027ec7092e","modified":1745474384213},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"82a3d202da8fe6ce765715bd5b7571676e90364d","modified":1745474384211},{"_id":"themes/next/.github/config.yml","hash":"0956bf71b6f36632b63b14d26580458041a5abd2","modified":1745474384222},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"610675119f83cdbf3f19d7996b17e33062e3b165","modified":1745474384221},{"_id":"themes/next/.github/label-commenter-config.yml","hash":"d403cbbbd0c554563e9e678ff82120ef9451d98a","modified":1745474384224},{"_id":"themes/next/docs/AUTHORS.md","hash":"579014d47f45b27fd1618b9709f0efe9585c7449","modified":1745474384245},{"_id":"themes/next/.github/labeler.yml","hash":"35da1a37e9a6bdee1eeae30a8816cd75c9a04b3b","modified":1745474384225},{"_id":"themes/next/docs/LICENSE.txt","hash":"d1cd5a8e83d3bbdb50f902d2b487813da95ddfd3","modified":1745474384246},{"_id":"themes/next/languages/bn.yml","hash":"30ffd43588ddf2cd39432d964087242e1c3e5407","modified":1745474384256},{"_id":"themes/next/languages/README.md","hash":"b1c96465b3bc139bf5ba6200974b66581d8ff85a","modified":1745474384254},{"_id":"themes/next/.github/release.yml","hash":"83b4dae3f8d76619e208d2110a247b3ccadd64d8","modified":1745474384226},{"_id":"themes/next/languages/ar.yml","hash":"c77fc13e0431e71eeb0f767a0a436284fc81df90","modified":1745474384255},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"533fbe6b2f87d7e7ec6949063bb7ea7eb4fbe52d","modified":1745474384223},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1745474384244},{"_id":"themes/next/languages/de.yml","hash":"5101612f7cac38884206d28319532f1aab32fbe6","modified":1745474384257},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1745474384259},{"_id":"themes/next/languages/en.yml","hash":"5ca2c0b3c95dd87485f2d2b3477f88810ad1a63b","modified":1745474384260},{"_id":"themes/next/languages/it.yml","hash":"4969c4f17d88003135218de72ddf0bf8d894dc07","modified":1745474384267},{"_id":"themes/next/languages/eo.yml","hash":"7bd0124c2d1dcdbfde350fce335e130556ebcee8","modified":1745474384261},{"_id":"themes/next/languages/id.yml","hash":"bd2c30def05a37c66653900ca07952d52a142961","modified":1745474384266},{"_id":"themes/next/languages/fa.yml","hash":"cc6ef3144b954daa29ce7d42f08191eafe052fab","modified":1745474384264},{"_id":"themes/next/languages/ja.yml","hash":"e660ec12b9eade103492aba7aa9b23ef06d353a9","modified":1745474384268},{"_id":"themes/next/languages/fr.yml","hash":"3a7469446f77e5d1a12eee828ebc49ecb43b6c35","modified":1745474384265},{"_id":"themes/next/languages/es.yml","hash":"31c2a47d14cd5b804cae0c0b44d43bece069d3aa","modified":1745474384263},{"_id":"themes/next/eslint.config.js","hash":"e35570c8e7ef9ea4adad7bafb3558dfd8e928e48","modified":1745474384253},{"_id":"themes/next/languages/nl.yml","hash":"4575f93c4ee4383bdfaca01ad6ffff5664cbbbae","modified":1745474384270},{"_id":"themes/next/languages/pt.yml","hash":"2c86b3235de9539df2119e52e913d847ecf782c0","modified":1745474384271},{"_id":"themes/next/languages/ko.yml","hash":"04927e331652ee13f9c8a110fe12d7f936a6b0e6","modified":1745474384269},{"_id":"themes/next/languages/pt-BR.yml","hash":"ff9aa6a6549d07b7dc667094f34a06945e2c21b4","modified":1745474384270},{"_id":"themes/next/languages/tk.yml","hash":"7b9115e0520dc81a95a7c8e4f56a01fc84f74017","modified":1745474384276},{"_id":"themes/next/languages/th.yml","hash":"dc434da945d52dc7a8d26acc80b23e6922712f89","modified":1745474384275},{"_id":"themes/next/languages/si.yml","hash":"07f98d6ca99bceef35254c60fc0e4401ff608557","modified":1745474384273},{"_id":"themes/next/languages/ru.yml","hash":"d726265bc5cf8bd4fb64f85b2d07b3326439bb00","modified":1745474384272},{"_id":"themes/next/languages/zh-CN.yml","hash":"c06c95121b3e5bd5abe01848073fbe7f9d6dcda9","modified":1745474384279},{"_id":"themes/next/languages/tr.yml","hash":"822ec400a0a2bb2245abf31e9ed4f3af77b2814e","modified":1745474384277},{"_id":"themes/next/languages/uk.yml","hash":"10a2f2e7183410d1d10fa937e3e0198b46bf4930","modified":1745474384278},{"_id":"themes/next/languages/vi.yml","hash":"8344cb90ee92a21a398faff3317c025a43446db5","modified":1745474384279},{"_id":"themes/next/languages/zh-HK.yml","hash":"293009343786f9b460412b7032e694755e5edc8d","modified":1745474384281},{"_id":"themes/next/layout/_layout.njk","hash":"e8dd48352cbdb8ade0fb4f9380c5fe3dab0a995e","modified":1745474384283},{"_id":"themes/next/languages/zh-TW.yml","hash":"664ebfa09503d29d6f33a5ffadaa16989785e0fe","modified":1745474384281},{"_id":"themes/next/layout/index.njk","hash":"fa52c3049871e879980cb6abccdea3792ca4ce70","modified":1745474384362},{"_id":"themes/next/layout/category.njk","hash":"82f541452cae76a94ee15cb8d8a888f44260a0fd","modified":1745474384361},{"_id":"themes/next/layout/post.njk","hash":"6767de9702a07a2a4e16a8a6bc9c5919536c1e3f","modified":1745474384364},{"_id":"themes/next/layout/archive.njk","hash":"aa491dba8f746e626c273a920effedf7d0b32170","modified":1745474384360},{"_id":"themes/next/layout/page.njk","hash":"d24238eea91a347050a663c7a7de8cebaab4c595","modified":1745474384364},{"_id":"themes/next/.githooks/install.js","hash":"72757c6827909a5f2c217ddbbdf6034ca6fab74a","modified":1745474384208},{"_id":"themes/next/layout/tag.njk","hash":"b6c017d30d08ddd30d66e9c6f3a71aa65d214eac","modified":1745474384365},{"_id":"themes/next/.github/workflows/labeler.yml","hash":"e8ca602587b3abe08b60fc1bdc1c2d62aeeb85bb","modified":1745474384230},{"_id":"themes/next/.github/workflows/codeql.yml","hash":"82a2df4c676ae45b2768c71c724b188475c88ca5","modified":1745474384228},{"_id":"themes/next/docs/ru/README.md","hash":"8dc4d61d563612928e338643665ac02807e380b9","modified":1745474384248},{"_id":"themes/next/.github/workflows/npm-publish.yml","hash":"924fd01157a0c00b7511d19a773696148e3bb490","modified":1745474384234},{"_id":"themes/next/.github/workflows/linter.yml","hash":"294660e1b6275a0fe4db2a44e5b6b679467d29fc","modified":1745474384231},{"_id":"themes/next/.github/workflows/label-commenter.yml","hash":"dc4809131c54a1d9f8e7392aeaf53b13c6befd90","modified":1745474384229},{"_id":"themes/next/.github/ISSUE_TEMPLATE/config.yml","hash":"daeedc5da2ee74ac31cf71846b766ca6499e9fc6","modified":1745474384217},{"_id":"themes/next/.github/workflows/lock.yml","hash":"80dc185dfaeb2927db72a44ff2382e05f47a2df5","modified":1745474384233},{"_id":"themes/next/.github/workflows/tester.yml","hash":"dba3f1d4bc4d2fab51d73d134ed5c7448a0976dc","modified":1745474384235},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"e077bebf4fb89b159b840b30f0230b95ff7db8a5","modified":1745474384249},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.yml","hash":"10eca518b91a19984f6a5a912d41222042f61d63","modified":1745474384219},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.yml","hash":"fbc3062cd4591c8329fab9db72803746f0d11920","modified":1745474384219},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.yml","hash":"3f19cbf0c2b2fee6bf3788870b842c9ccc1425ca","modified":1745474384216},{"_id":"themes/next/docs/zh-CN/README.md","hash":"da9f07f1578951f55dc18308280784aa0a686509","modified":1745474384251},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"a09ceb82b45dd8b7da76c227f3d0bb7eebe7d5d1","modified":1745474384250},{"_id":"themes/next/layout/_partials/comments.njk","hash":"60f4620dd479da6d86d1d493440e9e2a28b6e132","modified":1745474384287},{"_id":"themes/next/layout/_partials/footer.njk","hash":"cc51596980560ab60626da76260b7f5e83df8a33","modified":1745474384288},{"_id":"themes/next/layout/_scripts/index.njk","hash":"6379fb7776ba2a93eb0220e5fa2adee1e3c5d9b0","modified":1745474384318},{"_id":"themes/next/layout/_macro/post-collapse.njk","hash":"a60b386c7889f25f811182cae76e6474cb3254d1","modified":1745474384284},{"_id":"themes/next/layout/_partials/languages.njk","hash":"537026fc120adeef9148c98ebf074207e3810538","modified":1745474384298},{"_id":"themes/next/layout/_partials/widgets.njk","hash":"bb5d32170b469dc018ceaa10a5b7cb892c9b85a4","modified":1745474384316},{"_id":"themes/next/layout/_third-party/addtoany.njk","hash":"9ef81adb0c35ebdb4499602155e87611aee0762a","modified":1745474384320},{"_id":"themes/next/layout/_partials/pagination.njk","hash":"c55167bc0dbe7e104d4f4d782e98fcabc7e07a35","modified":1745474384304},{"_id":"themes/next/layout/_macro/sidebar.njk","hash":"b9fc0a6b02f0380de939d1ea2a7c7d2e6be9f462","modified":1745474384286},{"_id":"themes/next/layout/_macro/post.njk","hash":"775f264e8deb66653153117c8bd43854594cb36c","modified":1745474384285},{"_id":"themes/next/layout/_scripts/vendors.njk","hash":"71691096a1a034f6af68403730a1589c0d7fabaa","modified":1745474384319},{"_id":"themes/next/layout/_third-party/pace.njk","hash":"13b2a77b4858a127f458ea092b6f713b052befac","modified":1745474384347},{"_id":"themes/next/layout/_third-party/quicklink.njk","hash":"73bc15a9c3c5c239ab90efa19a1e721f41f3cb93","modified":1745474384348},{"_id":"themes/next/layout/_third-party/fancybox.njk","hash":"53ad3c31762b74e5d29787b37d5e494cc4fded9b","modified":1745474384341},{"_id":"themes/next/layout/_third-party/index.njk","hash":"9bab629e2971b029545511b48f397445858ac7f0","modified":1745474384342},{"_id":"themes/next/test/index.js","hash":"c0723bd61aed6872f184aa743b782dc0b9a172e1","modified":1745474384773},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"0c9a1fe9906672724dbf274154a37bac1915ca2c","modified":1745474384402},{"_id":"themes/next/scripts/filters/locals.js","hash":"87f3bff03fa9fd96cf0787a6442464a7ff57f76b","modified":1745474384405},{"_id":"themes/next/scripts/filters/minify.js","hash":"0f6b9b0eb41f6319e75ff86f9254cf1a9d3333b8","modified":1745474384407},{"_id":"themes/next/scripts/helpers/font.js","hash":"dd76be4927a77c27292a4790bcc659c10518a219","modified":1745474384413},{"_id":"themes/next/scripts/filters/post.js","hash":"e6cf4c94fc2291215a3345134ddbbc74d5091b00","modified":1745474384409},{"_id":"themes/next/scripts/events/index.js","hash":"8ae618d4436dab49928c2bebc0837e5310dbe7de","modified":1745474384369},{"_id":"themes/next/scripts/helpers/engine.js","hash":"b69e324ae9750cb35a4609c41b73d52177cc94e9","modified":1745474384411},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"ceff5e76564a5d6ed3e0222bccf581e106d80f3c","modified":1745474384422},{"_id":"themes/next/scripts/helpers/navigation.js","hash":"82f6e81bacf23d10cac71b09cff8708e47891ef3","modified":1745474384415},{"_id":"themes/next/scripts/tags/button.js","hash":"86c71c73a63744efbbbb367612871fede0d69529","modified":1745474384426},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"2a10b4b8879ccd7ea8b36253fe7a27f4161e6b82","modified":1745474384418},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"b4d12e6fe29089be0f43bafc9eea736602cd16bf","modified":1745474384430},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"652140814527db74bcde9110142824dc727be889","modified":1745474384431},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"8e912c715702addaf0cefe63e580e45b97ae8c3f","modified":1745474384428},{"_id":"themes/next/scripts/tags/index.js","hash":"1a680bb01e14152905efe3ef624621dd74cf27c3","modified":1745474384433},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"b139224ff2cc668f4d95bde184934833e05b29df","modified":1745474384439},{"_id":"themes/next/scripts/tags/label.js","hash":"c18b0e619a779ed40be7f014db92af18f45fbd5c","modified":1745474384435},{"_id":"themes/next/scripts/tags/link-grid.js","hash":"3f358bb78c5c6fdf45de287f3ead553e3a6a93c2","modified":1745474384436},{"_id":"themes/next/scripts/tags/note.js","hash":"a12fd53e421400836a3722ae69130969558d6ac0","modified":1745474384441},{"_id":"themes/next/scripts/tags/pdf.js","hash":"317ba4611020cc840854386dde098dbbe452777e","modified":1745474384442},{"_id":"themes/next/scripts/helpers/next-paginator.js","hash":"2e8dcc12a52517bb4e00ea611720bcd298624112","modified":1745474384420},{"_id":"themes/next/scripts/tags/video.js","hash":"f6ad3f52779f0636251238d3cbdc5b6f91cc5aba","modified":1745474384446},{"_id":"themes/next/scripts/tags/wavedrom.js","hash":"188c1dd5d7dbc566cac00946da86aa76fff1c682","modified":1745474384448},{"_id":"themes/next/source/css/_colors.styl","hash":"9354013ea89c8e3874a44929c394db39ae04f36a","modified":1745474384451},{"_id":"themes/next/scripts/tags/tabs.js","hash":"e0ed5fe1bc9d2957952a1aacdf3252d6ef3f9743","modified":1745474384445},{"_id":"themes/next/source/css/main.styl","hash":"c326550ce8b4deaa9b647bcfe3cdc04c100644e6","modified":1745474384560},{"_id":"themes/next/source/css/_mixins.styl","hash":"bb868086bf28029d2fb9f6d4abe620c382d66568","modified":1745474384528},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1745474384562},{"_id":"themes/next/scripts/helpers/next-vendors.js","hash":"12814eb1845830204e3a398eb93a2c15e0ff8d94","modified":1745474384424},{"_id":"themes/next/source/css/noscript.styl","hash":"64b378a4d2f0b36bf666fba13b57c59da3a8ac83","modified":1745474384561},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1745474384564},{"_id":"themes/next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1745474384563},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1745474384573},{"_id":"themes/next/source/images/logo-algolia-nebula-blue-full.svg","hash":"5a81f1c5d66561b3bcb05dae48148088a3fb5c79","modified":1745474384574},{"_id":"themes/next/source/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1745474384575},{"_id":"themes/next/source/js/bookmark.js","hash":"e2fd71f2876531f4c8bf1f38828aae35dd82cca4","modified":1745474384580},{"_id":"themes/next/source/js/config.js","hash":"211a9ab35205ccfa6b7c74394bade84da0d00af7","modified":1745474384586},{"_id":"themes/next/source/js/comments-buttons.js","hash":"81ea6cbcdf0357094753d7523919c1eafa38e79f","modified":1745474384582},{"_id":"themes/next/source/js/next-boot.js","hash":"feafaa8cd1305b773f793bd36dee71fd832044a2","modified":1745474384602},{"_id":"themes/next/source/js/comments.js","hash":"0b4daf0ce610760bd52e95d423f61f3e1c72442a","modified":1745474384584},{"_id":"themes/next/source/js/motion.js","hash":"a2abc7279723aee459b4c7a357fc84d5215affcf","modified":1745474384595},{"_id":"themes/next/source/js/sidebar.js","hash":"f3052996408a09233ffaf8d631fd930443ccd781","modified":1745474384610},{"_id":"themes/next/source/js/schedule.js","hash":"4858233224756e3cadfabd8135f7c4b1e3673b44","modified":1745474384607},{"_id":"themes/next/test/helpers/index.js","hash":"2fb58dca3df2fe53116ee2b1232fa26ebe7b2ce5","modified":1745474384761},{"_id":"themes/next/source/js/pjax.js","hash":"ca513ae9aa3ab3dfe46668f0717d9d37b571c5b7","modified":1745474384605},{"_id":"themes/next/test/helpers/next-url.js","hash":"4f39453286113d3d1e64bcc1934b5f974a33102d","modified":1745474384769},{"_id":"themes/next/test/helpers/font.js","hash":"f61d3a1de5261728398d2de57e33452cf7d93383","modified":1745474384743},{"_id":"themes/next/source/js/utils.js","hash":"381223fa6bba40d973550deb05bc409c3962338b","modified":1745474384737},{"_id":"themes/next/test/tags/caniuse.js","hash":"32f1ae9d49fcf0a1ebaa07f1f274aaf6f85b4699","modified":1745474384812},{"_id":"themes/next/test/tags/button.js","hash":"68b2f363286ce08e6b64d5d0d90aad6960e13a93","modified":1745474384797},{"_id":"themes/next/test/tags/mermaid.js","hash":"ff6751c3e77db4c80be9c03b896451b1fd1b185f","modified":1745474384876},{"_id":"themes/next/test/tags/group-pictures.js","hash":"1232c69689eee53b5b5926beb66f402a3bec5581","modified":1745474384841},{"_id":"themes/next/test/tags/center-quote.js","hash":"c073b7ee0f72d1c304522030a8eea68878adfcba","modified":1745474384821},{"_id":"themes/next/test/tags/index.js","hash":"5cad001936a694bf32d59751cc2b68a66199f976","modified":1745474384852},{"_id":"themes/next/test/tags/link-grid.js","hash":"8b0ce804b53329c0e76259a94a24c60a66b9f77b","modified":1745474384870},{"_id":"themes/next/test/tags/note.js","hash":"2c4127a43850d89fe13064ae26e3b45bc72b525d","modified":1745474384885},{"_id":"themes/next/layout/_partials/page/breadcrumb.njk","hash":"1fe44a1e156cd30e3e9fd8313e1011ad30970f83","modified":1745474384299},{"_id":"themes/next/test/tags/label.js","hash":"11c90db85fd373b08fd4241c3adfb19057e34025","modified":1745474384858},{"_id":"themes/next/layout/_partials/page/categories.njk","hash":"b352346dd2cb42f7eeaec5e39d9a2a353b029775","modified":1745474384300},{"_id":"themes/next/test/validate/index.js","hash":"9d44aff73371402574a8b61dda1037a58e382b52","modified":1745474384907},{"_id":"themes/next/layout/_partials/page/page-header.njk","hash":"92553feb26f30f7fc9147bc4ef122908a9da06be","modified":1745474384301},{"_id":"themes/next/layout/_partials/page/tags.njk","hash":"752df7d12360a077c51a25609916a3ecc1763bb3","modified":1745474384303},{"_id":"themes/next/layout/_partials/head/head.njk","hash":"e016c3f80db433f17781caf26e44f2089a71550a","modified":1745474384291},{"_id":"themes/next/layout/_partials/page/schedule.njk","hash":"6ec9c97e91c793cc2eb5ac0f7c3c36fdaaf637d1","modified":1745474384302},{"_id":"themes/next/layout/_partials/head/head-unique.njk","hash":"c2ee46d744afa78d95c6bca5dfcbb2fbc38474c2","modified":1745474384290},{"_id":"themes/next/test/tags/pdf.js","hash":"4303175f1702adabd445aec58101d48df8c1a3ba","modified":1745474384893},{"_id":"themes/next/layout/_partials/header/index.njk","hash":"1b2ae17f3c394ce310fe2d9ed5f4d07d8cc74ae7","modified":1745474384294},{"_id":"themes/next/layout/_partials/header/sub-menu.njk","hash":"20cb9c39bcdcfa3f710df7bc5838d6e62d4dd674","modified":1745474384297},{"_id":"themes/next/layout/_partials/header/menu-item.njk","hash":"62513f08e9e7f4abeaeedca91fd0af0861a2540f","modified":1745474384295},{"_id":"themes/next/layout/_partials/header/menu.njk","hash":"828700af2a2f273d3e3e0554ffc60706d889d539","modified":1745474384295},{"_id":"themes/next/layout/_partials/post/post-followme.njk","hash":"ebe45ab38ace03ea74eed3f676ec1cb5805a3c8a","modified":1745474384307},{"_id":"themes/next/layout/_partials/header/brand.njk","hash":"7bf2b6ab499775355bbf8f3ae597ff7bc00e89e4","modified":1745474384292},{"_id":"themes/next/layout/_partials/post/post-share.njk","hash":"8a6414987474592e82b3e57eeb0bd526ae42d235","modified":1745474384312},{"_id":"themes/next/layout/_partials/post/post-copyright.njk","hash":"22c922214982c4bb78ea92fa2ff1de93d98216a3","modified":1745474384306},{"_id":"themes/next/layout/_partials/post/post-meta.njk","hash":"9a9c4fb7e7c4fe4b7d474bdfdb4ed2b0a5423df2","modified":1745474384309},{"_id":"themes/next/layout/_partials/post/post-related.njk","hash":"9a7eda45ad0753d5f624c51a56e00277ba97c93d","modified":1745474384310},{"_id":"themes/next/layout/_partials/post/post-reward.njk","hash":"fd6fde597ea2fb7b80cffd0a3553c8e73acb8ab2","modified":1745474384311},{"_id":"themes/next/test/tags/tabs.js","hash":"2f809f250a0445671912ae0fd54bbb6c0f5e9880","modified":1745474384896},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.njk","hash":"3e80332f88b101141be69f2a07f54ed8c053eabb","modified":1745474384322},{"_id":"themes/next/layout/_third-party/analytics/cloudflare.njk","hash":"17173c45f0b740669ef45aaae1fe96eeb0a0ff52","modified":1745474384323},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.njk","hash":"52ad137450f7b3d6a330e16b3ed1c6174290f0eb","modified":1745474384324},{"_id":"themes/next/layout/_third-party/analytics/growingio.njk","hash":"9ff9ec05c2037beea229a6bb698f9e3546973220","modified":1745474384325},{"_id":"themes/next/layout/_partials/sidebar/site-overview.njk","hash":"8d76300e31178e790400a37adfaf9bc0e5f8fae7","modified":1745474384315},{"_id":"themes/next/layout/_third-party/analytics/microsoft-clarity.njk","hash":"2129a017a1b1ab751aca9c70e76461ad91b2a81e","modified":1745474384327},{"_id":"themes/next/layout/_third-party/analytics/index.njk","hash":"81abcf790cf97395cde9e3cd6d5d1aa5656bd134","modified":1745474384326},{"_id":"themes/next/layout/_third-party/analytics/matomo.njk","hash":"43238bc1bc2e88d707f8097814ef3ff830cbe641","modified":1745474384326},{"_id":"themes/next/layout/_third-party/analytics/umami.njk","hash":"c8b8c10dcf5c4ffa4a8aec5ba5892842ec204ac0","modified":1745474384330},{"_id":"themes/next/layout/_third-party/analytics/plausible.njk","hash":"64ed6fecae79f9f9c61e956d2bd077792473e069","modified":1745474384329},{"_id":"themes/next/layout/_third-party/comments/changyan.njk","hash":"5f7967bd946060f4102263a552ddfbae9975e7ea","modified":1745474384333},{"_id":"themes/next/layout/_third-party/comments/disqusjs.njk","hash":"c5086b4c35f730f82c99c4a8317f2f153ebde869","modified":1745474384335},{"_id":"themes/next/layout/_third-party/comments/disqus.njk","hash":"b0828dd1b1fd66ecd612d9e886a08e7579e9a4f7","modified":1745474384334},{"_id":"themes/next/layout/_third-party/comments/gitalk.njk","hash":"6fd4df5c21cfe530dbb0c012bc0b202f2c362b9c","modified":1745474384336},{"_id":"themes/next/layout/_third-party/comments/isso.njk","hash":"38badcc7624a13961381c2465478056b9602aee5","modified":1745474384337},{"_id":"themes/next/layout/_third-party/chat/chatra.njk","hash":"09d2c9487d75894d45a823e3237ae9f90fd6ee01","modified":1745474384331},{"_id":"themes/next/layout/_third-party/comments/utterances.njk","hash":"a7921be7328e1509d33b435175f5333a9aada66f","modified":1745474384340},{"_id":"themes/next/layout/_third-party/math/katex.njk","hash":"1df65b1390add93b86ae3f9423d96a130b0ece04","modified":1745474384344},{"_id":"themes/next/layout/_third-party/comments/livere.njk","hash":"b8e0d5de584cece5e05b03db5b86145aa1e422b4","modified":1745474384339},{"_id":"themes/next/layout/_partials/search/index.njk","hash":"10145ae7ef87b502d20bfa08beb2b899228f1419","modified":1745474384313},{"_id":"themes/next/layout/_third-party/chat/tidio.njk","hash":"3fbc72427c1211e5dcfd269af1a74852a7ba5c1a","modified":1745474384332},{"_id":"themes/next/layout/_third-party/search/localsearch.njk","hash":"210c32b654adae3d8076c4417d370b42af258cea","modified":1745474384350},{"_id":"themes/next/layout/_third-party/math/mathjax.njk","hash":"a62aa1ed4e35b8d0451d83f341bf0a97538bc9a4","modified":1745474384345},{"_id":"themes/next/layout/_third-party/search/algolia-search.njk","hash":"599f3f5e4385501d0010edc02ed9ca547d2467f7","modified":1745474384349},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"442df8a04f1967779cdd7599156496bdac8f1f23","modified":1745474384351},{"_id":"themes/next/test/tags/video.js","hash":"6ab9deb1d702bda3132e6c45fa5e6b51c79a7151","modified":1745474384900},{"_id":"themes/next/layout/_third-party/math/index.njk","hash":"1856c4b035c5b8e64300a11af0461b519dfc4cf4","modified":1745474384343},{"_id":"themes/next/layout/_third-party/statistics/index.njk","hash":"866ffa15a3250678eb8a90aa6f609fa965db90fd","modified":1745474384353},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.njk","hash":"8703d1855bb8d251c9b7c2940b7e3be525e53000","modified":1745474384355},{"_id":"themes/next/layout/_third-party/tags/pdf.njk","hash":"0386c708975cc5faea4f782611c5d2c6b8ac2850","modified":1745474384358},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"761760031e49edb77277bd4a8582774959240d6b","modified":1745474384383},{"_id":"themes/next/layout/_third-party/tags/mermaid.njk","hash":"dd8f963acd5a3685be46fd5319c06df0308d99b2","modified":1745474384356},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"1cb58aa6b88f7461c3c3f9605273686adcc30979","modified":1745474384388},{"_id":"themes/next/layout/_third-party/statistics/firestore.njk","hash":"af5336e8bbdc4638435971da115bb7443d374ade","modified":1745474384351},{"_id":"themes/next/layout/_third-party/tags/wavedrom.njk","hash":"baec18165d767094ecb2dda7141ca3bd8c6f2eb9","modified":1745474384359},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"550cc7f57bc3ab3d093e34741e7860222851d4d4","modified":1745474384386},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"3283bdd6e5ac7d10376df8ddd5faaec5dc1bd667","modified":1745474384390},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"96e58efba0dc76af409cc7d2db225f0fe4526ea8","modified":1745474384394},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"4dbe9652ae53a181c86eb7e9005a5255f0540055","modified":1745474384392},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"bb8ebb541c40362c0cbbd8e83d3b777302bb6c40","modified":1745474384398},{"_id":"themes/next/scripts/filters/comment/utterances.js","hash":"a50718c081685fd35ff8ea9ca13682c284399ed8","modified":1745474384399},{"_id":"themes/next/scripts/filters/comment/isso.js","hash":"c22cbccd7d514947e084eeac6a3af1aa41ec857a","modified":1745474384396},{"_id":"themes/next/scripts/events/lib/config.js","hash":"b4944b3272edecceedc3935f8606e810f9ff237e","modified":1745474384371},{"_id":"themes/next/scripts/events/lib/highlight.js","hash":"df360f546d59b1fee8926806268754433dfa5de7","modified":1745474384374},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"1f1ea7b579a49f17574c31d78d663c54896133eb","modified":1745474384376},{"_id":"themes/next/scripts/events/lib/vendors.js","hash":"af3e7066a7a8d87448aadde3bc9c848077aae418","modified":1745474384381},{"_id":"themes/next/scripts/events/lib/utils.js","hash":"da22c6008fc8d214ba8561b412233380a06c40f9","modified":1745474384379},{"_id":"themes/next/scripts/events/lib/navigation.js","hash":"0a2df7d40d64c61ce7e730bb8269b848b03526d1","modified":1745474384378},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"c4537fa2de33d98baff2c87a73801770414e0b69","modified":1745474384552},{"_id":"themes/next/source/css/_variables/base.styl","hash":"c4fda1066a429e77828f457aea5d5b06be3eeda6","modified":1745474384559},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"9cd228d5de7c2e49a231be072c9ef13af2dd95ff","modified":1745474384554},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"54c52744898eb5d2073b83f98bb1a61759da92dc","modified":1745474384555},{"_id":"themes/next/source/js/third-party/addtoany.js","hash":"5cff12a5c9fc55a68f0f57a291494cd738301ba4","modified":1745474384612},{"_id":"themes/next/source/css/_common/components/index.styl","hash":"49c3063b46d65796003a822deed971abee41675e","modified":1745474384454},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"f3defd56be33dba4866a695396d96c767ce63182","modified":1745474384472},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"f882924c7b99afc23106e39164516888b2972c7b","modified":1745474384452},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c42a1685b29650e0ab078a496b2bfe0a4483f922","modified":1745474384556},{"_id":"themes/next/source/js/third-party/fancybox.js","hash":"e3022c2ea60409a82a3e2a0d3615e4a25c684551","modified":1745474384651},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0951dfc96a5c4aca904142e7f1e57e2ad2dd2e10","modified":1745474384503},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"f768ecb2fe3e9384777c1c115cd7409e9155edd7","modified":1745474384504},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"6d740699fb6a7640647a8fd77c4ea4992d8d6437","modified":1745474384511},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"cf8446f4378dcab27b55ede1635c608ae6b8a5c8","modified":1745474384505},{"_id":"themes/next/source/css/_common/scaffolding/index.styl","hash":"43045d115f8fe95732c446aa45bf1c97609ff2a5","modified":1745474384509},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"b9388016f8d9274703e77e306a1feaad1b7b9d6c","modified":1745474384513},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"fd4a2d2303f107a021837aa6e3d977c2f9d14c42","modified":1745474384512},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"b9322d644b2090d793521555646673322f2dd5e8","modified":1745474384527},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"883a4f42badb7b206604eb2805ae582c3a511403","modified":1745474384489},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"ce25cb35779f29d01f7b7fc51ee09e68987ad318","modified":1745474384530},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"0bf248d61593fbcdfd83b018b92199f4da3699b1","modified":1745474384533},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"be9d0e9493802c22f16a0645a59d0c2b556c1c3c","modified":1745474384531},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"89bf3f6b82cb0fafbbd483431df8f450857c5a0b","modified":1745474384535},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"2db5ada757f7ffb9a36b06400cf30d80ec039b6e","modified":1745474384532},{"_id":"themes/next/source/css/_common/outline/index.styl","hash":"7782dfae7a0f8cd61b936fa8ac980440a7bbd3bb","modified":1745474384488},{"_id":"themes/next/source/js/third-party/pace.js","hash":"0ebee77b2307bf4b260afb06c060171ef42b7141","modified":1745474384659},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"e6e8892fccb02bff163d9b574984e0440a00d756","modified":1745474384537},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"68f8d30071516913a7a958e01d010e8a93f7aa24","modified":1745474384534},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"2d3e05015796a790abd9d68957a5c698c0c9f9b6","modified":1745474384541},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"2f19fe2aba8f63fc99641e50bcb96cc9a4feb8a4","modified":1745474384536},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2fb4b3f88e34a8544436a05634690217f9483419","modified":1745474384540},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"b26770e09de9b51c851bb90fae19b27860e7fc9f","modified":1745474384538},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"7a3b5cd21bc35d92358abb07fc0986722dd10881","modified":1745474384547},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1745474384542},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"36438f7b47d7ebd250a25f97c743fda484283046","modified":1745474384544},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"7125fb0dba920e89c3f7c1c07e2f7cce1fbdb703","modified":1745474384549},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b5c3dd08c520a16ee49f85fa12b4935e725ef261","modified":1745474384550},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"7905f428b46d100ac5928875cb1e2b99fa86fc0b","modified":1745474384551},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"3ab87229f9a8357446f77f05a0c6854fb5363fd5","modified":1745474384545},{"_id":"themes/next/source/js/third-party/analytics/baidu-analytics.js","hash":"f9579a02599de063ccff336177ba964a2931a6e9","modified":1745474384615},{"_id":"themes/next/source/js/third-party/analytics/growingio.js","hash":"f755e8537ccbbb0bd84c26923f320d4e206e7428","modified":1745474384620},{"_id":"themes/next/source/js/third-party/chat/tidio.js","hash":"77c231bcd64f1c09bd9989909e9fee703b65f47f","modified":1745474384631},{"_id":"themes/next/source/js/third-party/math/katex.js","hash":"5c63ec71458b4fe0cd98fd4a04e11c3746764f11","modified":1745474384654},{"_id":"themes/next/source/js/third-party/quicklink.js","hash":"5b0197e061f57e00875be3636ba372a67693abe0","modified":1745474384661},{"_id":"themes/next/source/js/third-party/comments/changyan.js","hash":"b4cb06fdf531292e2361398a98d75a4ca2b8473a","modified":1745474384637},{"_id":"themes/next/source/js/third-party/analytics/google-analytics.js","hash":"27a27de3d4e0d33e9c647f7ae78e1dd6d36d2463","modified":1745474384618},{"_id":"themes/next/source/js/third-party/chat/chatra.js","hash":"72e0766752b78a723fb30e92d533a8b353104e2d","modified":1745474384626},{"_id":"themes/next/source/js/third-party/analytics/matomo.js","hash":"f24604710002234f18a7b5cfe9ccdf3ed6e725a8","modified":1745474384623},{"_id":"themes/next/source/js/third-party/comments/isso.js","hash":"b9b9fd2f0e098a123b34a4932da912a9485ffe6c","modified":1745474384645},{"_id":"themes/next/source/js/third-party/comments/gitalk.js","hash":"1e8509356fb027d948d118ab220d9631f4d482fa","modified":1745474384643},{"_id":"themes/next/source/js/third-party/math/mathjax.js","hash":"d93556184b2c0aa1dbc4a6fb892d2f77b80d7d9f","modified":1745474384656},{"_id":"themes/next/source/js/third-party/comments/livere.js","hash":"68892d74ef5fc308c6e7e6b4f190826d79f3055d","modified":1745474384647},{"_id":"themes/next/source/js/third-party/comments/disqus.js","hash":"07e0038b221b9a4fd8ccac75093de3dee1f8315e","modified":1745474384639},{"_id":"themes/next/source/js/third-party/comments/disqusjs.js","hash":"5673d28509a8e837a512da490a88b7bf5162fc49","modified":1745474384641},{"_id":"themes/next/source/js/third-party/search/algolia-search.js","hash":"9486f0ba64182ce1a5b2524c10d02e0b992c7300","modified":1745474384664},{"_id":"themes/next/source/js/third-party/search/local-search.js","hash":"9f07ea758044afea0a293d75e6585ad65888fb71","modified":1745474384666},{"_id":"themes/next/source/js/third-party/comments/utterances.js","hash":"ec44d7f1c8b51b0aa3cccba099a78f3575ac828c","modified":1745474384649},{"_id":"themes/next/source/js/third-party/statistics/firestore.js","hash":"ce12b5007c9aa997738641c06a1c081c357e27bd","modified":1745474384670},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"a87245394f946b607852ddcffb6ef8d5ff9f6561","modified":1745474384466},{"_id":"themes/next/source/css/_common/components/post/post-footer.styl","hash":"8aff582c5b8e17b99ad61298192a9e6564409211","modified":1745474384466},{"_id":"themes/next/source/js/third-party/statistics/lean-analytics.js","hash":"7db3233f0b33870943ce1547326a67f9e628b411","modified":1745474384675},{"_id":"themes/next/source/css/_common/components/post/index.styl","hash":"aa04527f76de7646573ea327d4f6145200d6070d","modified":1745474384462},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"8798669728f20843b100dbea65c70247fe978efc","modified":1745474384468},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"6ad0da4a5585508abbe78342a680607face98e19","modified":1745474384469},{"_id":"themes/next/source/js/third-party/tags/wavedrom.js","hash":"9cafc8f751581d496f1f3c056b95f3b8e1ebbf4e","modified":1745474384728},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"0a698c3adba896a46e26850967cb73295c521940","modified":1745474384470},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"c34936a17c3d8af6c0988ac6746d7509dc0b50eb","modified":1745474384467},{"_id":"themes/next/source/css/_common/components/post/post-body.styl","hash":"9fe9eb46d11cc772e37c067fcffe1b8e7ae10c31","modified":1745474384463},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fde10ce94e9ae21a03b60d41d532835b54abdcb1","modified":1745474384456},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"c524d5990a8e7ed9caf17978cf372bb0646f7b9f","modified":1745474384464},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"f9fe39bef5fb2565abbffcb26390868c13d18359","modified":1745474384457},{"_id":"themes/next/source/css/_common/components/pages/index.styl","hash":"6cf78a379bb656cc0abb4ab80fcae60152ce41ad","modified":1745474384458},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"69dff7cf231d01f85671758455726dd666664a73","modified":1745474384469},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"406c03be3cf8a8411227bc1fecf942ca368f7e2a","modified":1745474384474},{"_id":"themes/next/source/css/_common/components/third-party/index.styl","hash":"8a7b70ef14c7110aaceb30ea2f7eb4b202f0f0cd","modified":1745474384475},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"091b8c763e43447d087c122a86538f290f83136a","modified":1745474384459},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"56d719bcdcba3d725141c55bbd4b168f3942f912","modified":1745474384460},{"_id":"themes/next/source/css/_common/components/third-party/disqusjs.styl","hash":"a2ffaa06c963514a79fda52665e707af6e8e2f5e","modified":1745474384473},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"1e5776ad4c5c8bcf7596ac74dcabc30704b3f5a0","modified":1745474384476},{"_id":"themes/next/source/css/_common/components/third-party/utterances.styl","hash":"d28856f365a9373c4ae6fe1e5673d63df2dfd65f","modified":1745474384478},{"_id":"themes/next/source/js/third-party/tags/mermaid.js","hash":"5ef9da034f3ec3b5b66137101ddcff0b2687ed69","modified":1745474384685},{"_id":"themes/next/source/css/_common/scaffolding/highlight/fold.styl","hash":"41c0516f76513036e30a70509a6d33e8a79bdba2","modified":1745474384507},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9394674b2c1e256ba93235c0dae492a8a3e850bb","modified":1745474384477},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"4d674c513300187bd3c08ecaf60358107e91c41d","modified":1745474384506},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"8d9218980e185210ce034e9769ab639b9630fd88","modified":1745474384517},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"6b3680e0dbea8e14c1cec24ef63b7fae5e37f7ef","modified":1745474384516},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"531daf2612c6217950677a2d03924459ce57c291","modified":1745474384519},{"_id":"themes/next/source/css/_common/outline/footer/index.styl","hash":"39066b4e2e914d85736c9c33fa51f21a3f86c0e4","modified":1745474384480},{"_id":"themes/next/source/css/_common/scaffolding/tags/index.styl","hash":"1772ade171aa6bd806909d69003cfc498c3af019","modified":1745474384518},{"_id":"themes/next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"c7754dc6c866928b538f0863a05b96ec44b5e986","modified":1745474384520},{"_id":"themes/next/source/css/_common/scaffolding/highlight/index.styl","hash":"79e246b65cef7e32bfe4b9d32516bad1f1eabda0","modified":1745474384508},{"_id":"themes/next/source/css/_common/scaffolding/tags/wavedrom.styl","hash":"2f4c791b5999b2e1a707bd473c1db7c21d206a27","modified":1745474384526},{"_id":"themes/next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"7efdc07cf0311108c34fb8815eb890954757d351","modified":1745474384520},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"77122986509a6b4968bae2729417b7016137534c","modified":1745474384522},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"63910d15fa2b1df112aee0c4629955f157a077a4","modified":1745474384522},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"bcc0d3482f2faa4552d38de51480ea7f92f6c821","modified":1745474384523},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"c8648c8ea3105556be0068d9fb2735261d0d94bc","modified":1745474384482},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"05af22f3edc2383a3d97ec4c05e9ac43b014bead","modified":1745474384482},{"_id":"themes/next/source/js/third-party/tags/pdf.js","hash":"e109c2d6828f527f0289d5fa3bb02fce63ee6d93","modified":1745474384712},{"_id":"themes/next/source/css/_common/outline/header/index.styl","hash":"038625515ba4760e4dda6792549bddc0db5a3d20","modified":1745474384484},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"f4de9eb94bebdf7790522e103de51205a64cae9e","modified":1745474384485},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"f5c1a6afcd2d460ccd5987ef1af747fc99d3ea72","modified":1745474384496},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"dce8ea62d7d7b08a0444fbb2f617be30bfcfc152","modified":1745474384486},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"d9bc2b520636b9df7f946295cd430593df4118ff","modified":1745474384487},{"_id":"themes/next/source/css/_common/outline/sidebar/related-posts.styl","hash":"b3689beb90cda64cafecaf6b25981fe8a9525992","modified":1745474384492},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"63fb6d36d9ea62c7e39274c666e102b12f64ff77","modified":1745474384493},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"69869f1e317d78c03b3ef3a13e553d2c4ad04caf","modified":1745474384495},{"_id":"themes/next/source/css/_common/outline/sidebar/index.styl","hash":"7a47adf10809dff5cbaa6732cf6aa273e4673fd0","modified":1745474384491},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-copyright.styl","hash":"a6fbede106afe30a9a7918b52ea8233e020b1382","modified":1745474384497},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"8f82d5141a18f6319e0609a3f6e4fcca6d442203","modified":1745474384498},{"_id":"source/images/push_to_rtmp.png","hash":"f69ae437ea0589f93ed48151019d44a65e752f4c","modified":1745284720123},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"d8a028f532d562e6a86bb3b9c7b992e4b6dbbb51","modified":1745474384494},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"794eabec62d6070255fa10516487cff70e0030bf","modified":1745474384500},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"cbc6b0938a2e60f35a5df32210904fb16e4938da","modified":1745474384499},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2de038def2cb91da143b14696366c14a66e0e569","modified":1745474384500},{"_id":"source/images/build_push_rtsp.jpg","hash":"c8650f50dafac3573190921e1f556ae909b990fd","modified":1745284720039},{"_id":"source/avatar/avator.jpg","hash":"268c0cbfd27f0436a7b8a5a8c19d41be83b469b8","modified":1745284720028},{"_id":"source/images/photo.gif","hash":"980a75ec13a510a52be715ea8da7d6921856a871","modified":1745284720110},{"_id":"source/live2d_models/fll/fll.4096/texture_00.png","hash":"28c6112a8767907eaa3482cf336c267419e71e92","modified":1701078398000},{"_id":"public/live2d_models/fll/fll.cdi3.json","hash":"40d8c55306854c99e1cd1acf2a47787e05988e84","modified":1745549513057},{"_id":"public/live2d_models/fll/fll.physics3.json","hash":"1fdeaa94c2a71184c92e1e80984c5ea329375398","modified":1745549513057},{"_id":"public/live2d_models/fll/fll.model3.json","hash":"9d40529e6a1c2e2b98b8a28e4c99b36a6c6427b3","modified":1745549513057},{"_id":"public/search.json","hash":"ed79092a41ee38b8f2c46bc784ff5904323c4904","modified":1745549513057},{"_id":"public/categories/index.html","hash":"cba4a1eb70be252ddbbc3ebe7ad695a79530889a","modified":1745549513057},{"_id":"public/about/index.html","hash":"471db0c2911515f498205674e328a15b09e0ab51","modified":1745549513057},{"_id":"public/tags/index.html","hash":"958374bcccc9a34209f228aed68b673d61bae978","modified":1745549513057},{"_id":"public/2025/04/24/使用hexo創建和部署個人博客/index.html","hash":"577bd77b355d3ce47126cfc517201d499c2bf18a","modified":1745549513057},{"_id":"public/2019/06/26/linux使用systemd方式添加开机自动执行脚本/index.html","hash":"e719bf446601b2337c6f1c12898e8c58585a4821","modified":1745549513057},{"_id":"public/2025/04/10/jsp訪問API報錯PKIX path building failed，JAVA添加信任SSL證書/index.html","hash":"f5378416d1b6c7e741e7de44017dc382f44f82b1","modified":1745549513057},{"_id":"public/2019/06/01/编译安装nginx添加rtmp模块/index.html","hash":"48132b7d0ca9ac4b49b90436e83a7cf6df78ec45","modified":1745549513057},{"_id":"public/2019/05/31/nginx-rtmp-module-ffmpeg视频推流和rtsp转rtmp及hls/index.html","hash":"c7fc53a17b8630ec6f4b729080f63a1a95e8122c","modified":1745549513057},{"_id":"public/2019/05/29/deepin-linux下初识docker/index.html","hash":"1f11ff2a38f0f0a884c34d3cd883c154f36590db","modified":1745549513057},{"_id":"public/2019/05/14/pdfbox解析PDF文件/index.html","hash":"56cf1dd8aa61dbbf49abc123e4a6da7317b900a0","modified":1745549513057},{"_id":"public/2019/04/27/MySQL中utf8和utf8mb4区别对emoji支持/index.html","hash":"62eda917a6adb2b664e68d24ab918a3d0f9c0819","modified":1745549513057},{"_id":"public/2019/04/22/nginx限制某个IP同一时间段的访问次数/index.html","hash":"a46d2480e9b547484df4d116e2f0da94d967313d","modified":1745549513057},{"_id":"public/2019/03/16/git常用的使用总结/index.html","hash":"d66019b67f943ec58b118f5573aa5fdc7780a431","modified":1745549513057},{"_id":"public/2019/02/21/tomcat解决java-lang-IllegalArgumentException-Invalid-character异常/index.html","hash":"91d6f78a1280c632d2aabeee39282ef6a4032adf","modified":1745549513057},{"_id":"public/2018/12/11/axis2调用webservice/index.html","hash":"16372e595f8144437d8aaf83489e5f74fe36cb87","modified":1745549513057},{"_id":"public/2018/09/05/debian系系统编译CuraEngine引擎/index.html","hash":"917c6b340f78fbf4df01ae36bd4b708a5489ea2d","modified":1745549513057},{"_id":"public/2018/12/13/vscode配置前端vue开发环境/index.html","hash":"bbe1b8b5b352aa6da6d46b2357865bedacb6729b","modified":1745549513057},{"_id":"public/2019/01/17/基于vue组件实现web端页面调用摄像头拍照/index.html","hash":"bc5b0e3b7a1958f757e5b202147ec4c4819a17b5","modified":1745549513057},{"_id":"public/2018/08/20/远程tomcat配置jconsole连接监测jvm参数/index.html","hash":"9c958ce40ded4c40d71bf0b4d82160c3bea795a7","modified":1745549513057},{"_id":"public/2018/08/07/linux系统之间远程连接和传输文件/index.html","hash":"e4cbd8ddf8a205aaa521a25a9f9899851afad1ab","modified":1745549513057},{"_id":"public/2018/08/03/MySQL新版本设置root密码和重置root密码/index.html","hash":"33e5997c26dc7636c30ad0e60acce6988c26e14d","modified":1745549513057},{"_id":"public/2018/06/12/java实现图片的灰度化处理/index.html","hash":"854916de2850d5a1e7e00f424e83a392ac562ebc","modified":1745549513057},{"_id":"public/2018/06/25/atom配置vue前端开发环境/index.html","hash":"3d86f6b1eb743ce9cf5ebb44f31b7ebd5dbbf8c2","modified":1745549513057},{"_id":"public/2018/06/12/MySQL设置用户远程登录/index.html","hash":"8c9ca7d363cec0a98d76dc3008fdb5e9b085fb52","modified":1745549513057},{"_id":"public/2018/05/20/Shell基础/index.html","hash":"a50d3f77c0136c1b24c9352e6cdd27da7a65c697","modified":1745549513057},{"_id":"public/2018/05/20/Linux常用压缩解压缩/index.html","hash":"5d62c0cf07e5fb04c85f854ad32df1a978ab9b36","modified":1745549513057},{"_id":"public/2018/05/13/JDK/index.html","hash":"990234f865c864ef46f0e7a208ea6ec69034a13c","modified":1745549513057},{"_id":"public/2018/05/13/linux下nginx部署配置多站点/index.html","hash":"ef736a97bd6367ebc80227b4a61f811338f529d4","modified":1745549513057},{"_id":"public/2018/05/13/Linux下安装maven/index.html","hash":"2a616863b2233cd4d040530ea85ab45482034017","modified":1745549513057},{"_id":"public/2018/05/13/Linux增加使用文件代替swap分区分方法/index.html","hash":"f5d0aa706843afdc9a92b88f3609b91e2fee5ca8","modified":1745549513057},{"_id":"public/2018/05/13/MySQL字段值默认不区分大小写问题/index.html","hash":"410743380d438605f2a8765cef22a1473b6d9ce2","modified":1745549513057},{"_id":"public/2018/05/12/Linux下安装nodejs/index.html","hash":"0fd4838c14275c8b966091979302c26d10c8266b","modified":1745549513057},{"_id":"public/archives/index.html","hash":"d0c10517034b1a17e712e7b54364a117ea8c894c","modified":1745549513057},{"_id":"public/archives/page/2/index.html","hash":"970ac4a21cf707bdf4fdb6edd085617ee39c0ce4","modified":1745549513057},{"_id":"public/archives/page/3/index.html","hash":"4a7cd4f86eadfc9e6d010315a65cfcad8c3be5a4","modified":1745549513057},{"_id":"public/archives/2018/index.html","hash":"7e3fa3515d7b5f7f9959712ab8f75cbc0c2ba710","modified":1745549513057},{"_id":"public/archives/2018/page/2/index.html","hash":"bbaf464a42eb5d673c74f89d0170d35e52ca1b87","modified":1745549513057},{"_id":"public/archives/2018/05/index.html","hash":"76513d7c99b2eb3261b2fd00965af809217bb7e8","modified":1745549513057},{"_id":"public/archives/2018/06/index.html","hash":"ca9c7054f5691e356290f87ec0721ac236ca5070","modified":1745549513057},{"_id":"public/archives/2018/08/index.html","hash":"5e6705c5972326905273b666a9b5d13b836359ee","modified":1745549513057},{"_id":"public/archives/2018/09/index.html","hash":"e3bee0224f0323a95061417aa27df565239cf459","modified":1745549513057},{"_id":"public/archives/2018/12/index.html","hash":"4a59cbb84b42d28bf7750197a4c2b37da41ad9a0","modified":1745549513057},{"_id":"public/archives/2019/index.html","hash":"1bba37f2dc1c55640f5e61fddc53b30cdf37fb37","modified":1745549513057},{"_id":"public/archives/2019/01/index.html","hash":"acd69707bed8d3a4ca6462ed296be58fbea19be7","modified":1745549513057},{"_id":"public/archives/2019/02/index.html","hash":"1c91b429b0165ebf2f466211ba90494732cd4c35","modified":1745549513057},{"_id":"public/archives/2019/03/index.html","hash":"3ffcdcca10f4c8d9d037060e50fb34502091b3ae","modified":1745549513057},{"_id":"public/archives/2019/04/index.html","hash":"8c46167bd4989a5f49dc9463c70f669183a00bf3","modified":1745549513057},{"_id":"public/archives/2019/05/index.html","hash":"1757502ff765ba664a609ef8ca71148f65190538","modified":1745549513057},{"_id":"public/archives/2019/06/index.html","hash":"6037bab2b4e103ab1f82957ebe9f7d034045d902","modified":1745549513057},{"_id":"public/archives/2025/index.html","hash":"8b3a61e39fe4a4ba39248f96ecf57c8eceadce8e","modified":1745549513057},{"_id":"public/archives/2025/04/index.html","hash":"e063812dc1654ced3bcebcc994d7399e9c91d8f3","modified":1745549513057},{"_id":"public/index.html","hash":"a4838179340858e5e7f2cfddf58be8c4aa207bcd","modified":1745549513057},{"_id":"public/page/2/index.html","hash":"fa4bd19973445947a4064cda0a0f3f66c61077e1","modified":1745549513057},{"_id":"public/page/4/index.html","hash":"08f7faaf308a05bd33c0f32a7a8ca7583c322b44","modified":1745549513057},{"_id":"public/page/3/index.html","hash":"13cbbf14ae2792226915db255532711684a87a55","modified":1745549513057},{"_id":"public/page/5/index.html","hash":"7b6a0bf0bdb12ce743035cd95a027301aa6c4cec","modified":1745549513057},{"_id":"public/page/6/index.html","hash":"9a245569bebca9744797d122f631221de7470b25","modified":1745549513057},{"_id":"public/tags/linux/index.html","hash":"b264b61a5cca1e2c15d51c80400045820ee2dfac","modified":1745549513057},{"_id":"public/tags/linux/page/2/index.html","hash":"52fafad897899f824bfa211b20628da7480a5bc2","modified":1745549513057},{"_id":"public/tags/java/index.html","hash":"0d0288f6e5ec721945af3c72c9ae7b2771cc9e57","modified":1745549513057},{"_id":"public/tags/jdk/index.html","hash":"2fe1e9d200f72ff6313dd2658c9a1499ffa58f6d","modified":1745549513057},{"_id":"public/tags/maven/index.html","hash":"157a35467c04ff7e1171b1cd8b30ffc8f9de87d7","modified":1745549513057},{"_id":"public/tags/swap/index.html","hash":"a99fdfe5040d394c414028d4daf877bc7428ff03","modified":1745549513057},{"_id":"public/tags/nodejs/index.html","hash":"1daec407692d7b3aad49e2336c7edc7c3e08e04c","modified":1745549513057},{"_id":"public/tags/MySQL/index.html","hash":"d20a6edaa2a4a6d3f04ee4915884c84058d3d6be","modified":1745549513057},{"_id":"public/tags/shell/index.html","hash":"8ebfabdc08e5f5921a44396e50725b95d99498bc","modified":1745549513057},{"_id":"public/tags/axis2/index.html","hash":"d45c72bc66ef5f6793cae0e66e347b22285f60e0","modified":1745549513057},{"_id":"public/tags/WebService/index.html","hash":"27b4cc6e510b9d121db3f96ddb7ea488b2124529","modified":1745549513057},{"_id":"public/tags/atom/index.html","hash":"39818d52a518c278b747026dfb00c66e29be9b52","modified":1745549513057},{"_id":"public/tags/docker/index.html","hash":"b624a2abbf2372a0a6d589488fac5e44862a681b","modified":1745549513057},{"_id":"public/tags/Git/index.html","hash":"c224bfb11fa29c2435057534b44d4556e4b0f2c7","modified":1745549513057},{"_id":"public/tags/nginx/index.html","hash":"c1441b76a1cb082bcb97fc76e1e6e54283c4fbe5","modified":1745549513057},{"_id":"public/tags/jsp/index.html","hash":"2fd484666d27f0aa87cf4616e36ae6ba26b40e6e","modified":1745549513057},{"_id":"public/tags/SSL/index.html","hash":"b2993e58be3206aece6c9a9f6b56fbd6c1bc8b8e","modified":1745549513057},{"_id":"public/tags/Certification/index.html","hash":"2dba2307e3b20889e4a85ea666a5ac0adf3fbc21","modified":1745549513057},{"_id":"public/tags/JAVA/index.html","hash":"67662040b4efc1d18fe4a301bf0af483a2176239","modified":1745549513057},{"_id":"public/tags/rtmp/index.html","hash":"78b4d0426c0e72070778a6f19b1c337511dbd43e","modified":1745549513057},{"_id":"public/tags/rtsp/index.html","hash":"21c409005a8532b53da4d1932396094e8871b3d0","modified":1745549513057},{"_id":"public/tags/ffmpeg/index.html","hash":"b0a456a4b93f3a0477527afd1f39062b5c39595e","modified":1745549513057},{"_id":"public/tags/pdfbox/index.html","hash":"cbfe671b6d57c225b33883cd318e15abac68e1f3","modified":1745549513057},{"_id":"public/tags/pdf/index.html","hash":"bb08d23eaac35c53d50e3c204e9df17bfb8a4917","modified":1745549513057},{"_id":"public/tags/tomcat/index.html","hash":"83f60c5929bf549787148e77a54df413b036ec20","modified":1745549513057},{"_id":"public/tags/vscode/index.html","hash":"b7c325f61a0295445f4c9e5ddb9d77e3b61d37ae","modified":1745549513057},{"_id":"public/tags/vue/index.html","hash":"ced6cc909684b66a3ca94c488a7018fbb91411e4","modified":1745549513057},{"_id":"public/tags/web/index.html","hash":"2b73c835fad127794f5ed0a42e9405ad68f98c6a","modified":1745549513057},{"_id":"public/tags/hexo/index.html","hash":"1d9857d9173a79a986bb8f74f11a25819778bace","modified":1745549513057},{"_id":"public/tags/jconsole/index.html","hash":"01ca600175c858320552789e3a2bbeedb7a984d4","modified":1745549513057},{"_id":"public/tags/jvm/index.html","hash":"94cc329431f4141f0eb25b7fe3e0a8e6c5d918ce","modified":1745549513057},{"_id":"public/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1745549513057},{"_id":"public/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1745549513057},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1745549513057},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1745549513057},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1745549513057},{"_id":"public/images/eslint.png","hash":"d96f83e95db59002459180d878c30b2eee09671a","modified":1745549513057},{"_id":"public/images/favicon.png","hash":"bf952c6228f82a7ecf3a71ac19396c1a5bd7f123","modified":1745549513057},{"_id":"public/images/logo-algolia-nebula-blue-full.svg","hash":"5a81f1c5d66561b3bcb05dae48148088a3fb5c79","modified":1745549513057},{"_id":"public/images/git1.x.jpg","hash":"554a219078b2011cf4a4d720097aa3de496c2bc7","modified":1745549513057},{"_id":"public/images/live2d_demo.jpg","hash":"2890d86259ad28a0d109bfb657f45aa830471d97","modified":1745549513057},{"_id":"public/images/prettier.png","hash":"5926d8e888835484036add4e16541c41eb3c6406","modified":1745549513057},{"_id":"public/images/wechat_channel.jpg","hash":"36d28697808031fd26cc96bd7f368b5f64798b73","modified":1745549513057},{"_id":"public/images/git2.x.jpg","hash":"a60fa4a4d305105f17dc2591eea0ba46d7578d1f","modified":1745549513057},{"_id":"public/css/main.css","hash":"12553f7b96f7878d6c653f0ab7651d6af0fa5059","modified":1745549513057},{"_id":"public/css/noscript.css","hash":"4cd5301e478e0e0d4b176740ec314087ec5cb707","modified":1745549513057},{"_id":"public/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1745549513057},{"_id":"public/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1745549513057},{"_id":"public/js/motion.js","hash":"6f751f5c9499a39d7c5e1d323db3260342dd9431","modified":1745549513057},{"_id":"public/js/bookmark.js","hash":"9ba4cceafd12c6d5ba8a6b986a046ef8319a7811","modified":1745549513057},{"_id":"public/js/sidebar.js","hash":"2ee359ae48273b01ba1e0768704524e08702c7eb","modified":1745549513057},{"_id":"public/js/schedule.js","hash":"a1333258726caf84f368a8f8454639c7dc1626bb","modified":1745549513057},{"_id":"public/js/next-boot.js","hash":"523bbaeda463e82ab0be428cc0005717038ec63e","modified":1745549513057},{"_id":"public/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1745549513057},{"_id":"public/js/utils.js","hash":"345a8158e6c34e19245a07c778f5699c8673f1b1","modified":1745549513057},{"_id":"public/js/pjax.js","hash":"694b271819aab37ce473b15db9e6aded971d82e5","modified":1745549513057},{"_id":"public/js/third-party/addtoany.js","hash":"5276c8f78ee562a8965216dc67d762e59cb4a9f2","modified":1745549513057},{"_id":"public/images/vscode.1.30.png","hash":"283dfd9e7d2e876c13bfa34d9ad476316e83ebe5","modified":1745549513057},{"_id":"public/js/third-party/fancybox.js","hash":"819f382c561fe5ec23c67cc5fabd63dd1cc22dc1","modified":1745549513057},{"_id":"public/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1745549513057},{"_id":"public/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1745549513057},{"_id":"public/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1745549513057},{"_id":"public/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1745549513057},{"_id":"public/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1745549513057},{"_id":"public/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1745549513057},{"_id":"public/js/third-party/analytics/google-analytics.js","hash":"def07bcc7c17d8a0caad177fb1dd2f3a5e5b3536","modified":1745549513057},{"_id":"public/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1745549513057},{"_id":"public/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1745549513057},{"_id":"public/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1745549513057},{"_id":"public/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1745549513057},{"_id":"public/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1745549513057},{"_id":"public/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1745549513057},{"_id":"public/js/third-party/comments/disqus.js","hash":"da361917d65e5dca8362f8cdeb6c8cc0e8316cec","modified":1745549513057},{"_id":"public/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1745549513057},{"_id":"public/js/third-party/comments/disqusjs.js","hash":"1e826dea3f684c0515f362dc1352447a1f0eae71","modified":1745549513057},{"_id":"public/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1745549513057},{"_id":"public/js/third-party/search/local-search.js","hash":"3968d972f47b79acc6c3fe44028bad77c9c5aab7","modified":1745549513057},{"_id":"public/js/third-party/tags/wavedrom.js","hash":"40dcd10df6edf124088c329346e0cc0bdac74ef1","modified":1745549513057},{"_id":"public/js/third-party/search/algolia-search.js","hash":"1905978ef587bf08fe088ce4693a4c08db07cfbb","modified":1745549513057},{"_id":"public/js/third-party/statistics/firestore.js","hash":"6e0682bb42170d61b13b786295f45f9c785f8b73","modified":1745549513057},{"_id":"public/js/third-party/statistics/lean-analytics.js","hash":"835cbf54c49ef1327f47df70ff2636ad36b6f57d","modified":1745549513057},{"_id":"public/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1745549513057},{"_id":"public/js/third-party/tags/mermaid.js","hash":"df01075f52302873f7de36050b5408c8d1afb452","modified":1745549513057},{"_id":"public/images/hls-result.png","hash":"f4774c41b82aa0a02e95285dddfe8476aeec7ff1","modified":1745549513057},{"_id":"public/images/rtmp-result.png","hash":"e3907881f94f08adbd78521c62790cd9de503a39","modified":1745549513057},{"_id":"public/live2d_models/fll/fll.moc3","hash":"a7305178b32877338d6100401c6b9e66d1b63e1e","modified":1745549513057},{"_id":"public/images/m3u8-res.png","hash":"b9c164956f380d006bb9e4abb7240d252360baa1","modified":1745549513057},{"_id":"public/images/push_rtmp_res.png","hash":"afaa47fa0de44289ac30a384e74f10ca65ba260d","modified":1745549513057},{"_id":"public/images/push_to_rtsp.png","hash":"ac24c9193c13de755b822fdf2b9013f4d9ad5188","modified":1745549513057},{"_id":"public/images/rtsp_to_rtsp.png","hash":"f939a3f0df70d24fe477c6c36b6827f189f097f2","modified":1745549513057},{"_id":"public/images/push_to_rtmp.png","hash":"f69ae437ea0589f93ed48151019d44a65e752f4c","modified":1745549513057},{"_id":"public/images/build_push_rtsp.jpg","hash":"c8650f50dafac3573190921e1f556ae909b990fd","modified":1745549513057},{"_id":"public/avatar/avator.jpg","hash":"268c0cbfd27f0436a7b8a5a8c19d41be83b469b8","modified":1745549513057},{"_id":"public/images/photo.gif","hash":"980a75ec13a510a52be715ea8da7d6921856a871","modified":1745549513057},{"_id":"public/live2d_models/fll/fll.4096/texture_00.png","hash":"28c6112a8767907eaa3482cf336c267419e71e92","modified":1745549513057}],"Category":[],"Data":[],"Page":[{"title":"categories","date":"2025-04-22T06:46:26.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2025-04-22 14:46:26\n---\n","updated":"2025-04-22T06:46:26.777Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cm9w745id0000d8gk5h3p2pi3","content":"","excerpt":"","more":"","length":0},{"title":"about","date":"2025-04-22T06:46:01.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2025-04-22 14:46:01\n---\n","updated":"2025-04-22T06:46:01.759Z","path":"about/index.html","comments":1,"layout":"page","_id":"cm9w745ig0002d8gkdwybh1cr","content":"","excerpt":"","more":"","length":0},{"title":"tags","date":"2018-12-15T03:21:24.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-12-15 11:21:24\ntype: \"tags\"\n---\n","updated":"2025-04-22T01:18:40.148Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cm9w745ij0005d8gk4shhfm9i","content":"","excerpt":"","more":"","length":0},{"_content":"{\n\t\"Version\": 3,\n\t\"Parameters\": [\n\t\t{\n\t\t\t\"Id\": \"ParamAngleX\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"角度 X\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamAngleY\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"角度 Y\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamAngleZ\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"角度 Z\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamEyeLOpen\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"左眼　開閉\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamEyeROpen\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"右眼　開閉\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamEyeBallX\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"目玉 X\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamEyeBallY\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"目玉 Y\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamBrowLY\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"左眉　上下\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamBrowRY\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"右眉　上下\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamBrowLX\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"左眉　左右\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamBrowRX\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"右眉　左右\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamBrowLAngle\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"左眉　角度\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamBrowRAngle\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"右眉　角度\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamMouthForm\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"口　変形\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamMouthOpenY\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"口　開閉\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamBodyAngleX\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"体の回転　X\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamBodyAngleY\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"体の回転　Y\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamBodyAngleZ\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"体の回転　Z\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamArmL\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"左腕\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamArmR\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"右腕\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamBreath\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"呼吸\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamHairSide\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"髪揺れ　横\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamHairBack\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"髪揺れ　後ろ\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"切换\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_1_ArtMesh32\",\n\t\t\t\"GroupId\": \"ParamGroup\",\n\t\t\t\"Name\": \"[0]左发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_2_ArtMesh32\",\n\t\t\t\"GroupId\": \"ParamGroup\",\n\t\t\t\"Name\": \"[1]左发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_3_ArtMesh32\",\n\t\t\t\"GroupId\": \"ParamGroup\",\n\t\t\t\"Name\": \"[2]左发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_4_ArtMesh32\",\n\t\t\t\"GroupId\": \"ParamGroup\",\n\t\t\t\"Name\": \"[3]左发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_5_ArtMesh32\",\n\t\t\t\"GroupId\": \"ParamGroup\",\n\t\t\t\"Name\": \"[4]左发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_6_ArtMesh32\",\n\t\t\t\"GroupId\": \"ParamGroup\",\n\t\t\t\"Name\": \"[5]左发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_7_ArtMesh32\",\n\t\t\t\"GroupId\": \"ParamGroup\",\n\t\t\t\"Name\": \"[6]左发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_8_ArtMesh32\",\n\t\t\t\"GroupId\": \"ParamGroup\",\n\t\t\t\"Name\": \"[7]左发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_9_ArtMesh32\",\n\t\t\t\"GroupId\": \"ParamGroup\",\n\t\t\t\"Name\": \"[8]左发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_1_ArtMesh33\",\n\t\t\t\"GroupId\": \"ParamGroup2\",\n\t\t\t\"Name\": \"[0]右发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_2_ArtMesh33\",\n\t\t\t\"GroupId\": \"ParamGroup2\",\n\t\t\t\"Name\": \"[1]右发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_3_ArtMesh33\",\n\t\t\t\"GroupId\": \"ParamGroup2\",\n\t\t\t\"Name\": \"[2]右发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_4_ArtMesh33\",\n\t\t\t\"GroupId\": \"ParamGroup2\",\n\t\t\t\"Name\": \"[3]右发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_5_ArtMesh33\",\n\t\t\t\"GroupId\": \"ParamGroup2\",\n\t\t\t\"Name\": \"[4]右发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_6_ArtMesh33\",\n\t\t\t\"GroupId\": \"ParamGroup2\",\n\t\t\t\"Name\": \"[5]右发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_7_ArtMesh33\",\n\t\t\t\"GroupId\": \"ParamGroup2\",\n\t\t\t\"Name\": \"[6]右发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_8_ArtMesh33\",\n\t\t\t\"GroupId\": \"ParamGroup2\",\n\t\t\t\"Name\": \"[7]右发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_9_ArtMesh33\",\n\t\t\t\"GroupId\": \"ParamGroup2\",\n\t\t\t\"Name\": \"[8]右发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_1_ArtMesh18\",\n\t\t\t\"GroupId\": \"ParamGroup3\",\n\t\t\t\"Name\": \"[0]右刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_2_ArtMesh18\",\n\t\t\t\"GroupId\": \"ParamGroup3\",\n\t\t\t\"Name\": \"[1]右刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_3_ArtMesh18\",\n\t\t\t\"GroupId\": \"ParamGroup3\",\n\t\t\t\"Name\": \"[2]右刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_4_ArtMesh18\",\n\t\t\t\"GroupId\": \"ParamGroup3\",\n\t\t\t\"Name\": \"[3]右刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_5_ArtMesh18\",\n\t\t\t\"GroupId\": \"ParamGroup3\",\n\t\t\t\"Name\": \"[4]右刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_6_ArtMesh18\",\n\t\t\t\"GroupId\": \"ParamGroup3\",\n\t\t\t\"Name\": \"[5]右刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_7_ArtMesh18\",\n\t\t\t\"GroupId\": \"ParamGroup3\",\n\t\t\t\"Name\": \"[6]右刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_1_ArtMesh17\",\n\t\t\t\"GroupId\": \"ParamGroup4\",\n\t\t\t\"Name\": \"[0]左刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_2_ArtMesh17\",\n\t\t\t\"GroupId\": \"ParamGroup4\",\n\t\t\t\"Name\": \"[1]左刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_3_ArtMesh17\",\n\t\t\t\"GroupId\": \"ParamGroup4\",\n\t\t\t\"Name\": \"[2]左刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_4_ArtMesh17\",\n\t\t\t\"GroupId\": \"ParamGroup4\",\n\t\t\t\"Name\": \"[3]左刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_5_ArtMesh17\",\n\t\t\t\"GroupId\": \"ParamGroup4\",\n\t\t\t\"Name\": \"[4]左刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_6_ArtMesh17\",\n\t\t\t\"GroupId\": \"ParamGroup4\",\n\t\t\t\"Name\": \"[5]左刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_7_ArtMesh17\",\n\t\t\t\"GroupId\": \"ParamGroup4\",\n\t\t\t\"Name\": \"[6]左刘海\"\n\t\t}\n\t],\n\t\"ParameterGroups\": [\n\t\t{\n\t\t\t\"Id\": \"ParamGroup\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"左发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamGroup2\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"右发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamGroup3\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"右刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamGroup4\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"左刘海\"\n\t\t}\n\t],\n\t\"Parts\": [\n\t\t{\n\t\t\t\"Id\": \"Part5\",\n\t\t\t\"Name\": \"fll.psd(未找到对应图层)\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01HairFront001\",\n\t\t\t\"Name\": \"前髪\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01HairSide001\",\n\t\t\t\"Name\": \"横髪\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01HairBack001\",\n\t\t\t\"Name\": \"後ろ髪\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01Nose001\",\n\t\t\t\"Name\": \"鼻\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01Mouth001\",\n\t\t\t\"Name\": \"口\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01Brow001\",\n\t\t\t\"Name\": \"まゆ毛\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01EyeBall001\",\n\t\t\t\"Name\": \"目玉\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01Eye001\",\n\t\t\t\"Name\": \"目\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01Ear001\",\n\t\t\t\"Name\": \"耳\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01Face001\",\n\t\t\t\"Name\": \"顔\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01Neck\",\n\t\t\t\"Name\": \"首\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01Body\",\n\t\t\t\"Name\": \"体\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ArtMesh17_Skinning\",\n\t\t\t\"Name\": \"左刘海(蒙皮)\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part4\",\n\t\t\t\"Name\": \"左刘海(旋转)\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ArtMesh18_Skinning\",\n\t\t\t\"Name\": \"右刘海(蒙皮)\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part3\",\n\t\t\t\"Name\": \"右刘海(旋转)\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ArtMesh32_Skinning\",\n\t\t\t\"Name\": \"左发(蒙皮)\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part\",\n\t\t\t\"Name\": \"左发(旋转)\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ArtMesh33_Skinning\",\n\t\t\t\"Name\": \"右发(蒙皮)\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part2\",\n\t\t\t\"Name\": \"右发(旋转)\"\n\t\t}\n\t],\n\t\"CombinedParameters\": [\n\t\t[\n\t\t\t\"ParamAngleX\",\n\t\t\t\"ParamAngleY\"\n\t\t],\n\t\t[\n\t\t\t\"ParamBodyAngleX\",\n\t\t\t\"ParamBodyAngleY\"\n\t\t]\n\t]\n}","source":"live2d_models/fll/fll.cdi3.json","raw":"{\n\t\"Version\": 3,\n\t\"Parameters\": [\n\t\t{\n\t\t\t\"Id\": \"ParamAngleX\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"角度 X\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamAngleY\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"角度 Y\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamAngleZ\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"角度 Z\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamEyeLOpen\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"左眼　開閉\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamEyeROpen\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"右眼　開閉\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamEyeBallX\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"目玉 X\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamEyeBallY\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"目玉 Y\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamBrowLY\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"左眉　上下\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamBrowRY\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"右眉　上下\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamBrowLX\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"左眉　左右\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamBrowRX\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"右眉　左右\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamBrowLAngle\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"左眉　角度\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamBrowRAngle\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"右眉　角度\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamMouthForm\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"口　変形\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamMouthOpenY\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"口　開閉\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamBodyAngleX\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"体の回転　X\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamBodyAngleY\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"体の回転　Y\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamBodyAngleZ\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"体の回転　Z\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamArmL\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"左腕\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamArmR\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"右腕\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamBreath\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"呼吸\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamHairSide\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"髪揺れ　横\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamHairBack\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"髪揺れ　後ろ\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"切换\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_1_ArtMesh32\",\n\t\t\t\"GroupId\": \"ParamGroup\",\n\t\t\t\"Name\": \"[0]左发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_2_ArtMesh32\",\n\t\t\t\"GroupId\": \"ParamGroup\",\n\t\t\t\"Name\": \"[1]左发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_3_ArtMesh32\",\n\t\t\t\"GroupId\": \"ParamGroup\",\n\t\t\t\"Name\": \"[2]左发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_4_ArtMesh32\",\n\t\t\t\"GroupId\": \"ParamGroup\",\n\t\t\t\"Name\": \"[3]左发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_5_ArtMesh32\",\n\t\t\t\"GroupId\": \"ParamGroup\",\n\t\t\t\"Name\": \"[4]左发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_6_ArtMesh32\",\n\t\t\t\"GroupId\": \"ParamGroup\",\n\t\t\t\"Name\": \"[5]左发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_7_ArtMesh32\",\n\t\t\t\"GroupId\": \"ParamGroup\",\n\t\t\t\"Name\": \"[6]左发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_8_ArtMesh32\",\n\t\t\t\"GroupId\": \"ParamGroup\",\n\t\t\t\"Name\": \"[7]左发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_9_ArtMesh32\",\n\t\t\t\"GroupId\": \"ParamGroup\",\n\t\t\t\"Name\": \"[8]左发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_1_ArtMesh33\",\n\t\t\t\"GroupId\": \"ParamGroup2\",\n\t\t\t\"Name\": \"[0]右发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_2_ArtMesh33\",\n\t\t\t\"GroupId\": \"ParamGroup2\",\n\t\t\t\"Name\": \"[1]右发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_3_ArtMesh33\",\n\t\t\t\"GroupId\": \"ParamGroup2\",\n\t\t\t\"Name\": \"[2]右发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_4_ArtMesh33\",\n\t\t\t\"GroupId\": \"ParamGroup2\",\n\t\t\t\"Name\": \"[3]右发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_5_ArtMesh33\",\n\t\t\t\"GroupId\": \"ParamGroup2\",\n\t\t\t\"Name\": \"[4]右发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_6_ArtMesh33\",\n\t\t\t\"GroupId\": \"ParamGroup2\",\n\t\t\t\"Name\": \"[5]右发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_7_ArtMesh33\",\n\t\t\t\"GroupId\": \"ParamGroup2\",\n\t\t\t\"Name\": \"[6]右发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_8_ArtMesh33\",\n\t\t\t\"GroupId\": \"ParamGroup2\",\n\t\t\t\"Name\": \"[7]右发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_9_ArtMesh33\",\n\t\t\t\"GroupId\": \"ParamGroup2\",\n\t\t\t\"Name\": \"[8]右发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_1_ArtMesh18\",\n\t\t\t\"GroupId\": \"ParamGroup3\",\n\t\t\t\"Name\": \"[0]右刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_2_ArtMesh18\",\n\t\t\t\"GroupId\": \"ParamGroup3\",\n\t\t\t\"Name\": \"[1]右刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_3_ArtMesh18\",\n\t\t\t\"GroupId\": \"ParamGroup3\",\n\t\t\t\"Name\": \"[2]右刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_4_ArtMesh18\",\n\t\t\t\"GroupId\": \"ParamGroup3\",\n\t\t\t\"Name\": \"[3]右刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_5_ArtMesh18\",\n\t\t\t\"GroupId\": \"ParamGroup3\",\n\t\t\t\"Name\": \"[4]右刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_6_ArtMesh18\",\n\t\t\t\"GroupId\": \"ParamGroup3\",\n\t\t\t\"Name\": \"[5]右刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_7_ArtMesh18\",\n\t\t\t\"GroupId\": \"ParamGroup3\",\n\t\t\t\"Name\": \"[6]右刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_1_ArtMesh17\",\n\t\t\t\"GroupId\": \"ParamGroup4\",\n\t\t\t\"Name\": \"[0]左刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_2_ArtMesh17\",\n\t\t\t\"GroupId\": \"ParamGroup4\",\n\t\t\t\"Name\": \"[1]左刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_3_ArtMesh17\",\n\t\t\t\"GroupId\": \"ParamGroup4\",\n\t\t\t\"Name\": \"[2]左刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_4_ArtMesh17\",\n\t\t\t\"GroupId\": \"ParamGroup4\",\n\t\t\t\"Name\": \"[3]左刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_5_ArtMesh17\",\n\t\t\t\"GroupId\": \"ParamGroup4\",\n\t\t\t\"Name\": \"[4]左刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_6_ArtMesh17\",\n\t\t\t\"GroupId\": \"ParamGroup4\",\n\t\t\t\"Name\": \"[5]左刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Param_Angle_Rotation_7_ArtMesh17\",\n\t\t\t\"GroupId\": \"ParamGroup4\",\n\t\t\t\"Name\": \"[6]左刘海\"\n\t\t}\n\t],\n\t\"ParameterGroups\": [\n\t\t{\n\t\t\t\"Id\": \"ParamGroup\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"左发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamGroup2\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"右发\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamGroup3\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"右刘海\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ParamGroup4\",\n\t\t\t\"GroupId\": \"\",\n\t\t\t\"Name\": \"左刘海\"\n\t\t}\n\t],\n\t\"Parts\": [\n\t\t{\n\t\t\t\"Id\": \"Part5\",\n\t\t\t\"Name\": \"fll.psd(未找到对应图层)\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01HairFront001\",\n\t\t\t\"Name\": \"前髪\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01HairSide001\",\n\t\t\t\"Name\": \"横髪\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01HairBack001\",\n\t\t\t\"Name\": \"後ろ髪\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01Nose001\",\n\t\t\t\"Name\": \"鼻\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01Mouth001\",\n\t\t\t\"Name\": \"口\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01Brow001\",\n\t\t\t\"Name\": \"まゆ毛\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01EyeBall001\",\n\t\t\t\"Name\": \"目玉\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01Eye001\",\n\t\t\t\"Name\": \"目\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01Ear001\",\n\t\t\t\"Name\": \"耳\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01Face001\",\n\t\t\t\"Name\": \"顔\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01Neck\",\n\t\t\t\"Name\": \"首\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part01Body\",\n\t\t\t\"Name\": \"体\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ArtMesh17_Skinning\",\n\t\t\t\"Name\": \"左刘海(蒙皮)\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part4\",\n\t\t\t\"Name\": \"左刘海(旋转)\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ArtMesh18_Skinning\",\n\t\t\t\"Name\": \"右刘海(蒙皮)\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part3\",\n\t\t\t\"Name\": \"右刘海(旋转)\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ArtMesh32_Skinning\",\n\t\t\t\"Name\": \"左发(蒙皮)\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part\",\n\t\t\t\"Name\": \"左发(旋转)\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"ArtMesh33_Skinning\",\n\t\t\t\"Name\": \"右发(蒙皮)\"\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"Part2\",\n\t\t\t\"Name\": \"右发(旋转)\"\n\t\t}\n\t],\n\t\"CombinedParameters\": [\n\t\t[\n\t\t\t\"ParamAngleX\",\n\t\t\t\"ParamAngleY\"\n\t\t],\n\t\t[\n\t\t\t\"ParamBodyAngleX\",\n\t\t\t\"ParamBodyAngleY\"\n\t\t]\n\t]\n}","date":"2025-04-22T09:49:36.504Z","updated":"2023-11-27T09:46:38.000Z","path":"live2d_models/fll/fll.cdi3.json","layout":"false","title":"","comments":1,"_id":"cm9w745ik0007d8gk1obteab3","content":"{\"Version\":3,\"Parameters\":[{\"Id\":\"ParamAngleX\",\"GroupId\":\"\",\"Name\":\"角度 X\"},{\"Id\":\"ParamAngleY\",\"GroupId\":\"\",\"Name\":\"角度 Y\"},{\"Id\":\"ParamAngleZ\",\"GroupId\":\"\",\"Name\":\"角度 Z\"},{\"Id\":\"ParamEyeLOpen\",\"GroupId\":\"\",\"Name\":\"左眼　開閉\"},{\"Id\":\"ParamEyeROpen\",\"GroupId\":\"\",\"Name\":\"右眼　開閉\"},{\"Id\":\"ParamEyeBallX\",\"GroupId\":\"\",\"Name\":\"目玉 X\"},{\"Id\":\"ParamEyeBallY\",\"GroupId\":\"\",\"Name\":\"目玉 Y\"},{\"Id\":\"ParamBrowLY\",\"GroupId\":\"\",\"Name\":\"左眉　上下\"},{\"Id\":\"ParamBrowRY\",\"GroupId\":\"\",\"Name\":\"右眉　上下\"},{\"Id\":\"ParamBrowLX\",\"GroupId\":\"\",\"Name\":\"左眉　左右\"},{\"Id\":\"ParamBrowRX\",\"GroupId\":\"\",\"Name\":\"右眉　左右\"},{\"Id\":\"ParamBrowLAngle\",\"GroupId\":\"\",\"Name\":\"左眉　角度\"},{\"Id\":\"ParamBrowRAngle\",\"GroupId\":\"\",\"Name\":\"右眉　角度\"},{\"Id\":\"ParamMouthForm\",\"GroupId\":\"\",\"Name\":\"口　変形\"},{\"Id\":\"ParamMouthOpenY\",\"GroupId\":\"\",\"Name\":\"口　開閉\"},{\"Id\":\"ParamBodyAngleX\",\"GroupId\":\"\",\"Name\":\"体の回転　X\"},{\"Id\":\"ParamBodyAngleY\",\"GroupId\":\"\",\"Name\":\"体の回転　Y\"},{\"Id\":\"ParamBodyAngleZ\",\"GroupId\":\"\",\"Name\":\"体の回転　Z\"},{\"Id\":\"ParamArmL\",\"GroupId\":\"\",\"Name\":\"左腕\"},{\"Id\":\"ParamArmR\",\"GroupId\":\"\",\"Name\":\"右腕\"},{\"Id\":\"ParamBreath\",\"GroupId\":\"\",\"Name\":\"呼吸\"},{\"Id\":\"ParamHairSide\",\"GroupId\":\"\",\"Name\":\"髪揺れ　横\"},{\"Id\":\"ParamHairBack\",\"GroupId\":\"\",\"Name\":\"髪揺れ　後ろ\"},{\"Id\":\"Param\",\"GroupId\":\"\",\"Name\":\"切换\"},{\"Id\":\"Param_Angle_Rotation_1_ArtMesh32\",\"GroupId\":\"ParamGroup\",\"Name\":\"[0]左发\"},{\"Id\":\"Param_Angle_Rotation_2_ArtMesh32\",\"GroupId\":\"ParamGroup\",\"Name\":\"[1]左发\"},{\"Id\":\"Param_Angle_Rotation_3_ArtMesh32\",\"GroupId\":\"ParamGroup\",\"Name\":\"[2]左发\"},{\"Id\":\"Param_Angle_Rotation_4_ArtMesh32\",\"GroupId\":\"ParamGroup\",\"Name\":\"[3]左发\"},{\"Id\":\"Param_Angle_Rotation_5_ArtMesh32\",\"GroupId\":\"ParamGroup\",\"Name\":\"[4]左发\"},{\"Id\":\"Param_Angle_Rotation_6_ArtMesh32\",\"GroupId\":\"ParamGroup\",\"Name\":\"[5]左发\"},{\"Id\":\"Param_Angle_Rotation_7_ArtMesh32\",\"GroupId\":\"ParamGroup\",\"Name\":\"[6]左发\"},{\"Id\":\"Param_Angle_Rotation_8_ArtMesh32\",\"GroupId\":\"ParamGroup\",\"Name\":\"[7]左发\"},{\"Id\":\"Param_Angle_Rotation_9_ArtMesh32\",\"GroupId\":\"ParamGroup\",\"Name\":\"[8]左发\"},{\"Id\":\"Param_Angle_Rotation_1_ArtMesh33\",\"GroupId\":\"ParamGroup2\",\"Name\":\"[0]右发\"},{\"Id\":\"Param_Angle_Rotation_2_ArtMesh33\",\"GroupId\":\"ParamGroup2\",\"Name\":\"[1]右发\"},{\"Id\":\"Param_Angle_Rotation_3_ArtMesh33\",\"GroupId\":\"ParamGroup2\",\"Name\":\"[2]右发\"},{\"Id\":\"Param_Angle_Rotation_4_ArtMesh33\",\"GroupId\":\"ParamGroup2\",\"Name\":\"[3]右发\"},{\"Id\":\"Param_Angle_Rotation_5_ArtMesh33\",\"GroupId\":\"ParamGroup2\",\"Name\":\"[4]右发\"},{\"Id\":\"Param_Angle_Rotation_6_ArtMesh33\",\"GroupId\":\"ParamGroup2\",\"Name\":\"[5]右发\"},{\"Id\":\"Param_Angle_Rotation_7_ArtMesh33\",\"GroupId\":\"ParamGroup2\",\"Name\":\"[6]右发\"},{\"Id\":\"Param_Angle_Rotation_8_ArtMesh33\",\"GroupId\":\"ParamGroup2\",\"Name\":\"[7]右发\"},{\"Id\":\"Param_Angle_Rotation_9_ArtMesh33\",\"GroupId\":\"ParamGroup2\",\"Name\":\"[8]右发\"},{\"Id\":\"Param_Angle_Rotation_1_ArtMesh18\",\"GroupId\":\"ParamGroup3\",\"Name\":\"[0]右刘海\"},{\"Id\":\"Param_Angle_Rotation_2_ArtMesh18\",\"GroupId\":\"ParamGroup3\",\"Name\":\"[1]右刘海\"},{\"Id\":\"Param_Angle_Rotation_3_ArtMesh18\",\"GroupId\":\"ParamGroup3\",\"Name\":\"[2]右刘海\"},{\"Id\":\"Param_Angle_Rotation_4_ArtMesh18\",\"GroupId\":\"ParamGroup3\",\"Name\":\"[3]右刘海\"},{\"Id\":\"Param_Angle_Rotation_5_ArtMesh18\",\"GroupId\":\"ParamGroup3\",\"Name\":\"[4]右刘海\"},{\"Id\":\"Param_Angle_Rotation_6_ArtMesh18\",\"GroupId\":\"ParamGroup3\",\"Name\":\"[5]右刘海\"},{\"Id\":\"Param_Angle_Rotation_7_ArtMesh18\",\"GroupId\":\"ParamGroup3\",\"Name\":\"[6]右刘海\"},{\"Id\":\"Param_Angle_Rotation_1_ArtMesh17\",\"GroupId\":\"ParamGroup4\",\"Name\":\"[0]左刘海\"},{\"Id\":\"Param_Angle_Rotation_2_ArtMesh17\",\"GroupId\":\"ParamGroup4\",\"Name\":\"[1]左刘海\"},{\"Id\":\"Param_Angle_Rotation_3_ArtMesh17\",\"GroupId\":\"ParamGroup4\",\"Name\":\"[2]左刘海\"},{\"Id\":\"Param_Angle_Rotation_4_ArtMesh17\",\"GroupId\":\"ParamGroup4\",\"Name\":\"[3]左刘海\"},{\"Id\":\"Param_Angle_Rotation_5_ArtMesh17\",\"GroupId\":\"ParamGroup4\",\"Name\":\"[4]左刘海\"},{\"Id\":\"Param_Angle_Rotation_6_ArtMesh17\",\"GroupId\":\"ParamGroup4\",\"Name\":\"[5]左刘海\"},{\"Id\":\"Param_Angle_Rotation_7_ArtMesh17\",\"GroupId\":\"ParamGroup4\",\"Name\":\"[6]左刘海\"}],\"ParameterGroups\":[{\"Id\":\"ParamGroup\",\"GroupId\":\"\",\"Name\":\"左发\"},{\"Id\":\"ParamGroup2\",\"GroupId\":\"\",\"Name\":\"右发\"},{\"Id\":\"ParamGroup3\",\"GroupId\":\"\",\"Name\":\"右刘海\"},{\"Id\":\"ParamGroup4\",\"GroupId\":\"\",\"Name\":\"左刘海\"}],\"Parts\":[{\"Id\":\"Part5\",\"Name\":\"fll.psd(未找到对应图层)\"},{\"Id\":\"Part01HairFront001\",\"Name\":\"前髪\"},{\"Id\":\"Part01HairSide001\",\"Name\":\"横髪\"},{\"Id\":\"Part01HairBack001\",\"Name\":\"後ろ髪\"},{\"Id\":\"Part01Nose001\",\"Name\":\"鼻\"},{\"Id\":\"Part01Mouth001\",\"Name\":\"口\"},{\"Id\":\"Part01Brow001\",\"Name\":\"まゆ毛\"},{\"Id\":\"Part01EyeBall001\",\"Name\":\"目玉\"},{\"Id\":\"Part01Eye001\",\"Name\":\"目\"},{\"Id\":\"Part01Ear001\",\"Name\":\"耳\"},{\"Id\":\"Part01Face001\",\"Name\":\"顔\"},{\"Id\":\"Part01Neck\",\"Name\":\"首\"},{\"Id\":\"Part01Body\",\"Name\":\"体\"},{\"Id\":\"ArtMesh17_Skinning\",\"Name\":\"左刘海(蒙皮)\"},{\"Id\":\"Part4\",\"Name\":\"左刘海(旋转)\"},{\"Id\":\"ArtMesh18_Skinning\",\"Name\":\"右刘海(蒙皮)\"},{\"Id\":\"Part3\",\"Name\":\"右刘海(旋转)\"},{\"Id\":\"ArtMesh32_Skinning\",\"Name\":\"左发(蒙皮)\"},{\"Id\":\"Part\",\"Name\":\"左发(旋转)\"},{\"Id\":\"ArtMesh33_Skinning\",\"Name\":\"右发(蒙皮)\"},{\"Id\":\"Part2\",\"Name\":\"右发(旋转)\"}],\"CombinedParameters\":[[\"ParamAngleX\",\"ParamAngleY\"],[\"ParamBodyAngleX\",\"ParamBodyAngleY\"]]}"},{"_content":"{\n\t\"Version\": 3,\n\t\"Meta\": {\n\t\t\"PhysicsSettingCount\": 4,\n\t\t\"TotalInputCount\": 12,\n\t\t\"TotalOutputCount\": 14,\n\t\t\"VertexCount\": 14,\n\t\t\"Fps\": 120,\n\t\t\"EffectiveForces\": {\n\t\t\t\"Gravity\": {\n\t\t\t\t\"X\": 0,\n\t\t\t\t\"Y\": -1\n\t\t\t},\n\t\t\t\"Wind\": {\n\t\t\t\t\"X\": 0,\n\t\t\t\t\"Y\": 0\n\t\t\t}\n\t\t},\n\t\t\"PhysicsDictionary\": [\n\t\t\t{\n\t\t\t\t\"Id\": \"PhysicsSetting1\",\n\t\t\t\t\"Name\": \"左发\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"Id\": \"PhysicsSetting2\",\n\t\t\t\t\"Name\": \"右发\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"Id\": \"PhysicsSetting3\",\n\t\t\t\t\"Name\": \"右刘海\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"Id\": \"PhysicsSetting4\",\n\t\t\t\t\"Name\": \"左刘海\"\n\t\t\t}\n\t\t]\n\t},\n\t\"PhysicsSettings\": [\n\t\t{\n\t\t\t\"Id\": \"PhysicsSetting1\",\n\t\t\t\"Input\": [\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleX\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 40,\n\t\t\t\t\t\"Type\": \"X\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleY\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 40,\n\t\t\t\t\t\"Type\": \"X\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleZ\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 20,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Output\": [\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_5_ArtMesh32\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 1,\n\t\t\t\t\t\"Scale\": 6,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_6_ArtMesh32\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 2,\n\t\t\t\t\t\"Scale\": 6,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_7_ArtMesh32\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 3,\n\t\t\t\t\t\"Scale\": 6,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_8_ArtMesh32\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 3,\n\t\t\t\t\t\"Scale\": 6,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_9_ArtMesh32\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 3,\n\t\t\t\t\t\"Scale\": 6,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Vertices\": [\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 0\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 1,\n\t\t\t\t\t\"Delay\": 1,\n\t\t\t\t\t\"Acceleration\": 1,\n\t\t\t\t\t\"Radius\": 0\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 10\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 0.85,\n\t\t\t\t\t\"Delay\": 0.9,\n\t\t\t\t\t\"Acceleration\": 1,\n\t\t\t\t\t\"Radius\": 10\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 20\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 0.9,\n\t\t\t\t\t\"Delay\": 0.9,\n\t\t\t\t\t\"Acceleration\": 1,\n\t\t\t\t\t\"Radius\": 10\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 28\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 0.9,\n\t\t\t\t\t\"Delay\": 0.9,\n\t\t\t\t\t\"Acceleration\": 0.8,\n\t\t\t\t\t\"Radius\": 8\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Normalization\": {\n\t\t\t\t\"Position\": {\n\t\t\t\t\t\"Minimum\": -10,\n\t\t\t\t\t\"Default\": 0,\n\t\t\t\t\t\"Maximum\": 10\n\t\t\t\t},\n\t\t\t\t\"Angle\": {\n\t\t\t\t\t\"Minimum\": -10,\n\t\t\t\t\t\"Default\": 0,\n\t\t\t\t\t\"Maximum\": 10\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"PhysicsSetting2\",\n\t\t\t\"Input\": [\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleX\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 40,\n\t\t\t\t\t\"Type\": \"X\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleY\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 40,\n\t\t\t\t\t\"Type\": \"X\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleZ\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 20,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Output\": [\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_5_ArtMesh33\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 1,\n\t\t\t\t\t\"Scale\": 8,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_6_ArtMesh33\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 2,\n\t\t\t\t\t\"Scale\": 8,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_7_ArtMesh33\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 3,\n\t\t\t\t\t\"Scale\": 8,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_8_ArtMesh33\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 3,\n\t\t\t\t\t\"Scale\": 8,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_9_ArtMesh33\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 3,\n\t\t\t\t\t\"Scale\": 8,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Vertices\": [\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 0\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 1,\n\t\t\t\t\t\"Delay\": 1,\n\t\t\t\t\t\"Acceleration\": 1,\n\t\t\t\t\t\"Radius\": 0\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 10\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 0.85,\n\t\t\t\t\t\"Delay\": 0.9,\n\t\t\t\t\t\"Acceleration\": 1,\n\t\t\t\t\t\"Radius\": 10\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 20\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 0.9,\n\t\t\t\t\t\"Delay\": 0.9,\n\t\t\t\t\t\"Acceleration\": 1,\n\t\t\t\t\t\"Radius\": 10\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 28\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 0.9,\n\t\t\t\t\t\"Delay\": 0.9,\n\t\t\t\t\t\"Acceleration\": 0.8,\n\t\t\t\t\t\"Radius\": 8\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Normalization\": {\n\t\t\t\t\"Position\": {\n\t\t\t\t\t\"Minimum\": -10,\n\t\t\t\t\t\"Default\": 0,\n\t\t\t\t\t\"Maximum\": 10\n\t\t\t\t},\n\t\t\t\t\"Angle\": {\n\t\t\t\t\t\"Minimum\": -10,\n\t\t\t\t\t\"Default\": 0,\n\t\t\t\t\t\"Maximum\": 10\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"PhysicsSetting3\",\n\t\t\t\"Input\": [\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleX\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 40,\n\t\t\t\t\t\"Type\": \"X\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleY\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 40,\n\t\t\t\t\t\"Type\": \"X\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleZ\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 20,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Output\": [\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_6_ArtMesh18\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 1,\n\t\t\t\t\t\"Scale\": 9,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_7_ArtMesh18\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 2,\n\t\t\t\t\t\"Scale\": 9,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Vertices\": [\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 0\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 1,\n\t\t\t\t\t\"Delay\": 1,\n\t\t\t\t\t\"Acceleration\": 1,\n\t\t\t\t\t\"Radius\": 0\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 10\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 0.9,\n\t\t\t\t\t\"Delay\": 0.8,\n\t\t\t\t\t\"Acceleration\": 1.5,\n\t\t\t\t\t\"Radius\": 10\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 18\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 0.8,\n\t\t\t\t\t\"Delay\": 0.8,\n\t\t\t\t\t\"Acceleration\": 1.5,\n\t\t\t\t\t\"Radius\": 8\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Normalization\": {\n\t\t\t\t\"Position\": {\n\t\t\t\t\t\"Minimum\": -10,\n\t\t\t\t\t\"Default\": 0,\n\t\t\t\t\t\"Maximum\": 10\n\t\t\t\t},\n\t\t\t\t\"Angle\": {\n\t\t\t\t\t\"Minimum\": -10,\n\t\t\t\t\t\"Default\": 0,\n\t\t\t\t\t\"Maximum\": 10\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"PhysicsSetting4\",\n\t\t\t\"Input\": [\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleX\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 40,\n\t\t\t\t\t\"Type\": \"X\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleY\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 40,\n\t\t\t\t\t\"Type\": \"X\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleZ\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 20,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Output\": [\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_6_ArtMesh17\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 1,\n\t\t\t\t\t\"Scale\": 8,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_7_ArtMesh17\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 2,\n\t\t\t\t\t\"Scale\": 8,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Vertices\": [\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 0\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 1,\n\t\t\t\t\t\"Delay\": 1,\n\t\t\t\t\t\"Acceleration\": 1,\n\t\t\t\t\t\"Radius\": 0\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 10\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 0.9,\n\t\t\t\t\t\"Delay\": 0.8,\n\t\t\t\t\t\"Acceleration\": 1.5,\n\t\t\t\t\t\"Radius\": 10\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 18\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 0.8,\n\t\t\t\t\t\"Delay\": 0.8,\n\t\t\t\t\t\"Acceleration\": 1.5,\n\t\t\t\t\t\"Radius\": 8\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Normalization\": {\n\t\t\t\t\"Position\": {\n\t\t\t\t\t\"Minimum\": -10,\n\t\t\t\t\t\"Default\": 0,\n\t\t\t\t\t\"Maximum\": 10\n\t\t\t\t},\n\t\t\t\t\"Angle\": {\n\t\t\t\t\t\"Minimum\": -10,\n\t\t\t\t\t\"Default\": 0,\n\t\t\t\t\t\"Maximum\": 10\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n}","source":"live2d_models/fll/fll.physics3.json","raw":"{\n\t\"Version\": 3,\n\t\"Meta\": {\n\t\t\"PhysicsSettingCount\": 4,\n\t\t\"TotalInputCount\": 12,\n\t\t\"TotalOutputCount\": 14,\n\t\t\"VertexCount\": 14,\n\t\t\"Fps\": 120,\n\t\t\"EffectiveForces\": {\n\t\t\t\"Gravity\": {\n\t\t\t\t\"X\": 0,\n\t\t\t\t\"Y\": -1\n\t\t\t},\n\t\t\t\"Wind\": {\n\t\t\t\t\"X\": 0,\n\t\t\t\t\"Y\": 0\n\t\t\t}\n\t\t},\n\t\t\"PhysicsDictionary\": [\n\t\t\t{\n\t\t\t\t\"Id\": \"PhysicsSetting1\",\n\t\t\t\t\"Name\": \"左发\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"Id\": \"PhysicsSetting2\",\n\t\t\t\t\"Name\": \"右发\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"Id\": \"PhysicsSetting3\",\n\t\t\t\t\"Name\": \"右刘海\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"Id\": \"PhysicsSetting4\",\n\t\t\t\t\"Name\": \"左刘海\"\n\t\t\t}\n\t\t]\n\t},\n\t\"PhysicsSettings\": [\n\t\t{\n\t\t\t\"Id\": \"PhysicsSetting1\",\n\t\t\t\"Input\": [\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleX\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 40,\n\t\t\t\t\t\"Type\": \"X\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleY\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 40,\n\t\t\t\t\t\"Type\": \"X\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleZ\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 20,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Output\": [\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_5_ArtMesh32\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 1,\n\t\t\t\t\t\"Scale\": 6,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_6_ArtMesh32\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 2,\n\t\t\t\t\t\"Scale\": 6,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_7_ArtMesh32\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 3,\n\t\t\t\t\t\"Scale\": 6,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_8_ArtMesh32\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 3,\n\t\t\t\t\t\"Scale\": 6,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_9_ArtMesh32\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 3,\n\t\t\t\t\t\"Scale\": 6,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Vertices\": [\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 0\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 1,\n\t\t\t\t\t\"Delay\": 1,\n\t\t\t\t\t\"Acceleration\": 1,\n\t\t\t\t\t\"Radius\": 0\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 10\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 0.85,\n\t\t\t\t\t\"Delay\": 0.9,\n\t\t\t\t\t\"Acceleration\": 1,\n\t\t\t\t\t\"Radius\": 10\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 20\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 0.9,\n\t\t\t\t\t\"Delay\": 0.9,\n\t\t\t\t\t\"Acceleration\": 1,\n\t\t\t\t\t\"Radius\": 10\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 28\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 0.9,\n\t\t\t\t\t\"Delay\": 0.9,\n\t\t\t\t\t\"Acceleration\": 0.8,\n\t\t\t\t\t\"Radius\": 8\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Normalization\": {\n\t\t\t\t\"Position\": {\n\t\t\t\t\t\"Minimum\": -10,\n\t\t\t\t\t\"Default\": 0,\n\t\t\t\t\t\"Maximum\": 10\n\t\t\t\t},\n\t\t\t\t\"Angle\": {\n\t\t\t\t\t\"Minimum\": -10,\n\t\t\t\t\t\"Default\": 0,\n\t\t\t\t\t\"Maximum\": 10\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"PhysicsSetting2\",\n\t\t\t\"Input\": [\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleX\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 40,\n\t\t\t\t\t\"Type\": \"X\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleY\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 40,\n\t\t\t\t\t\"Type\": \"X\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleZ\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 20,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Output\": [\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_5_ArtMesh33\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 1,\n\t\t\t\t\t\"Scale\": 8,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_6_ArtMesh33\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 2,\n\t\t\t\t\t\"Scale\": 8,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_7_ArtMesh33\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 3,\n\t\t\t\t\t\"Scale\": 8,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_8_ArtMesh33\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 3,\n\t\t\t\t\t\"Scale\": 8,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_9_ArtMesh33\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 3,\n\t\t\t\t\t\"Scale\": 8,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Vertices\": [\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 0\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 1,\n\t\t\t\t\t\"Delay\": 1,\n\t\t\t\t\t\"Acceleration\": 1,\n\t\t\t\t\t\"Radius\": 0\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 10\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 0.85,\n\t\t\t\t\t\"Delay\": 0.9,\n\t\t\t\t\t\"Acceleration\": 1,\n\t\t\t\t\t\"Radius\": 10\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 20\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 0.9,\n\t\t\t\t\t\"Delay\": 0.9,\n\t\t\t\t\t\"Acceleration\": 1,\n\t\t\t\t\t\"Radius\": 10\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 28\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 0.9,\n\t\t\t\t\t\"Delay\": 0.9,\n\t\t\t\t\t\"Acceleration\": 0.8,\n\t\t\t\t\t\"Radius\": 8\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Normalization\": {\n\t\t\t\t\"Position\": {\n\t\t\t\t\t\"Minimum\": -10,\n\t\t\t\t\t\"Default\": 0,\n\t\t\t\t\t\"Maximum\": 10\n\t\t\t\t},\n\t\t\t\t\"Angle\": {\n\t\t\t\t\t\"Minimum\": -10,\n\t\t\t\t\t\"Default\": 0,\n\t\t\t\t\t\"Maximum\": 10\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"PhysicsSetting3\",\n\t\t\t\"Input\": [\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleX\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 40,\n\t\t\t\t\t\"Type\": \"X\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleY\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 40,\n\t\t\t\t\t\"Type\": \"X\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleZ\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 20,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Output\": [\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_6_ArtMesh18\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 1,\n\t\t\t\t\t\"Scale\": 9,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_7_ArtMesh18\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 2,\n\t\t\t\t\t\"Scale\": 9,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Vertices\": [\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 0\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 1,\n\t\t\t\t\t\"Delay\": 1,\n\t\t\t\t\t\"Acceleration\": 1,\n\t\t\t\t\t\"Radius\": 0\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 10\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 0.9,\n\t\t\t\t\t\"Delay\": 0.8,\n\t\t\t\t\t\"Acceleration\": 1.5,\n\t\t\t\t\t\"Radius\": 10\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 18\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 0.8,\n\t\t\t\t\t\"Delay\": 0.8,\n\t\t\t\t\t\"Acceleration\": 1.5,\n\t\t\t\t\t\"Radius\": 8\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Normalization\": {\n\t\t\t\t\"Position\": {\n\t\t\t\t\t\"Minimum\": -10,\n\t\t\t\t\t\"Default\": 0,\n\t\t\t\t\t\"Maximum\": 10\n\t\t\t\t},\n\t\t\t\t\"Angle\": {\n\t\t\t\t\t\"Minimum\": -10,\n\t\t\t\t\t\"Default\": 0,\n\t\t\t\t\t\"Maximum\": 10\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"Id\": \"PhysicsSetting4\",\n\t\t\t\"Input\": [\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleX\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 40,\n\t\t\t\t\t\"Type\": \"X\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleY\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 40,\n\t\t\t\t\t\"Type\": \"X\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Source\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"ParamAngleZ\"\n\t\t\t\t\t},\n\t\t\t\t\t\"Weight\": 20,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Output\": [\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_6_ArtMesh17\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 1,\n\t\t\t\t\t\"Scale\": 8,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Destination\": {\n\t\t\t\t\t\t\"Target\": \"Parameter\",\n\t\t\t\t\t\t\"Id\": \"Param_Angle_Rotation_7_ArtMesh17\"\n\t\t\t\t\t},\n\t\t\t\t\t\"VertexIndex\": 2,\n\t\t\t\t\t\"Scale\": 8,\n\t\t\t\t\t\"Weight\": 100,\n\t\t\t\t\t\"Type\": \"Angle\",\n\t\t\t\t\t\"Reflect\": false\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Vertices\": [\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 0\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 1,\n\t\t\t\t\t\"Delay\": 1,\n\t\t\t\t\t\"Acceleration\": 1,\n\t\t\t\t\t\"Radius\": 0\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 10\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 0.9,\n\t\t\t\t\t\"Delay\": 0.8,\n\t\t\t\t\t\"Acceleration\": 1.5,\n\t\t\t\t\t\"Radius\": 10\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"Position\": {\n\t\t\t\t\t\t\"X\": 0,\n\t\t\t\t\t\t\"Y\": 18\n\t\t\t\t\t},\n\t\t\t\t\t\"Mobility\": 0.8,\n\t\t\t\t\t\"Delay\": 0.8,\n\t\t\t\t\t\"Acceleration\": 1.5,\n\t\t\t\t\t\"Radius\": 8\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"Normalization\": {\n\t\t\t\t\"Position\": {\n\t\t\t\t\t\"Minimum\": -10,\n\t\t\t\t\t\"Default\": 0,\n\t\t\t\t\t\"Maximum\": 10\n\t\t\t\t},\n\t\t\t\t\"Angle\": {\n\t\t\t\t\t\"Minimum\": -10,\n\t\t\t\t\t\"Default\": 0,\n\t\t\t\t\t\"Maximum\": 10\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n}","date":"2025-04-22T09:49:36.505Z","updated":"2023-11-27T09:46:38.000Z","path":"live2d_models/fll/fll.physics3.json","layout":"false","title":"","comments":1,"_id":"cm9w745il0009d8gk37nyhbq2","content":"{\"Version\":3,\"Meta\":{\"PhysicsSettingCount\":4,\"TotalInputCount\":12,\"TotalOutputCount\":14,\"VertexCount\":14,\"Fps\":120,\"EffectiveForces\":{\"Gravity\":{\"X\":0,\"Y\":-1},\"Wind\":{\"X\":0,\"Y\":0}},\"PhysicsDictionary\":[{\"Id\":\"PhysicsSetting1\",\"Name\":\"左发\"},{\"Id\":\"PhysicsSetting2\",\"Name\":\"右发\"},{\"Id\":\"PhysicsSetting3\",\"Name\":\"右刘海\"},{\"Id\":\"PhysicsSetting4\",\"Name\":\"左刘海\"}]},\"PhysicsSettings\":[{\"Id\":\"PhysicsSetting1\",\"Input\":[{\"Source\":{\"Target\":\"Parameter\",\"Id\":\"ParamAngleX\"},\"Weight\":40,\"Type\":\"X\",\"Reflect\":false},{\"Source\":{\"Target\":\"Parameter\",\"Id\":\"ParamAngleY\"},\"Weight\":40,\"Type\":\"X\",\"Reflect\":false},{\"Source\":{\"Target\":\"Parameter\",\"Id\":\"ParamAngleZ\"},\"Weight\":20,\"Type\":\"Angle\",\"Reflect\":false}],\"Output\":[{\"Destination\":{\"Target\":\"Parameter\",\"Id\":\"Param_Angle_Rotation_5_ArtMesh32\"},\"VertexIndex\":1,\"Scale\":6,\"Weight\":100,\"Type\":\"Angle\",\"Reflect\":false},{\"Destination\":{\"Target\":\"Parameter\",\"Id\":\"Param_Angle_Rotation_6_ArtMesh32\"},\"VertexIndex\":2,\"Scale\":6,\"Weight\":100,\"Type\":\"Angle\",\"Reflect\":false},{\"Destination\":{\"Target\":\"Parameter\",\"Id\":\"Param_Angle_Rotation_7_ArtMesh32\"},\"VertexIndex\":3,\"Scale\":6,\"Weight\":100,\"Type\":\"Angle\",\"Reflect\":false},{\"Destination\":{\"Target\":\"Parameter\",\"Id\":\"Param_Angle_Rotation_8_ArtMesh32\"},\"VertexIndex\":3,\"Scale\":6,\"Weight\":100,\"Type\":\"Angle\",\"Reflect\":false},{\"Destination\":{\"Target\":\"Parameter\",\"Id\":\"Param_Angle_Rotation_9_ArtMesh32\"},\"VertexIndex\":3,\"Scale\":6,\"Weight\":100,\"Type\":\"Angle\",\"Reflect\":false}],\"Vertices\":[{\"Position\":{\"X\":0,\"Y\":0},\"Mobility\":1,\"Delay\":1,\"Acceleration\":1,\"Radius\":0},{\"Position\":{\"X\":0,\"Y\":10},\"Mobility\":0.85,\"Delay\":0.9,\"Acceleration\":1,\"Radius\":10},{\"Position\":{\"X\":0,\"Y\":20},\"Mobility\":0.9,\"Delay\":0.9,\"Acceleration\":1,\"Radius\":10},{\"Position\":{\"X\":0,\"Y\":28},\"Mobility\":0.9,\"Delay\":0.9,\"Acceleration\":0.8,\"Radius\":8}],\"Normalization\":{\"Position\":{\"Minimum\":-10,\"Default\":0,\"Maximum\":10},\"Angle\":{\"Minimum\":-10,\"Default\":0,\"Maximum\":10}}},{\"Id\":\"PhysicsSetting2\",\"Input\":[{\"Source\":{\"Target\":\"Parameter\",\"Id\":\"ParamAngleX\"},\"Weight\":40,\"Type\":\"X\",\"Reflect\":false},{\"Source\":{\"Target\":\"Parameter\",\"Id\":\"ParamAngleY\"},\"Weight\":40,\"Type\":\"X\",\"Reflect\":false},{\"Source\":{\"Target\":\"Parameter\",\"Id\":\"ParamAngleZ\"},\"Weight\":20,\"Type\":\"Angle\",\"Reflect\":false}],\"Output\":[{\"Destination\":{\"Target\":\"Parameter\",\"Id\":\"Param_Angle_Rotation_5_ArtMesh33\"},\"VertexIndex\":1,\"Scale\":8,\"Weight\":100,\"Type\":\"Angle\",\"Reflect\":false},{\"Destination\":{\"Target\":\"Parameter\",\"Id\":\"Param_Angle_Rotation_6_ArtMesh33\"},\"VertexIndex\":2,\"Scale\":8,\"Weight\":100,\"Type\":\"Angle\",\"Reflect\":false},{\"Destination\":{\"Target\":\"Parameter\",\"Id\":\"Param_Angle_Rotation_7_ArtMesh33\"},\"VertexIndex\":3,\"Scale\":8,\"Weight\":100,\"Type\":\"Angle\",\"Reflect\":false},{\"Destination\":{\"Target\":\"Parameter\",\"Id\":\"Param_Angle_Rotation_8_ArtMesh33\"},\"VertexIndex\":3,\"Scale\":8,\"Weight\":100,\"Type\":\"Angle\",\"Reflect\":false},{\"Destination\":{\"Target\":\"Parameter\",\"Id\":\"Param_Angle_Rotation_9_ArtMesh33\"},\"VertexIndex\":3,\"Scale\":8,\"Weight\":100,\"Type\":\"Angle\",\"Reflect\":false}],\"Vertices\":[{\"Position\":{\"X\":0,\"Y\":0},\"Mobility\":1,\"Delay\":1,\"Acceleration\":1,\"Radius\":0},{\"Position\":{\"X\":0,\"Y\":10},\"Mobility\":0.85,\"Delay\":0.9,\"Acceleration\":1,\"Radius\":10},{\"Position\":{\"X\":0,\"Y\":20},\"Mobility\":0.9,\"Delay\":0.9,\"Acceleration\":1,\"Radius\":10},{\"Position\":{\"X\":0,\"Y\":28},\"Mobility\":0.9,\"Delay\":0.9,\"Acceleration\":0.8,\"Radius\":8}],\"Normalization\":{\"Position\":{\"Minimum\":-10,\"Default\":0,\"Maximum\":10},\"Angle\":{\"Minimum\":-10,\"Default\":0,\"Maximum\":10}}},{\"Id\":\"PhysicsSetting3\",\"Input\":[{\"Source\":{\"Target\":\"Parameter\",\"Id\":\"ParamAngleX\"},\"Weight\":40,\"Type\":\"X\",\"Reflect\":false},{\"Source\":{\"Target\":\"Parameter\",\"Id\":\"ParamAngleY\"},\"Weight\":40,\"Type\":\"X\",\"Reflect\":false},{\"Source\":{\"Target\":\"Parameter\",\"Id\":\"ParamAngleZ\"},\"Weight\":20,\"Type\":\"Angle\",\"Reflect\":false}],\"Output\":[{\"Destination\":{\"Target\":\"Parameter\",\"Id\":\"Param_Angle_Rotation_6_ArtMesh18\"},\"VertexIndex\":1,\"Scale\":9,\"Weight\":100,\"Type\":\"Angle\",\"Reflect\":false},{\"Destination\":{\"Target\":\"Parameter\",\"Id\":\"Param_Angle_Rotation_7_ArtMesh18\"},\"VertexIndex\":2,\"Scale\":9,\"Weight\":100,\"Type\":\"Angle\",\"Reflect\":false}],\"Vertices\":[{\"Position\":{\"X\":0,\"Y\":0},\"Mobility\":1,\"Delay\":1,\"Acceleration\":1,\"Radius\":0},{\"Position\":{\"X\":0,\"Y\":10},\"Mobility\":0.9,\"Delay\":0.8,\"Acceleration\":1.5,\"Radius\":10},{\"Position\":{\"X\":0,\"Y\":18},\"Mobility\":0.8,\"Delay\":0.8,\"Acceleration\":1.5,\"Radius\":8}],\"Normalization\":{\"Position\":{\"Minimum\":-10,\"Default\":0,\"Maximum\":10},\"Angle\":{\"Minimum\":-10,\"Default\":0,\"Maximum\":10}}},{\"Id\":\"PhysicsSetting4\",\"Input\":[{\"Source\":{\"Target\":\"Parameter\",\"Id\":\"ParamAngleX\"},\"Weight\":40,\"Type\":\"X\",\"Reflect\":false},{\"Source\":{\"Target\":\"Parameter\",\"Id\":\"ParamAngleY\"},\"Weight\":40,\"Type\":\"X\",\"Reflect\":false},{\"Source\":{\"Target\":\"Parameter\",\"Id\":\"ParamAngleZ\"},\"Weight\":20,\"Type\":\"Angle\",\"Reflect\":false}],\"Output\":[{\"Destination\":{\"Target\":\"Parameter\",\"Id\":\"Param_Angle_Rotation_6_ArtMesh17\"},\"VertexIndex\":1,\"Scale\":8,\"Weight\":100,\"Type\":\"Angle\",\"Reflect\":false},{\"Destination\":{\"Target\":\"Parameter\",\"Id\":\"Param_Angle_Rotation_7_ArtMesh17\"},\"VertexIndex\":2,\"Scale\":8,\"Weight\":100,\"Type\":\"Angle\",\"Reflect\":false}],\"Vertices\":[{\"Position\":{\"X\":0,\"Y\":0},\"Mobility\":1,\"Delay\":1,\"Acceleration\":1,\"Radius\":0},{\"Position\":{\"X\":0,\"Y\":10},\"Mobility\":0.9,\"Delay\":0.8,\"Acceleration\":1.5,\"Radius\":10},{\"Position\":{\"X\":0,\"Y\":18},\"Mobility\":0.8,\"Delay\":0.8,\"Acceleration\":1.5,\"Radius\":8}],\"Normalization\":{\"Position\":{\"Minimum\":-10,\"Default\":0,\"Maximum\":10},\"Angle\":{\"Minimum\":-10,\"Default\":0,\"Maximum\":10}}}]}"},{"_content":"{\n\t\"Version\": 3,\n\t\"FileReferences\": {\n\t\t\"Moc\": \"fll.moc3\",\n\t\t\"Textures\": [\n\t\t\t\"fll.4096/texture_00.png\"\n\t\t],\n\t\t\"Physics\": \"fll.physics3.json\",\n\t\t\"DisplayInfo\": \"fll.cdi3.json\"\n\t},\n\t\"Groups\": [\n\t\t{\n\t\t\t\"Target\": \"Parameter\",\n\t\t\t\"Name\": \"EyeBlink\",\n\t\t\t\"Ids\": []\n\t\t},\n\t\t{\n\t\t\t\"Target\": \"Parameter\",\n\t\t\t\"Name\": \"LipSync\",\n\t\t\t\"Ids\": []\n\t\t}\n\t]\n}","source":"live2d_models/fll/fll.model3.json","raw":"{\n\t\"Version\": 3,\n\t\"FileReferences\": {\n\t\t\"Moc\": \"fll.moc3\",\n\t\t\"Textures\": [\n\t\t\t\"fll.4096/texture_00.png\"\n\t\t],\n\t\t\"Physics\": \"fll.physics3.json\",\n\t\t\"DisplayInfo\": \"fll.cdi3.json\"\n\t},\n\t\"Groups\": [\n\t\t{\n\t\t\t\"Target\": \"Parameter\",\n\t\t\t\"Name\": \"EyeBlink\",\n\t\t\t\"Ids\": []\n\t\t},\n\t\t{\n\t\t\t\"Target\": \"Parameter\",\n\t\t\t\"Name\": \"LipSync\",\n\t\t\t\"Ids\": []\n\t\t}\n\t]\n}","date":"2025-04-22T09:49:36.505Z","updated":"2023-11-27T09:46:38.000Z","path":"live2d_models/fll/fll.model3.json","layout":"false","title":"","comments":1,"_id":"cm9w745im000dd8gk1wyt9y3y","content":"{\"Version\":3,\"FileReferences\":{\"Moc\":\"fll.moc3\",\"Textures\":[\"fll.4096/texture_00.png\"],\"Physics\":\"fll.physics3.json\",\"DisplayInfo\":\"fll.cdi3.json\"},\"Groups\":[{\"Target\":\"Parameter\",\"Name\":\"EyeBlink\",\"Ids\":[]},{\"Target\":\"Parameter\",\"Name\":\"LipSync\",\"Ids\":[]}]}"}],"Post":[{"layout":"linux离线安装oracle JDK","title":"linux 离线安装 oracle JDK","date":"2018-05-13T03:02:48.000Z","description":"本文是在deepin linux(基于debian发行版)系统环境下,debian,ubuntu以及其他debian衍生版同理适用","_content":"\n    摘要:\n      本文是在deepin linux(基于debian发行版)系统环境下,debian,ubuntu以及其他debian衍生版同理适用\n\n如果电脑处于联网状态,那么可以使用apt包管理器在线安装,可使用以下命令在线安装:\n\n`sudo apt update #更新`\n\n`sudo apt install oracle-java8 #安装`\n\n 下面重点介绍离线安装官网下载安装包的方式:\n\n 1.oracle官网下载Linux对应的tar.gz安装包\n\n 2.进入到存放安装包的目录下,执行以下命令将安装包的内容解压到在指定目录(/usr/local/java/文件夹自己事先建好)\n\n `sudo tar zxvf ./xxxx.tar.gz  -C /usr/local/java`\n\n3.查看第二步是否成功,如果有/usr/local/java/下有jdk对应的目录结构,则表示成功\n\n`ls -anl /usr/local/java/`\n\n4.配置环境变量(此处配置到当前用户的环境变量上)\n\n`sudo  vim ~/.bashrc #用vim打开当前用户的环境变量配置文件`\n\n在.bashrc文件底部加入以下内容,然后保存退出\n\n    export JAVA_HOME=/usr/local/java/java-8u5_xxx\n\n    export JRE_HOME=${JAVA_HOME}/jre   \n\n    export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib   \n\n    export PATH=${JAVA_HOME}/bin:$PATH\n\n    unset _JAVA_OPTIONS\n\n\n\n5.执行以下命令使刚刚的配置生效\n\n`source ~/.bashrc`\n\n6.验证安装结果,执行下列命令,如果一切无误,会正常出现对应的java版本信息\n\n`java -version`\n","source":"_posts/JDK.md","raw":"---\nlayout: linux离线安装oracle JDK\ntitle: linux离线安装oracle JDK\ndate: 2018-05-13 11:02:48\ndescription: 本文是在deepin linux(基于debian发行版)系统环境下,debian,ubuntu以及其他debian衍生版同理适用\ntags:\n  - linux\n  - java\n  - jdk\n---\n\n    摘要:\n      本文是在deepin linux(基于debian发行版)系统环境下,debian,ubuntu以及其他debian衍生版同理适用\n\n如果电脑处于联网状态,那么可以使用apt包管理器在线安装,可使用以下命令在线安装:\n\n`sudo apt update #更新`\n\n`sudo apt install oracle-java8 #安装`\n\n 下面重点介绍离线安装官网下载安装包的方式:\n\n 1.oracle官网下载Linux对应的tar.gz安装包\n\n 2.进入到存放安装包的目录下,执行以下命令将安装包的内容解压到在指定目录(/usr/local/java/文件夹自己事先建好)\n\n `sudo tar zxvf ./xxxx.tar.gz  -C /usr/local/java`\n\n3.查看第二步是否成功,如果有/usr/local/java/下有jdk对应的目录结构,则表示成功\n\n`ls -anl /usr/local/java/`\n\n4.配置环境变量(此处配置到当前用户的环境变量上)\n\n`sudo  vim ~/.bashrc #用vim打开当前用户的环境变量配置文件`\n\n在.bashrc文件底部加入以下内容,然后保存退出\n\n    export JAVA_HOME=/usr/local/java/java-8u5_xxx\n\n    export JRE_HOME=${JAVA_HOME}/jre   \n\n    export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib   \n\n    export PATH=${JAVA_HOME}/bin:$PATH\n\n    unset _JAVA_OPTIONS\n\n\n\n5.执行以下命令使刚刚的配置生效\n\n`source ~/.bashrc`\n\n6.验证安装结果,执行下列命令,如果一切无误,会正常出现对应的java版本信息\n\n`java -version`\n","slug":"JDK","published":1,"updated":"2025-04-22T08:17:12.593Z","comments":1,"photos":[],"_id":"cm9w745ie0001d8gk5mjkggk8","content":"<pre><code>摘要:\n  本文是在deepin linux(基于debian发行版)系统环境下,debian,ubuntu以及其他debian衍生版同理适用\n</code></pre>\n<p>如果电脑处于联网状态，那么可以使用 apt 包管理器在线安装，可使用以下命令在线安装:</p>\n<p><code>sudo apt update #更新</code></p>\n<p><code>sudo apt install oracle-java8 #安装</code></p>\n<p> 下面重点介绍离线安装官网下载安装包的方式:</p>\n<p> 1.oracle 官网下载 Linux 对应的 tar.gz 安装包</p>\n<p> 2. 进入到存放安装包的目录下，执行以下命令将安装包的内容解压到在指定目录 (/usr/local/java/ 文件夹自己事先建好)</p>\n<p> <code>sudo tar zxvf ./xxxx.tar.gz  -C /usr/local/java</code></p>\n<p>3. 查看第二步是否成功，如果有 /usr/local/java/ 下有 jdk 对应的目录结构，则表示成功</p>\n<p><code>ls -anl /usr/local/java/</code></p>\n<p>4. 配置环境变量 (此处配置到当前用户的环境变量上)</p>\n<p><code>sudo  vim ~/.bashrc #用vim打开当前用户的环境变量配置文件</code></p>\n<p>在.bashrc 文件底部加入以下内容，然后保存退出</p>\n<pre><code>export JAVA_HOME=/usr/local/java/java-8u5_xxx\n\nexport JRE_HOME=${JAVA_HOME}/jre   \n\nexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib   \n\nexport PATH=${JAVA_HOME}/bin:$PATH\n\nunset _JAVA_OPTIONS\n</code></pre>\n<p>5. 执行以下命令使刚刚的配置生效</p>\n<p><code>source ~/.bashrc</code></p>\n<p>6. 验证安装结果，执行下列命令，如果一切无误，会正常出现对应的 java 版本信息</p>\n<p><code>java -version</code></p>\n","excerpt":"","more":"<pre><code>摘要:\n  本文是在deepin linux(基于debian发行版)系统环境下,debian,ubuntu以及其他debian衍生版同理适用\n</code></pre>\n<p>如果电脑处于联网状态，那么可以使用 apt 包管理器在线安装，可使用以下命令在线安装:</p>\n<p><code>sudo apt update #更新</code></p>\n<p><code>sudo apt install oracle-java8 #安装</code></p>\n<p> 下面重点介绍离线安装官网下载安装包的方式:</p>\n<p> 1.oracle 官网下载 Linux 对应的 tar.gz 安装包</p>\n<p> 2. 进入到存放安装包的目录下，执行以下命令将安装包的内容解压到在指定目录 (/usr/local/java/ 文件夹自己事先建好)</p>\n<p> <code>sudo tar zxvf ./xxxx.tar.gz  -C /usr/local/java</code></p>\n<p>3. 查看第二步是否成功，如果有 /usr/local/java/ 下有 jdk 对应的目录结构，则表示成功</p>\n<p><code>ls -anl /usr/local/java/</code></p>\n<p>4. 配置环境变量 (此处配置到当前用户的环境变量上)</p>\n<p><code>sudo  vim ~/.bashrc #用vim打开当前用户的环境变量配置文件</code></p>\n<p>在.bashrc 文件底部加入以下内容，然后保存退出</p>\n<pre><code>export JAVA_HOME=/usr/local/java/java-8u5_xxx\n\nexport JRE_HOME=${JAVA_HOME}/jre   \n\nexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib   \n\nexport PATH=${JAVA_HOME}/bin:$PATH\n\nunset _JAVA_OPTIONS\n</code></pre>\n<p>5. 执行以下命令使刚刚的配置生效</p>\n<p><code>source ~/.bashrc</code></p>\n<p>6. 验证安装结果，执行下列命令，如果一切无误，会正常出现对应的 java 版本信息</p>\n<p><code>java -version</code></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:17:12 GMT+0800 (China Standard Time)","title":"linux 离线安装 oracle JDK","path":"2018/05/13/JDK/","eyeCatchImage":null,"excerpt":"本文是在deepin linux(基于debian发行版)系统环境下,debian,ubuntu以及其他debian衍生版同理适用","date":{"_isAMomentObject":true,"_i":"2018-05-13T03:02:48.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-05-13T03:02:48.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["linux","java","jdk"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":340},{"title":"Linux 下安装 maven","date":"2018-05-13T03:18:57.000Z","description":"Linux系统下离线安装maven","_content":"\n    摘要:\n      Linux系统下离线安装maven\n\n1.在Apache官方网站下载对应系统的maven包然后解压maven\n\n2.配置环境变量.(配置到当前用户的环境变量上)\n\n`sudo  vim ~/.bashrc #用vim打开当前用户的环境变量配置文件`\n\n在.bashrc文件底部加入以下内容,然后保存退出.(M2_HOME代表解压后的maven目录)\n\n    export M2_HOME=/home/user/apache-maven-3.3.9\n\n    export PATH=${M2_HOME}/bin:$PATH\n\n3.执行以下命令使刚刚的配置生效\n\n    `source ~/.bashrc`\n\n4.验证安装结果,执行下列命令,如果一切无误,会正常出现对应的maven版本信息\n\n    `mvn -v`\n","source":"_posts/Linux下安装maven.md","raw":"---\ntitle: Linux下安装maven\ndate: 2018-05-13 11:18:57\ndescription: Linux系统下离线安装maven\ntags:\n  - java\n  - linux\n  - maven\n---\n\n    摘要:\n      Linux系统下离线安装maven\n\n1.在Apache官方网站下载对应系统的maven包然后解压maven\n\n2.配置环境变量.(配置到当前用户的环境变量上)\n\n`sudo  vim ~/.bashrc #用vim打开当前用户的环境变量配置文件`\n\n在.bashrc文件底部加入以下内容,然后保存退出.(M2_HOME代表解压后的maven目录)\n\n    export M2_HOME=/home/user/apache-maven-3.3.9\n\n    export PATH=${M2_HOME}/bin:$PATH\n\n3.执行以下命令使刚刚的配置生效\n\n    `source ~/.bashrc`\n\n4.验证安装结果,执行下列命令,如果一切无误,会正常出现对应的maven版本信息\n\n    `mvn -v`\n","slug":"Linux下安装maven","published":1,"updated":"2025-04-22T08:17:19.878Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745ig0003d8gkcsmz2y7o","content":"<pre><code>摘要:\n  Linux系统下离线安装maven\n</code></pre>\n<p>1. 在 Apache 官方网站下载对应系统的 maven 包然后解压 maven</p>\n<p>2. 配置环境变量.(配置到当前用户的环境变量上)</p>\n<p><code>sudo  vim ~/.bashrc #用vim打开当前用户的环境变量配置文件</code></p>\n<p>在.bashrc 文件底部加入以下内容，然后保存退出.(M2_HOME 代表解压后的 maven 目录)</p>\n<pre><code>export M2_HOME=/home/user/apache-maven-3.3.9\n\nexport PATH=${M2_HOME}/bin:$PATH\n</code></pre>\n<p>3. 执行以下命令使刚刚的配置生效</p>\n<pre><code>`source ~/.bashrc`\n</code></pre>\n<p>4. 验证安装结果，执行下列命令，如果一切无误，会正常出现对应的 maven 版本信息</p>\n<pre><code>`mvn -v`\n</code></pre>\n","excerpt":"","more":"<pre><code>摘要:\n  Linux系统下离线安装maven\n</code></pre>\n<p>1. 在 Apache 官方网站下载对应系统的 maven 包然后解压 maven</p>\n<p>2. 配置环境变量.(配置到当前用户的环境变量上)</p>\n<p><code>sudo  vim ~/.bashrc #用vim打开当前用户的环境变量配置文件</code></p>\n<p>在.bashrc 文件底部加入以下内容，然后保存退出.(M2_HOME 代表解压后的 maven 目录)</p>\n<pre><code>export M2_HOME=/home/user/apache-maven-3.3.9\n\nexport PATH=${M2_HOME}/bin:$PATH\n</code></pre>\n<p>3. 执行以下命令使刚刚的配置生效</p>\n<pre><code>`source ~/.bashrc`\n</code></pre>\n<p>4. 验证安装结果，执行下列命令，如果一切无误，会正常出现对应的 maven 版本信息</p>\n<pre><code>`mvn -v`\n</code></pre>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:17:19 GMT+0800 (China Standard Time)","title":"Linux 下安装 maven","path":"2018/05/13/Linux下安装maven/","eyeCatchImage":null,"excerpt":"Linux系统下离线安装maven","date":{"_isAMomentObject":true,"_i":"2018-05-13T03:18:57.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-05-13T03:18:57.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["linux","java","maven"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":163},{"title":"Linux 增加使用文件代替 swap 分区分方法","date":"2018-05-13T02:52:59.000Z","description":"Linux增加使用文件代替swap分区","_content":"\n    摘要:\n      在安装Linux系统的时候未对系统进行swap(交换分区),后续进入系统\n      可以采用新建文件的方式来代替swap分区.\n      以下所执行的系统环境是:deepin linux(基于debian发行版),\n      按理在Ubuntu,debian上也是可以的.\n\n注意:执行以下命令时,全部采用root账户的权限\n\n1.创建要作为swap分区的文件:增加1GB大小的交换分区，则命令写法如下，其中的count等于想要的块的数量（bs*count=文件大小）\n\n`sudo dd if=/dev/zero of=/swapfile bs=1M count=1024`\n\n2.格式化为交换分区文件,建立swap的文件系统\n\n`sudo mkswap /swapfile`\n\n3.启用交换分区文件\n\n`sudo swapon /swapfile`\n\n4.使系统开机时自启用，在文件/etc/fstab中添加一行(可使用vim打开文件进行编辑)：\n\n`/swapfile swap swap defaults 0 0`\n\n5.验证结果,执行free 命令查看是否有交换分区\n\n`free -m `\n\n注:如果想移除swap分区文件,执行以下命令:\n\n`sudo swapoff /swapfile && sudo rm /swapfile`\n","source":"_posts/Linux增加使用文件代替swap分区分方法.md","raw":"---\ntitle: Linux增加使用文件代替swap分区分方法\ndate: 2018-05-13 10:52:59\ndescription: Linux增加使用文件代替swap分区\ntags:\n  - linux\n  - swap\n---\n\n    摘要:\n      在安装Linux系统的时候未对系统进行swap(交换分区),后续进入系统\n      可以采用新建文件的方式来代替swap分区.\n      以下所执行的系统环境是:deepin linux(基于debian发行版),\n      按理在Ubuntu,debian上也是可以的.\n\n注意:执行以下命令时,全部采用root账户的权限\n\n1.创建要作为swap分区的文件:增加1GB大小的交换分区，则命令写法如下，其中的count等于想要的块的数量（bs*count=文件大小）\n\n`sudo dd if=/dev/zero of=/swapfile bs=1M count=1024`\n\n2.格式化为交换分区文件,建立swap的文件系统\n\n`sudo mkswap /swapfile`\n\n3.启用交换分区文件\n\n`sudo swapon /swapfile`\n\n4.使系统开机时自启用，在文件/etc/fstab中添加一行(可使用vim打开文件进行编辑)：\n\n`/swapfile swap swap defaults 0 0`\n\n5.验证结果,执行free 命令查看是否有交换分区\n\n`free -m `\n\n注:如果想移除swap分区文件,执行以下命令:\n\n`sudo swapoff /swapfile && sudo rm /swapfile`\n","slug":"Linux增加使用文件代替swap分区分方法","published":1,"updated":"2025-04-22T08:18:16.872Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745ij0006d8gkfs7mdnbf","content":"<pre><code>摘要:\n  在安装Linux系统的时候未对系统进行swap(交换分区),后续进入系统\n  可以采用新建文件的方式来代替swap分区.\n  以下所执行的系统环境是:deepin linux(基于debian发行版),\n  按理在Ubuntu,debian上也是可以的.\n</code></pre>\n<p>注意：执行以下命令时，全部采用 root 账户的权限</p>\n<p>1. 创建要作为 swap 分区的文件：增加 1GB 大小的交换分区，则命令写法如下，其中的 count 等于想要的块的数量（bs*count = 文件大小）</p>\n<p><code>sudo dd if=/dev/zero of=/swapfile bs=1M count=1024</code></p>\n<p>2. 格式化为交换分区文件，建立 swap 的文件系统</p>\n<p><code>sudo mkswap /swapfile</code></p>\n<p>3. 启用交换分区文件</p>\n<p><code>sudo swapon /swapfile</code></p>\n<p>4. 使系统开机时自启用，在文件 /etc/fstab 中添加一行 (可使用 vim 打开文件进行编辑)：</p>\n<p><code>/swapfile swap swap defaults 0 0</code></p>\n<p>5. 验证结果，执行 free 命令查看是否有交换分区</p>\n<p><code>free -m </code></p>\n<p>注：如果想移除 swap 分区文件，执行以下命令:</p>\n<p><code>sudo swapoff /swapfile &amp;&amp; sudo rm /swapfile</code></p>\n","excerpt":"","more":"<pre><code>摘要:\n  在安装Linux系统的时候未对系统进行swap(交换分区),后续进入系统\n  可以采用新建文件的方式来代替swap分区.\n  以下所执行的系统环境是:deepin linux(基于debian发行版),\n  按理在Ubuntu,debian上也是可以的.\n</code></pre>\n<p>注意：执行以下命令时，全部采用 root 账户的权限</p>\n<p>1. 创建要作为 swap 分区的文件：增加 1GB 大小的交换分区，则命令写法如下，其中的 count 等于想要的块的数量（bs*count = 文件大小）</p>\n<p><code>sudo dd if=/dev/zero of=/swapfile bs=1M count=1024</code></p>\n<p>2. 格式化为交换分区文件，建立 swap 的文件系统</p>\n<p><code>sudo mkswap /swapfile</code></p>\n<p>3. 启用交换分区文件</p>\n<p><code>sudo swapon /swapfile</code></p>\n<p>4. 使系统开机时自启用，在文件 /etc/fstab 中添加一行 (可使用 vim 打开文件进行编辑)：</p>\n<p><code>/swapfile swap swap defaults 0 0</code></p>\n<p>5. 验证结果，执行 free 命令查看是否有交换分区</p>\n<p><code>free -m </code></p>\n<p>注：如果想移除 swap 分区文件，执行以下命令:</p>\n<p><code>sudo swapoff /swapfile &amp;&amp; sudo rm /swapfile</code></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:18:16 GMT+0800 (China Standard Time)","title":"Linux 增加使用文件代替 swap 分区分方法","path":"2018/05/13/Linux增加使用文件代替swap分区分方法/","eyeCatchImage":null,"excerpt":"Linux增加使用文件代替swap分区","date":{"_isAMomentObject":true,"_i":"2018-05-13T02:52:59.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-05-13T02:52:59.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["linux","swap"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":269},{"title":"Linux 常用压缩解压缩","date":"2018-05-20T09:08:52.000Z","description":"Linux常用压缩解压缩","_content":"\n    摘要:\n      Linux下常用的压缩格式有:.zip .gz .bz2 .tar.gz .tar.bz2\n\n#### 1 .zip格式压缩\n\n压缩文件 `zip 压缩文件名 源文件`\n\n    zip test.zip ./test.txt #将当前目录的test.txt文档压缩为test.zip\n\n压缩目录 `zip -r 压缩文件名 源目录`\n\n    zip test1.zip ./test1 #将当前目录的test1目录压缩为test1.zip\n\n#### 2 .zip格式解压缩\n\n解压文件  `unzip 压缩文件`\n\n    zip ./test1.zip #解压缩当前目录的test1.zip文件\n\n#### 3 .gz格式压缩\n\n压缩为.gz文件,源文件消失  `gzip 源文件`\n\n压缩为.gz文件,源文件保留  `gzip -c 源文件 > 压缩文件`\n\n压缩目录下的所有子文件,但是不能压缩目录  `gzip -r 目录`\n\n#### 4 .gz格式解压缩\n\n解压缩.gz文件  `gzip -d 压缩文件`\n\n解压缩.gz文件  `gunzip  压缩文件`\n\n#### 5 .bz2格式压缩\n\n压缩为.bz2格式,不保留源文件  `bzip2 源文件`\n\n压缩为.bz2格式,保留源文件 `bzip2 -k 源文件`\n\n注:bzip2不能压缩目录\n\n#### 6 .bz2格式解压缩\n\n解压缩.bz2文件,-k保留压缩文件  `bzip2 -d 压缩文件`\n\n解压缩.bz2文件,-k保留压缩文件  `bunzip2 压缩文件`\n\n#### 7 .tar.gz格式压缩(先打包为tar,再压缩为.gz文件)\n\ntar打包命令  `tar -cvf 打包文件名 源文件`\n\n选项: -c 打包; -v 现实过程; -f 指定打包后的文件名\n\ntar -cvf test.tar ./test 将当前目录下test目录打包为tar文件\n\ngzip test.tar  生成test.tar.gz文件\n\nbzip2 test.tar 生成test.tar.bz2文件\n\n上述过程繁琐,可以直接用  `tar -zcvf 压缩包名.tar.gz 源文件`\n\n#### 8 .tar.gz格式解压缩(先用gzip解压文件,然后解打包)\n\n解打包命令  `tar -xvf 打包文件名`\n\n选项: -x 解打包\n\ntar -vxf test.tar   解包text.tar文件\n\n上述过程繁琐,可以直接用  `tar -zxvf 压缩包名.tar.gz`,\n解压到指定目录可用-C选项指定目录 `tar -zxvf 压缩包名.tar.gz -C /tmp/`\n\n#### 9 .tar.bz2格式压缩(先打包为tar,再压缩为.bz2文件)\n\ntar打包命令  `tar -cvf 打包文件名 源文件`\n\n选项: -c 打包; -v 现实过程; -f 指定打包后的文件名\n\ntar -cvf test.tar ./test 将当前目录下test目录打包为tar文件\n\nbzip2 test.tar 生成test.tar.bz2文件\n\n上述过程繁琐,可以直接用  `tar -jcvf 压缩包名.tar.bz2 源文件`\n\n#### 10 .tar.bz2格式解压缩(先用bzip2解压文件,然后解打包)\n\n解打包命令  `tar -xvf 打包文件名`\n\n选项: -x 解打包\n\ntar -vxf test.tar   解包text.tar文件\n\n上述过程繁琐,可以直接用  `tar -jxvf 压缩包名.tar.bz2`,\n解压到指定目录可用-C选项指定目录 `tar -jxvf 压缩包名.tar.bz2 -C /tmp/`\n","source":"_posts/Linux常用压缩解压缩.md","raw":"---\ntitle: Linux常用压缩解压缩\ndate: 2018-05-20 17:08:52\ntags: linux\ndescription: Linux常用压缩解压缩\n---\n\n    摘要:\n      Linux下常用的压缩格式有:.zip .gz .bz2 .tar.gz .tar.bz2\n\n#### 1 .zip格式压缩\n\n压缩文件 `zip 压缩文件名 源文件`\n\n    zip test.zip ./test.txt #将当前目录的test.txt文档压缩为test.zip\n\n压缩目录 `zip -r 压缩文件名 源目录`\n\n    zip test1.zip ./test1 #将当前目录的test1目录压缩为test1.zip\n\n#### 2 .zip格式解压缩\n\n解压文件  `unzip 压缩文件`\n\n    zip ./test1.zip #解压缩当前目录的test1.zip文件\n\n#### 3 .gz格式压缩\n\n压缩为.gz文件,源文件消失  `gzip 源文件`\n\n压缩为.gz文件,源文件保留  `gzip -c 源文件 > 压缩文件`\n\n压缩目录下的所有子文件,但是不能压缩目录  `gzip -r 目录`\n\n#### 4 .gz格式解压缩\n\n解压缩.gz文件  `gzip -d 压缩文件`\n\n解压缩.gz文件  `gunzip  压缩文件`\n\n#### 5 .bz2格式压缩\n\n压缩为.bz2格式,不保留源文件  `bzip2 源文件`\n\n压缩为.bz2格式,保留源文件 `bzip2 -k 源文件`\n\n注:bzip2不能压缩目录\n\n#### 6 .bz2格式解压缩\n\n解压缩.bz2文件,-k保留压缩文件  `bzip2 -d 压缩文件`\n\n解压缩.bz2文件,-k保留压缩文件  `bunzip2 压缩文件`\n\n#### 7 .tar.gz格式压缩(先打包为tar,再压缩为.gz文件)\n\ntar打包命令  `tar -cvf 打包文件名 源文件`\n\n选项: -c 打包; -v 现实过程; -f 指定打包后的文件名\n\ntar -cvf test.tar ./test 将当前目录下test目录打包为tar文件\n\ngzip test.tar  生成test.tar.gz文件\n\nbzip2 test.tar 生成test.tar.bz2文件\n\n上述过程繁琐,可以直接用  `tar -zcvf 压缩包名.tar.gz 源文件`\n\n#### 8 .tar.gz格式解压缩(先用gzip解压文件,然后解打包)\n\n解打包命令  `tar -xvf 打包文件名`\n\n选项: -x 解打包\n\ntar -vxf test.tar   解包text.tar文件\n\n上述过程繁琐,可以直接用  `tar -zxvf 压缩包名.tar.gz`,\n解压到指定目录可用-C选项指定目录 `tar -zxvf 压缩包名.tar.gz -C /tmp/`\n\n#### 9 .tar.bz2格式压缩(先打包为tar,再压缩为.bz2文件)\n\ntar打包命令  `tar -cvf 打包文件名 源文件`\n\n选项: -c 打包; -v 现实过程; -f 指定打包后的文件名\n\ntar -cvf test.tar ./test 将当前目录下test目录打包为tar文件\n\nbzip2 test.tar 生成test.tar.bz2文件\n\n上述过程繁琐,可以直接用  `tar -jcvf 压缩包名.tar.bz2 源文件`\n\n#### 10 .tar.bz2格式解压缩(先用bzip2解压文件,然后解打包)\n\n解打包命令  `tar -xvf 打包文件名`\n\n选项: -x 解打包\n\ntar -vxf test.tar   解包text.tar文件\n\n上述过程繁琐,可以直接用  `tar -jxvf 压缩包名.tar.bz2`,\n解压到指定目录可用-C选项指定目录 `tar -jxvf 压缩包名.tar.bz2 -C /tmp/`\n","slug":"Linux常用压缩解压缩","published":1,"updated":"2025-04-22T08:18:25.195Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745ik0008d8gk7ee5h1s6","content":"<pre><code>摘要:\n  Linux下常用的压缩格式有:.zip .gz .bz2 .tar.gz .tar.bz2\n</code></pre>\n<h4 id=\"1-zip格式压缩\"><a href=\"#1-zip格式压缩\" class=\"headerlink\" title=\"1 .zip格式压缩\"></a>1 .zip 格式压缩</h4><p>压缩文件 <code>zip 压缩文件名 源文件</code></p>\n<pre><code>zip test.zip ./test.txt #将当前目录的test.txt文档压缩为test.zip\n</code></pre>\n<p>压缩目录 <code>zip -r 压缩文件名 源目录</code></p>\n<pre><code>zip test1.zip ./test1 #将当前目录的test1目录压缩为test1.zip\n</code></pre>\n<h4 id=\"2-zip格式解压缩\"><a href=\"#2-zip格式解压缩\" class=\"headerlink\" title=\"2 .zip格式解压缩\"></a>2 .zip 格式解压缩</h4><p>解压文件  <code>unzip 压缩文件</code></p>\n<pre><code>zip ./test1.zip #解压缩当前目录的test1.zip文件\n</code></pre>\n<h4 id=\"3-gz格式压缩\"><a href=\"#3-gz格式压缩\" class=\"headerlink\" title=\"3 .gz格式压缩\"></a>3 .gz 格式压缩</h4><p>压缩为.gz 文件，源文件消失  <code>gzip 源文件</code></p>\n<p>压缩为.gz 文件，源文件保留  <code>gzip -c 源文件 &gt; 压缩文件</code></p>\n<p>压缩目录下的所有子文件，但是不能压缩目录  <code>gzip -r 目录</code></p>\n<h4 id=\"4-gz格式解压缩\"><a href=\"#4-gz格式解压缩\" class=\"headerlink\" title=\"4 .gz格式解压缩\"></a>4 .gz 格式解压缩</h4><p>解压缩.gz 文件  <code>gzip -d 压缩文件</code></p>\n<p>解压缩.gz 文件  <code>gunzip  压缩文件</code></p>\n<h4 id=\"5-bz2格式压缩\"><a href=\"#5-bz2格式压缩\" class=\"headerlink\" title=\"5 .bz2格式压缩\"></a>5 .bz2 格式压缩</h4><p>压缩为.bz2 格式，不保留源文件  <code>bzip2 源文件</code></p>\n<p>压缩为.bz2 格式，保留源文件 <code>bzip2 -k 源文件</code></p>\n<p>注:bzip2 不能压缩目录</p>\n<h4 id=\"6-bz2格式解压缩\"><a href=\"#6-bz2格式解压缩\" class=\"headerlink\" title=\"6 .bz2格式解压缩\"></a>6 .bz2 格式解压缩</h4><p>解压缩.bz2 文件，-k 保留压缩文件  <code>bzip2 -d 压缩文件</code></p>\n<p>解压缩.bz2 文件，-k 保留压缩文件  <code>bunzip2 压缩文件</code></p>\n<h4 id=\"7-tar-gz格式压缩-先打包为tar-再压缩为-gz文件\"><a href=\"#7-tar-gz格式压缩-先打包为tar-再压缩为-gz文件\" class=\"headerlink\" title=\"7 .tar.gz格式压缩(先打包为tar,再压缩为.gz文件)\"></a>7 .tar.gz 格式压缩 (先打包为 tar, 再压缩为.gz 文件)</h4><p>tar 打包命令  <code>tar -cvf 打包文件名 源文件</code></p>\n<p>选项: -c 打包；-v 现实过程；-f 指定打包后的文件名</p>\n<p>tar -cvf test.tar ./test 将当前目录下 test 目录打包为 tar 文件</p>\n<p>gzip test.tar  生成 test.tar.gz 文件</p>\n<p>bzip2 test.tar 生成 test.tar.bz2 文件</p>\n<p>上述过程繁琐，可以直接用  <code>tar -zcvf 压缩包名.tar.gz 源文件</code></p>\n<h4 id=\"8-tar-gz格式解压缩-先用gzip解压文件-然后解打包\"><a href=\"#8-tar-gz格式解压缩-先用gzip解压文件-然后解打包\" class=\"headerlink\" title=\"8 .tar.gz格式解压缩(先用gzip解压文件,然后解打包)\"></a>8 .tar.gz 格式解压缩 (先用 gzip 解压文件，然后解打包)</h4><p>解打包命令  <code>tar -xvf 打包文件名</code></p>\n<p>选项: -x 解打包</p>\n<p>tar -vxf test.tar   解包 text.tar 文件</p>\n<p>上述过程繁琐，可以直接用  <code>tar -zxvf 压缩包名.tar.gz</code>,<br>解压到指定目录可用 - C 选项指定目录 <code>tar -zxvf 压缩包名.tar.gz -C /tmp/</code></p>\n<h4 id=\"9-tar-bz2格式压缩-先打包为tar-再压缩为-bz2文件\"><a href=\"#9-tar-bz2格式压缩-先打包为tar-再压缩为-bz2文件\" class=\"headerlink\" title=\"9 .tar.bz2格式压缩(先打包为tar,再压缩为.bz2文件)\"></a>9 .tar.bz2 格式压缩 (先打包为 tar, 再压缩为.bz2 文件)</h4><p>tar 打包命令  <code>tar -cvf 打包文件名 源文件</code></p>\n<p>选项: -c 打包；-v 现实过程；-f 指定打包后的文件名</p>\n<p>tar -cvf test.tar ./test 将当前目录下 test 目录打包为 tar 文件</p>\n<p>bzip2 test.tar 生成 test.tar.bz2 文件</p>\n<p>上述过程繁琐，可以直接用  <code>tar -jcvf 压缩包名.tar.bz2 源文件</code></p>\n<h4 id=\"10-tar-bz2格式解压缩-先用bzip2解压文件-然后解打包\"><a href=\"#10-tar-bz2格式解压缩-先用bzip2解压文件-然后解打包\" class=\"headerlink\" title=\"10 .tar.bz2格式解压缩(先用bzip2解压文件,然后解打包)\"></a>10 .tar.bz2 格式解压缩 (先用 bzip2 解压文件，然后解打包)</h4><p>解打包命令  <code>tar -xvf 打包文件名</code></p>\n<p>选项: -x 解打包</p>\n<p>tar -vxf test.tar   解包 text.tar 文件</p>\n<p>上述过程繁琐，可以直接用  <code>tar -jxvf 压缩包名.tar.bz2</code>,<br>解压到指定目录可用 - C 选项指定目录 <code>tar -jxvf 压缩包名.tar.bz2 -C /tmp/</code></p>\n","excerpt":"","more":"<pre><code>摘要:\n  Linux下常用的压缩格式有:.zip .gz .bz2 .tar.gz .tar.bz2\n</code></pre>\n<h4 id=\"1-zip格式压缩\"><a href=\"#1-zip格式压缩\" class=\"headerlink\" title=\"1 .zip格式压缩\"></a>1 .zip 格式压缩</h4><p>压缩文件 <code>zip 压缩文件名 源文件</code></p>\n<pre><code>zip test.zip ./test.txt #将当前目录的test.txt文档压缩为test.zip\n</code></pre>\n<p>压缩目录 <code>zip -r 压缩文件名 源目录</code></p>\n<pre><code>zip test1.zip ./test1 #将当前目录的test1目录压缩为test1.zip\n</code></pre>\n<h4 id=\"2-zip格式解压缩\"><a href=\"#2-zip格式解压缩\" class=\"headerlink\" title=\"2 .zip格式解压缩\"></a>2 .zip 格式解压缩</h4><p>解压文件  <code>unzip 压缩文件</code></p>\n<pre><code>zip ./test1.zip #解压缩当前目录的test1.zip文件\n</code></pre>\n<h4 id=\"3-gz格式压缩\"><a href=\"#3-gz格式压缩\" class=\"headerlink\" title=\"3 .gz格式压缩\"></a>3 .gz 格式压缩</h4><p>压缩为.gz 文件，源文件消失  <code>gzip 源文件</code></p>\n<p>压缩为.gz 文件，源文件保留  <code>gzip -c 源文件 &gt; 压缩文件</code></p>\n<p>压缩目录下的所有子文件，但是不能压缩目录  <code>gzip -r 目录</code></p>\n<h4 id=\"4-gz格式解压缩\"><a href=\"#4-gz格式解压缩\" class=\"headerlink\" title=\"4 .gz格式解压缩\"></a>4 .gz 格式解压缩</h4><p>解压缩.gz 文件  <code>gzip -d 压缩文件</code></p>\n<p>解压缩.gz 文件  <code>gunzip  压缩文件</code></p>\n<h4 id=\"5-bz2格式压缩\"><a href=\"#5-bz2格式压缩\" class=\"headerlink\" title=\"5 .bz2格式压缩\"></a>5 .bz2 格式压缩</h4><p>压缩为.bz2 格式，不保留源文件  <code>bzip2 源文件</code></p>\n<p>压缩为.bz2 格式，保留源文件 <code>bzip2 -k 源文件</code></p>\n<p>注:bzip2 不能压缩目录</p>\n<h4 id=\"6-bz2格式解压缩\"><a href=\"#6-bz2格式解压缩\" class=\"headerlink\" title=\"6 .bz2格式解压缩\"></a>6 .bz2 格式解压缩</h4><p>解压缩.bz2 文件，-k 保留压缩文件  <code>bzip2 -d 压缩文件</code></p>\n<p>解压缩.bz2 文件，-k 保留压缩文件  <code>bunzip2 压缩文件</code></p>\n<h4 id=\"7-tar-gz格式压缩-先打包为tar-再压缩为-gz文件\"><a href=\"#7-tar-gz格式压缩-先打包为tar-再压缩为-gz文件\" class=\"headerlink\" title=\"7 .tar.gz格式压缩(先打包为tar,再压缩为.gz文件)\"></a>7 .tar.gz 格式压缩 (先打包为 tar, 再压缩为.gz 文件)</h4><p>tar 打包命令  <code>tar -cvf 打包文件名 源文件</code></p>\n<p>选项: -c 打包；-v 现实过程；-f 指定打包后的文件名</p>\n<p>tar -cvf test.tar ./test 将当前目录下 test 目录打包为 tar 文件</p>\n<p>gzip test.tar  生成 test.tar.gz 文件</p>\n<p>bzip2 test.tar 生成 test.tar.bz2 文件</p>\n<p>上述过程繁琐，可以直接用  <code>tar -zcvf 压缩包名.tar.gz 源文件</code></p>\n<h4 id=\"8-tar-gz格式解压缩-先用gzip解压文件-然后解打包\"><a href=\"#8-tar-gz格式解压缩-先用gzip解压文件-然后解打包\" class=\"headerlink\" title=\"8 .tar.gz格式解压缩(先用gzip解压文件,然后解打包)\"></a>8 .tar.gz 格式解压缩 (先用 gzip 解压文件，然后解打包)</h4><p>解打包命令  <code>tar -xvf 打包文件名</code></p>\n<p>选项: -x 解打包</p>\n<p>tar -vxf test.tar   解包 text.tar 文件</p>\n<p>上述过程繁琐，可以直接用  <code>tar -zxvf 压缩包名.tar.gz</code>,<br>解压到指定目录可用 - C 选项指定目录 <code>tar -zxvf 压缩包名.tar.gz -C /tmp/</code></p>\n<h4 id=\"9-tar-bz2格式压缩-先打包为tar-再压缩为-bz2文件\"><a href=\"#9-tar-bz2格式压缩-先打包为tar-再压缩为-bz2文件\" class=\"headerlink\" title=\"9 .tar.bz2格式压缩(先打包为tar,再压缩为.bz2文件)\"></a>9 .tar.bz2 格式压缩 (先打包为 tar, 再压缩为.bz2 文件)</h4><p>tar 打包命令  <code>tar -cvf 打包文件名 源文件</code></p>\n<p>选项: -c 打包；-v 现实过程；-f 指定打包后的文件名</p>\n<p>tar -cvf test.tar ./test 将当前目录下 test 目录打包为 tar 文件</p>\n<p>bzip2 test.tar 生成 test.tar.bz2 文件</p>\n<p>上述过程繁琐，可以直接用  <code>tar -jcvf 压缩包名.tar.bz2 源文件</code></p>\n<h4 id=\"10-tar-bz2格式解压缩-先用bzip2解压文件-然后解打包\"><a href=\"#10-tar-bz2格式解压缩-先用bzip2解压文件-然后解打包\" class=\"headerlink\" title=\"10 .tar.bz2格式解压缩(先用bzip2解压文件,然后解打包)\"></a>10 .tar.bz2 格式解压缩 (先用 bzip2 解压文件，然后解打包)</h4><p>解打包命令  <code>tar -xvf 打包文件名</code></p>\n<p>选项: -x 解打包</p>\n<p>tar -vxf test.tar   解包 text.tar 文件</p>\n<p>上述过程繁琐，可以直接用  <code>tar -jxvf 压缩包名.tar.bz2</code>,<br>解压到指定目录可用 - C 选项指定目录 <code>tar -jxvf 压缩包名.tar.bz2 -C /tmp/</code></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:18:25 GMT+0800 (China Standard Time)","title":"Linux 常用压缩解压缩","path":"2018/05/20/Linux常用压缩解压缩/","eyeCatchImage":null,"excerpt":"Linux常用压缩解压缩","date":{"_isAMomentObject":true,"_i":"2018-05-20T09:08:52.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-05-20T09:08:52.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["linux"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":682},{"title":"Linux 下离线安装 nodejs","date":"2018-05-12T10:36:16.000Z","description":"Linux下离线安装nodejs","_content":"\n\n##### Linux下离线安装nodejs步骤:\n---\n\n1.在官网下载Linux版本的nodejs安装包,然后解压并且移动到/usr/local/目录,具体目录可随意指定\n\n`sudo tar -xvJf ./node-v8.9.3-linux-x64.tar.xz -C /usr/local/`\n\n2.配置环境变量，编辑～/.bashrc文件(当前用户的环境变量配置)\n\n`export NODE_HOME=/opt/node`\n\n`export PATH=$PATH:$NODE_HOME/bin`\n\n`export NODE_PATH=$NODE_HOME/lib/node_modules`\n\n3.使配置生效,执行source命令\n\n`source ~/.bashrc`\n\n4.执行如下命令校验配置是否生效\n\n`node -v`\n\n`npm -v`\n","source":"_posts/Linux下安装nodejs.md","raw":"---\ntitle: Linux下离线安装nodejs\ndate: 2018-05-12 18:36:16\ndescription: Linux下离线安装nodejs\ntags:\n- linux\n- nodejs\n---\n\n\n##### Linux下离线安装nodejs步骤:\n---\n\n1.在官网下载Linux版本的nodejs安装包,然后解压并且移动到/usr/local/目录,具体目录可随意指定\n\n`sudo tar -xvJf ./node-v8.9.3-linux-x64.tar.xz -C /usr/local/`\n\n2.配置环境变量，编辑～/.bashrc文件(当前用户的环境变量配置)\n\n`export NODE_HOME=/opt/node`\n\n`export PATH=$PATH:$NODE_HOME/bin`\n\n`export NODE_PATH=$NODE_HOME/lib/node_modules`\n\n3.使配置生效,执行source命令\n\n`source ~/.bashrc`\n\n4.执行如下命令校验配置是否生效\n\n`node -v`\n\n`npm -v`\n","slug":"Linux下安装nodejs","published":1,"updated":"2025-04-22T08:17:28.187Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745il000ad8gk06o6dsoh","content":"<h5 id=\"Linux下离线安装nodejs步骤\"><a href=\"#Linux下离线安装nodejs步骤\" class=\"headerlink\" title=\"Linux下离线安装nodejs步骤:\"></a>Linux 下离线安装 nodejs 步骤:</h5><hr>\n<p>1. 在官网下载 Linux 版本的 nodejs 安装包，然后解压并且移动到 /usr/local/ 目录，具体目录可随意指定</p>\n<p><code>sudo tar -xvJf ./node-v8.9.3-linux-x64.tar.xz -C /usr/local/</code></p>\n<p>2. 配置环境变量，编辑～/.bashrc 文件 (当前用户的环境变量配置)</p>\n<p><code>export NODE_HOME=/opt/node</code></p>\n<p><code>export PATH=$PATH:$NODE_HOME/bin</code></p>\n<p><code>export NODE_PATH=$NODE_HOME/lib/node_modules</code></p>\n<p>3. 使配置生效，执行 source 命令</p>\n<p><code>source ~/.bashrc</code></p>\n<p>4. 执行如下命令校验配置是否生效</p>\n<p><code>node -v</code></p>\n<p><code>npm -v</code></p>\n","excerpt":"","more":"<h5 id=\"Linux下离线安装nodejs步骤\"><a href=\"#Linux下离线安装nodejs步骤\" class=\"headerlink\" title=\"Linux下离线安装nodejs步骤:\"></a>Linux 下离线安装 nodejs 步骤:</h5><hr>\n<p>1. 在官网下载 Linux 版本的 nodejs 安装包，然后解压并且移动到 /usr/local/ 目录，具体目录可随意指定</p>\n<p><code>sudo tar -xvJf ./node-v8.9.3-linux-x64.tar.xz -C /usr/local/</code></p>\n<p>2. 配置环境变量，编辑～/.bashrc 文件 (当前用户的环境变量配置)</p>\n<p><code>export NODE_HOME=/opt/node</code></p>\n<p><code>export PATH=$PATH:$NODE_HOME/bin</code></p>\n<p><code>export NODE_PATH=$NODE_HOME/lib/node_modules</code></p>\n<p>3. 使配置生效，执行 source 命令</p>\n<p><code>source ~/.bashrc</code></p>\n<p>4. 执行如下命令校验配置是否生效</p>\n<p><code>node -v</code></p>\n<p><code>npm -v</code></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:17:28 GMT+0800 (China Standard Time)","title":"Linux 下离线安装 nodejs","path":"2018/05/12/Linux下安装nodejs/","eyeCatchImage":null,"excerpt":"Linux下离线安装nodejs","date":{"_isAMomentObject":true,"_i":"2018-05-12T10:36:16.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-05-12T10:36:16.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["linux","nodejs"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":125},{"title":"MySQL 中 utf8 和 utf8mb4 区别对 emoji 支持","date":"2019-04-27T03:13:08.000Z","description":"utf8mb4是utf8的超集，除了将编码改为utf8mb4外不需要做其他转换。","_content":"\n    摘要:\n      MySQL在5.5.3之后增加了这个utf8mb4的编码，mb4就是most bytes 4的意思，专门用来兼容\n      四字节的unicode。好在utf8mb4是utf8的超集，除了将编码改为utf8mb4外不需要做其他转换。\n      当然，为了节省空间，一般情况下使用utf8也就够了.\n      查看当前的MySQL版本:\n      mysql> select version();\n      或者\n      mysql --version\n\n### utf8不支持emoji表情的问题\n\n  当使用utf8字符集的时候,插入emoji表情符号会提示\" Incorrect string value: '\\xXX\\xXX\\xXX\\xXX' for column......\",原因在于MySQL中utf8字符集只支持三字节UTF-8编码的Unicode范围，而emoji字符属于四字节编码部分.此时,需要将库表的字符集更改为utf8mb4\n\n### 修改字符集为utf8mb4\n\n  修改/etc/mysql/my.cnf文件或者/etc/mysql/mysql.conf.d/mysqld.cnf文件,修改以下参数:\n\n```\n[client]\ndefault-character-set=utf8mb4\n  \n  \n[mysql]\ndefault-character-set=utf8mb4\n  \n  \n[mysqld]\ncharacter-set-server = utf8mb4\ncollation-server = utf8mb4_unicode_ci\ninit_connect = 'SET NAMES utf8mb4'\ncharacter-set-client-handshake = false\n```\n\n    注:\n    1.init_connect='SET NAMES utf8mb4' 表示初始化连接都设置为utf8mb4字符集;\n    2.skip-character-set-client-handshake = true 忽略客户端字符集设置，不论客户端是何种字符集，都按照init_connect中的设置进行使用\n\n### 对数据库相关的表进行字符集修改\n\n#### 建立新库和表的情况,直接使用utf8mb4字符\n\n```\nCREATE DATABASE IF NOT EXISTS test default charset utf8mb4 COLLATE utf8mb4_unicode_ci;\n\nCREATE TABLE `t_table`  (\n  `id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,\n  `create_time` datetime(0) NULL DEFAULT NULL,\n  'comment' varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,\n  PRIMARY KEY (`id`) USING BTREE\n) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci ROW_FORMAT = Dynamic;\n```\n\n#### 已经存在表的情况,对库,表和字段都修改为utf8mb4\n\n```\nmysql> ALTER DATABASE test CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n\nmysql>ALTER TABLE `t_table` CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n\nmysql>ALTER TABLE `t_table` MODIFY COLUMN `comment`  varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n```\n\n### 重启MySQL服务\n\n```\n/etc/init.d/mysqld restart 或者service mysql restart\n```\n\n### 登录数据库查看字符集是否更改成功\n\n```\nmysql> SHOW VARIABLES WHERE Variable_name LIKE 'character%' OR Variable_name LIKE 'collation%';\n\n+--------------------------+----------------------------+\n| Variable_name            | Value                      |\n+--------------------------+----------------------------+\n| character_set_client     | utf8mb4                    |\n| character_set_connection | utf8mb4                    |\n| character_set_database   | utf8mb4                    |\n| character_set_filesystem | binary                     |\n| character_set_results    | utf8mb4                    |\n| character_set_server     | utf8mb4                    |\n| character_set_system     | utf8                       |\n| character_sets_dir       | /usr/share/mysql/charsets/ |\n| collation_connection     | utf8mb4_unicode_ci         |\n| collation_database       | utf8mb4_unicode_ci         |\n| collation_server         | utf8mb4_unicode_ci         |\n+--------------------------+----------------------------+\n\n```\n\n    关于Windows下MySQL的一点坑:\n    之前一个旧式的服务器采用的是Windows server2012,mysql使用的是安装版的.安装路径在\n    C:\\Program Files\\MySQL\\MySQL Server 5.6下.有个my-default.ini配置文件,\n    但是无论对这个文件如何配置修改,重启服务器都无效.经过多方搜索,发现Windows下MySQL服务\n    默认使用的不是该文件,而是采用C:\\ProgramData\\MySQL\\MySQL Server 5.6下的my.ini\n    这个文件.所以需要对这个文件修改才能使其生效.","source":"_posts/MySQL中utf8和utf8mb4区别对emoji支持.md","raw":"---\ntitle: MySQL中utf8和utf8mb4区别对emoji支持\ndate: 2019-04-27 11:13:08\ndescription: utf8mb4是utf8的超集，除了将编码改为utf8mb4外不需要做其他转换。\ntags: MySQL\n---\n\n    摘要:\n      MySQL在5.5.3之后增加了这个utf8mb4的编码，mb4就是most bytes 4的意思，专门用来兼容\n      四字节的unicode。好在utf8mb4是utf8的超集，除了将编码改为utf8mb4外不需要做其他转换。\n      当然，为了节省空间，一般情况下使用utf8也就够了.\n      查看当前的MySQL版本:\n      mysql> select version();\n      或者\n      mysql --version\n\n### utf8不支持emoji表情的问题\n\n  当使用utf8字符集的时候,插入emoji表情符号会提示\" Incorrect string value: '\\xXX\\xXX\\xXX\\xXX' for column......\",原因在于MySQL中utf8字符集只支持三字节UTF-8编码的Unicode范围，而emoji字符属于四字节编码部分.此时,需要将库表的字符集更改为utf8mb4\n\n### 修改字符集为utf8mb4\n\n  修改/etc/mysql/my.cnf文件或者/etc/mysql/mysql.conf.d/mysqld.cnf文件,修改以下参数:\n\n```\n[client]\ndefault-character-set=utf8mb4\n  \n  \n[mysql]\ndefault-character-set=utf8mb4\n  \n  \n[mysqld]\ncharacter-set-server = utf8mb4\ncollation-server = utf8mb4_unicode_ci\ninit_connect = 'SET NAMES utf8mb4'\ncharacter-set-client-handshake = false\n```\n\n    注:\n    1.init_connect='SET NAMES utf8mb4' 表示初始化连接都设置为utf8mb4字符集;\n    2.skip-character-set-client-handshake = true 忽略客户端字符集设置，不论客户端是何种字符集，都按照init_connect中的设置进行使用\n\n### 对数据库相关的表进行字符集修改\n\n#### 建立新库和表的情况,直接使用utf8mb4字符\n\n```\nCREATE DATABASE IF NOT EXISTS test default charset utf8mb4 COLLATE utf8mb4_unicode_ci;\n\nCREATE TABLE `t_table`  (\n  `id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,\n  `create_time` datetime(0) NULL DEFAULT NULL,\n  'comment' varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,\n  PRIMARY KEY (`id`) USING BTREE\n) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci ROW_FORMAT = Dynamic;\n```\n\n#### 已经存在表的情况,对库,表和字段都修改为utf8mb4\n\n```\nmysql> ALTER DATABASE test CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n\nmysql>ALTER TABLE `t_table` CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n\nmysql>ALTER TABLE `t_table` MODIFY COLUMN `comment`  varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n```\n\n### 重启MySQL服务\n\n```\n/etc/init.d/mysqld restart 或者service mysql restart\n```\n\n### 登录数据库查看字符集是否更改成功\n\n```\nmysql> SHOW VARIABLES WHERE Variable_name LIKE 'character%' OR Variable_name LIKE 'collation%';\n\n+--------------------------+----------------------------+\n| Variable_name            | Value                      |\n+--------------------------+----------------------------+\n| character_set_client     | utf8mb4                    |\n| character_set_connection | utf8mb4                    |\n| character_set_database   | utf8mb4                    |\n| character_set_filesystem | binary                     |\n| character_set_results    | utf8mb4                    |\n| character_set_server     | utf8mb4                    |\n| character_set_system     | utf8                       |\n| character_sets_dir       | /usr/share/mysql/charsets/ |\n| collation_connection     | utf8mb4_unicode_ci         |\n| collation_database       | utf8mb4_unicode_ci         |\n| collation_server         | utf8mb4_unicode_ci         |\n+--------------------------+----------------------------+\n\n```\n\n    关于Windows下MySQL的一点坑:\n    之前一个旧式的服务器采用的是Windows server2012,mysql使用的是安装版的.安装路径在\n    C:\\Program Files\\MySQL\\MySQL Server 5.6下.有个my-default.ini配置文件,\n    但是无论对这个文件如何配置修改,重启服务器都无效.经过多方搜索,发现Windows下MySQL服务\n    默认使用的不是该文件,而是采用C:\\ProgramData\\MySQL\\MySQL Server 5.6下的my.ini\n    这个文件.所以需要对这个文件修改才能使其生效.","slug":"MySQL中utf8和utf8mb4区别对emoji支持","published":1,"updated":"2025-04-22T08:19:23.819Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745im000ed8gk3v1kdfwm","content":"<pre><code>摘要:\n  MySQL在5.5.3之后增加了这个utf8mb4的编码，mb4就是most bytes 4的意思，专门用来兼容\n  四字节的unicode。好在utf8mb4是utf8的超集，除了将编码改为utf8mb4外不需要做其他转换。\n  当然，为了节省空间，一般情况下使用utf8也就够了.\n  查看当前的MySQL版本:\n  mysql&gt; select version();\n  或者\n  mysql --version\n</code></pre>\n<h3 id=\"utf8不支持emoji表情的问题\"><a href=\"#utf8不支持emoji表情的问题\" class=\"headerlink\" title=\"utf8不支持emoji表情的问题\"></a>utf8 不支持 emoji 表情的问题</h3><p>  当使用 utf8 字符集的时候，插入 emoji 表情符号会提示” Incorrect string value: ‘\\xXX\\xXX\\xXX\\xXX’ for column……”, 原因在于 MySQL 中 utf8 字符集只支持三字节 UTF-8 编码的 Unicode 范围，而 emoji 字符属于四字节编码部分。此时，需要将库表的字符集更改为 utf8mb4</p>\n<h3 id=\"修改字符集为utf8mb4\"><a href=\"#修改字符集为utf8mb4\" class=\"headerlink\" title=\"修改字符集为utf8mb4\"></a>修改字符集为 utf8mb4</h3><p>  修改 /etc/mysql/my.cnf 文件或者 /etc/mysql/mysql.conf.d/mysqld.cnf 文件，修改以下参数:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[client]\ndefault-character-set=utf8mb4\n  \n  \n[mysql]\ndefault-character-set=utf8mb4\n  \n  \n[mysqld]\ncharacter-set-server = utf8mb4\ncollation-server = utf8mb4_unicode_ci\ninit_connect = 'SET NAMES utf8mb4'\ncharacter-set-client-handshake = false<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre><code>注:\n1.init_connect='SET NAMES utf8mb4' 表示初始化连接都设置为utf8mb4字符集;\n2.skip-character-set-client-handshake = true 忽略客户端字符集设置，不论客户端是何种字符集，都按照init_connect中的设置进行使用\n</code></pre>\n<h3 id=\"对数据库相关的表进行字符集修改\"><a href=\"#对数据库相关的表进行字符集修改\" class=\"headerlink\" title=\"对数据库相关的表进行字符集修改\"></a>对数据库相关的表进行字符集修改</h3><h4 id=\"建立新库和表的情况-直接使用utf8mb4字符\"><a href=\"#建立新库和表的情况-直接使用utf8mb4字符\" class=\"headerlink\" title=\"建立新库和表的情况,直接使用utf8mb4字符\"></a>建立新库和表的情况，直接使用 utf8mb4 字符</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">CREATE DATABASE IF NOT EXISTS test default charset utf8mb4 COLLATE utf8mb4_unicode_ci;\n\nCREATE TABLE `t_table`  (\n  `id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,\n  `create_time` datetime(0) NULL DEFAULT NULL,\n  'comment' varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,\n  PRIMARY KEY (`id`) USING BTREE\n) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci ROW_FORMAT = Dynamic;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"已经存在表的情况-对库-表和字段都修改为utf8mb4\"><a href=\"#已经存在表的情况-对库-表和字段都修改为utf8mb4\" class=\"headerlink\" title=\"已经存在表的情况,对库,表和字段都修改为utf8mb4\"></a>已经存在表的情况，对库，表和字段都修改为 utf8mb4</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">mysql&gt; ALTER DATABASE test CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n\nmysql&gt;ALTER TABLE `t_table` CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n\nmysql&gt;ALTER TABLE `t_table` MODIFY COLUMN `comment`  varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"重启MySQL服务\"><a href=\"#重启MySQL服务\" class=\"headerlink\" title=\"重启MySQL服务\"></a>重启 MySQL 服务</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">/etc/init.d/mysqld restart 或者service mysql restart<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"登录数据库查看字符集是否更改成功\"><a href=\"#登录数据库查看字符集是否更改成功\" class=\"headerlink\" title=\"登录数据库查看字符集是否更改成功\"></a>登录数据库查看字符集是否更改成功</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">mysql&gt; SHOW VARIABLES WHERE Variable_name LIKE 'character%' OR Variable_name LIKE 'collation%';\n\n+--------------------------+----------------------------+\n| Variable_name            | Value                      |\n+--------------------------+----------------------------+\n| character_set_client     | utf8mb4                    |\n| character_set_connection | utf8mb4                    |\n| character_set_database   | utf8mb4                    |\n| character_set_filesystem | binary                     |\n| character_set_results    | utf8mb4                    |\n| character_set_server     | utf8mb4                    |\n| character_set_system     | utf8                       |\n| character_sets_dir       | /usr/share/mysql/charsets/ |\n| collation_connection     | utf8mb4_unicode_ci         |\n| collation_database       | utf8mb4_unicode_ci         |\n| collation_server         | utf8mb4_unicode_ci         |\n+--------------------------+----------------------------+\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre><code>关于Windows下MySQL的一点坑:\n之前一个旧式的服务器采用的是Windows server2012,mysql使用的是安装版的.安装路径在\nC:\\Program Files\\MySQL\\MySQL Server 5.6下.有个my-default.ini配置文件,\n但是无论对这个文件如何配置修改,重启服务器都无效.经过多方搜索,发现Windows下MySQL服务\n默认使用的不是该文件,而是采用C:\\ProgramData\\MySQL\\MySQL Server 5.6下的my.ini\n这个文件.所以需要对这个文件修改才能使其生效.\n</code></pre>\n","excerpt":"","more":"<pre><code>摘要:\n  MySQL在5.5.3之后增加了这个utf8mb4的编码，mb4就是most bytes 4的意思，专门用来兼容\n  四字节的unicode。好在utf8mb4是utf8的超集，除了将编码改为utf8mb4外不需要做其他转换。\n  当然，为了节省空间，一般情况下使用utf8也就够了.\n  查看当前的MySQL版本:\n  mysql&gt; select version();\n  或者\n  mysql --version\n</code></pre>\n<h3 id=\"utf8不支持emoji表情的问题\"><a href=\"#utf8不支持emoji表情的问题\" class=\"headerlink\" title=\"utf8不支持emoji表情的问题\"></a>utf8 不支持 emoji 表情的问题</h3><p>  当使用 utf8 字符集的时候，插入 emoji 表情符号会提示” Incorrect string value: ‘\\xXX\\xXX\\xXX\\xXX’ for column……”, 原因在于 MySQL 中 utf8 字符集只支持三字节 UTF-8 编码的 Unicode 范围，而 emoji 字符属于四字节编码部分。此时，需要将库表的字符集更改为 utf8mb4</p>\n<h3 id=\"修改字符集为utf8mb4\"><a href=\"#修改字符集为utf8mb4\" class=\"headerlink\" title=\"修改字符集为utf8mb4\"></a>修改字符集为 utf8mb4</h3><p>  修改 /etc/mysql/my.cnf 文件或者 /etc/mysql/mysql.conf.d/mysqld.cnf 文件，修改以下参数:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[client]\ndefault-character-set=utf8mb4\n  \n  \n[mysql]\ndefault-character-set=utf8mb4\n  \n  \n[mysqld]\ncharacter-set-server = utf8mb4\ncollation-server = utf8mb4_unicode_ci\ninit_connect = 'SET NAMES utf8mb4'\ncharacter-set-client-handshake = false<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre><code>注:\n1.init_connect='SET NAMES utf8mb4' 表示初始化连接都设置为utf8mb4字符集;\n2.skip-character-set-client-handshake = true 忽略客户端字符集设置，不论客户端是何种字符集，都按照init_connect中的设置进行使用\n</code></pre>\n<h3 id=\"对数据库相关的表进行字符集修改\"><a href=\"#对数据库相关的表进行字符集修改\" class=\"headerlink\" title=\"对数据库相关的表进行字符集修改\"></a>对数据库相关的表进行字符集修改</h3><h4 id=\"建立新库和表的情况-直接使用utf8mb4字符\"><a href=\"#建立新库和表的情况-直接使用utf8mb4字符\" class=\"headerlink\" title=\"建立新库和表的情况,直接使用utf8mb4字符\"></a>建立新库和表的情况，直接使用 utf8mb4 字符</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">CREATE DATABASE IF NOT EXISTS test default charset utf8mb4 COLLATE utf8mb4_unicode_ci;\n\nCREATE TABLE `t_table`  (\n  `id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,\n  `create_time` datetime(0) NULL DEFAULT NULL,\n  'comment' varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,\n  PRIMARY KEY (`id`) USING BTREE\n) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci ROW_FORMAT = Dynamic;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"已经存在表的情况-对库-表和字段都修改为utf8mb4\"><a href=\"#已经存在表的情况-对库-表和字段都修改为utf8mb4\" class=\"headerlink\" title=\"已经存在表的情况,对库,表和字段都修改为utf8mb4\"></a>已经存在表的情况，对库，表和字段都修改为 utf8mb4</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">mysql&gt; ALTER DATABASE test CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n\nmysql&gt;ALTER TABLE `t_table` CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n\nmysql&gt;ALTER TABLE `t_table` MODIFY COLUMN `comment`  varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"重启MySQL服务\"><a href=\"#重启MySQL服务\" class=\"headerlink\" title=\"重启MySQL服务\"></a>重启 MySQL 服务</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">/etc/init.d/mysqld restart 或者service mysql restart<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"登录数据库查看字符集是否更改成功\"><a href=\"#登录数据库查看字符集是否更改成功\" class=\"headerlink\" title=\"登录数据库查看字符集是否更改成功\"></a>登录数据库查看字符集是否更改成功</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">mysql&gt; SHOW VARIABLES WHERE Variable_name LIKE 'character%' OR Variable_name LIKE 'collation%';\n\n+--------------------------+----------------------------+\n| Variable_name            | Value                      |\n+--------------------------+----------------------------+\n| character_set_client     | utf8mb4                    |\n| character_set_connection | utf8mb4                    |\n| character_set_database   | utf8mb4                    |\n| character_set_filesystem | binary                     |\n| character_set_results    | utf8mb4                    |\n| character_set_server     | utf8mb4                    |\n| character_set_system     | utf8                       |\n| character_sets_dir       | /usr/share/mysql/charsets/ |\n| collation_connection     | utf8mb4_unicode_ci         |\n| collation_database       | utf8mb4_unicode_ci         |\n| collation_server         | utf8mb4_unicode_ci         |\n+--------------------------+----------------------------+\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre><code>关于Windows下MySQL的一点坑:\n之前一个旧式的服务器采用的是Windows server2012,mysql使用的是安装版的.安装路径在\nC:\\Program Files\\MySQL\\MySQL Server 5.6下.有个my-default.ini配置文件,\n但是无论对这个文件如何配置修改,重启服务器都无效.经过多方搜索,发现Windows下MySQL服务\n默认使用的不是该文件,而是采用C:\\ProgramData\\MySQL\\MySQL Server 5.6下的my.ini\n这个文件.所以需要对这个文件修改才能使其生效.\n</code></pre>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:19:23 GMT+0800 (China Standard Time)","title":"MySQL 中 utf8 和 utf8mb4 区别对 emoji 支持","path":"2019/04/27/MySQL中utf8和utf8mb4区别对emoji支持/","eyeCatchImage":null,"excerpt":"utf8mb4是utf8的超集，除了将编码改为utf8mb4外不需要做其他转换。","date":{"_isAMomentObject":true,"_i":"2019-04-27T03:13:08.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2019-04-27T03:13:08.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["MySQL"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":482},{"title":"MySQL 字段值默认不区分大小写问题","date":"2018-05-13T02:42:33.000Z","description":"mysql的字段值是默认不区分大小写的,但是用户在登录账户的时候严格区分大小写的","_content":"\n    摘要：\n      mysql的字段值是默认不区分大小写的,但是用户在登录账户的时候严格区分大小写的,所以解决如下:\n\n1 .在不改变表任何结构的情况下,可以直接在查询条件后面的字段名或者字段值作为binary()函数的参数即可,如下:\n\n`select * from table_name t where binary(t.field) = 'Abc';`\n\n2 .在建表的时候在字段后面加上binary,或者用alter语句来改变字段类型,只需要加上binary\n\n    `mysql> create table t_user(\n\n    -> username varchar(20) binary\n\n    -> );`\n\n对已有的表进行alert\n\n`alter table table_name modify field varchar(20) binary`\n\n\n注:table_name换成具体对应的表名称.field换成具体对应的表的字段\n","source":"_posts/MySQL字段值默认不区分大小写问题.md","raw":"---\ntitle: MySQL字段值默认不区分大小写问题\ndate: 2018-05-13 10:42:33\ndescription: mysql的字段值是默认不区分大小写的,但是用户在登录账户的时候严格区分大小写的\ntags: MySQL\n---\n\n    摘要：\n      mysql的字段值是默认不区分大小写的,但是用户在登录账户的时候严格区分大小写的,所以解决如下:\n\n1 .在不改变表任何结构的情况下,可以直接在查询条件后面的字段名或者字段值作为binary()函数的参数即可,如下:\n\n`select * from table_name t where binary(t.field) = 'Abc';`\n\n2 .在建表的时候在字段后面加上binary,或者用alter语句来改变字段类型,只需要加上binary\n\n    `mysql> create table t_user(\n\n    -> username varchar(20) binary\n\n    -> );`\n\n对已有的表进行alert\n\n`alter table table_name modify field varchar(20) binary`\n\n\n注:table_name换成具体对应的表名称.field换成具体对应的表的字段\n","slug":"MySQL字段值默认不区分大小写问题","published":1,"updated":"2025-04-22T08:19:36.018Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745im000fd8gkcjflbmu1","content":"<pre><code>摘要：\n  mysql的字段值是默认不区分大小写的,但是用户在登录账户的时候严格区分大小写的,所以解决如下:\n</code></pre>\n<p>1 . 在不改变表任何结构的情况下，可以直接在查询条件后面的字段名或者字段值作为 binary () 函数的参数即可，如下:</p>\n<p><code>select * from table_name t where binary(t.field) = 'Abc';</code></p>\n<p>2 . 在建表的时候在字段后面加上 binary, 或者用 alter 语句来改变字段类型，只需要加上 binary</p>\n<pre><code>`mysql&gt; create table t_user(\n\n-&gt; username varchar(20) binary\n\n-&gt; );`\n</code></pre>\n<p>对已有的表进行 alert</p>\n<p><code>alter table table_name modify field varchar(20) binary</code></p>\n<p>注:table_name 换成具体对应的表名称.field 换成具体对应的表的字段</p>\n","excerpt":"","more":"<pre><code>摘要：\n  mysql的字段值是默认不区分大小写的,但是用户在登录账户的时候严格区分大小写的,所以解决如下:\n</code></pre>\n<p>1 . 在不改变表任何结构的情况下，可以直接在查询条件后面的字段名或者字段值作为 binary () 函数的参数即可，如下:</p>\n<p><code>select * from table_name t where binary(t.field) = 'Abc';</code></p>\n<p>2 . 在建表的时候在字段后面加上 binary, 或者用 alter 语句来改变字段类型，只需要加上 binary</p>\n<pre><code>`mysql&gt; create table t_user(\n\n-&gt; username varchar(20) binary\n\n-&gt; );`\n</code></pre>\n<p>对已有的表进行 alert</p>\n<p><code>alter table table_name modify field varchar(20) binary</code></p>\n<p>注:table_name 换成具体对应的表名称.field 换成具体对应的表的字段</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:19:36 GMT+0800 (China Standard Time)","title":"MySQL 字段值默认不区分大小写问题","path":"2018/05/13/MySQL字段值默认不区分大小写问题/","eyeCatchImage":null,"excerpt":"mysql的字段值是默认不区分大小写的,但是用户在登录账户的时候严格区分大小写的","date":{"_isAMomentObject":true,"_i":"2018-05-13T02:42:33.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-05-13T02:42:33.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["MySQL"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":179},{"title":"MySQL 新版本设置 root 密码和重置 root 密码","date":"2018-08-03T02:45:54.000Z","description":"MySQL新版本设置root密码和重置root密码","_content":"\n    > 摘要:最近在虚拟机上安装Ubuntu18.04版本,然后安装MySQL-server.安装MySQL-server过程中不再像之前会提示\n    输入root账户的密码.所以需要进行对root账户设置密码,\n    \n    >操作环境:\n        OS:Ubuntu 18.04\n        MySQL版本:5.7及更高\n\n\n### 1.前置条件\n\n    需要系统的root账户或者使用sudo 命令\n\n### 2.使用mysql_secure_installation进行对密码设置\n\n    如果是第一次安装完MySQL后,可以使用:\n\n    sudo mysql_secure_installation  对root账户进行设置密码操作\n\n### 3.使用skip-grant-tables对root账户进行重置密码的操作\n\n    3.1 停止当前正在运行的mysql服务\n\n        sudo service mysql stop\n    \n    3.2 创建/var/run/mysqld目录,因为MySQL进程在启动和运行的时候都需要访问该soket文件\n\n        sudo mkdir -p /var/run/mysqld\n        sudo chown mysql:mysql /var/run/mysqld\n\n    3.3 使用skip-grant-tables启动服务程序\n\n        sudo /usr/sbin/mysqld --skip-grant-tables --skip-networking &\n\n        jobs 然后确认下服务是否启动成功\n\n    3.4 使用root无密码登录,进行修改设置密码操作\n\n        mysql -u root root无密码登录\n\n        FLUSH PRIVILEGES; 刷新一遍授权信息\n\n        USE mysql; 切换到mysql库(安装好后自带的)\n\n        UPDATE user SET authentication_string=PASSWORD(\"123456\") WHERE User='root'; 设置密码字段的新密码,\n        authentication_string是新版本存储密码的字段名,旧版本的是password.\n\n        UPDATE user SET plugin=\"mysql_native_password\" WHERE User='root';\n\n        FLUSH PRIVILEGES;\n\n        quit;\n\n    3.5 重启MySQL服务\n\n        sudo pkill mysqld  停掉之前启动的服务\n\n        jobs 查看是否正确停止服务\n\n        sudo service mysql start 启动MySQL服务\n\n    3.6 使用root账户和刚设置的密码进行登录操作\n\n        mysql -u root --password=123456  使用root和密码登录\n\n        ","source":"_posts/MySQL新版本设置root密码和重置root密码.md","raw":"---\ntitle: MySQL新版本设置root密码和重置root密码\ndate: 2018-08-03 10:45:54\ndescription: MySQL新版本设置root密码和重置root密码\ntags: MySQL\n---\n\n    > 摘要:最近在虚拟机上安装Ubuntu18.04版本,然后安装MySQL-server.安装MySQL-server过程中不再像之前会提示\n    输入root账户的密码.所以需要进行对root账户设置密码,\n    \n    >操作环境:\n        OS:Ubuntu 18.04\n        MySQL版本:5.7及更高\n\n\n### 1.前置条件\n\n    需要系统的root账户或者使用sudo 命令\n\n### 2.使用mysql_secure_installation进行对密码设置\n\n    如果是第一次安装完MySQL后,可以使用:\n\n    sudo mysql_secure_installation  对root账户进行设置密码操作\n\n### 3.使用skip-grant-tables对root账户进行重置密码的操作\n\n    3.1 停止当前正在运行的mysql服务\n\n        sudo service mysql stop\n    \n    3.2 创建/var/run/mysqld目录,因为MySQL进程在启动和运行的时候都需要访问该soket文件\n\n        sudo mkdir -p /var/run/mysqld\n        sudo chown mysql:mysql /var/run/mysqld\n\n    3.3 使用skip-grant-tables启动服务程序\n\n        sudo /usr/sbin/mysqld --skip-grant-tables --skip-networking &\n\n        jobs 然后确认下服务是否启动成功\n\n    3.4 使用root无密码登录,进行修改设置密码操作\n\n        mysql -u root root无密码登录\n\n        FLUSH PRIVILEGES; 刷新一遍授权信息\n\n        USE mysql; 切换到mysql库(安装好后自带的)\n\n        UPDATE user SET authentication_string=PASSWORD(\"123456\") WHERE User='root'; 设置密码字段的新密码,\n        authentication_string是新版本存储密码的字段名,旧版本的是password.\n\n        UPDATE user SET plugin=\"mysql_native_password\" WHERE User='root';\n\n        FLUSH PRIVILEGES;\n\n        quit;\n\n    3.5 重启MySQL服务\n\n        sudo pkill mysqld  停掉之前启动的服务\n\n        jobs 查看是否正确停止服务\n\n        sudo service mysql start 启动MySQL服务\n\n    3.6 使用root账户和刚设置的密码进行登录操作\n\n        mysql -u root --password=123456  使用root和密码登录\n\n        ","slug":"MySQL新版本设置root密码和重置root密码","published":1,"updated":"2025-04-22T08:20:04.732Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745in000hd8gk6mp3cmy5","content":"<pre><code>&gt; 摘要:最近在虚拟机上安装Ubuntu18.04版本,然后安装MySQL-server.安装MySQL-server过程中不再像之前会提示\n输入root账户的密码.所以需要进行对root账户设置密码,\n\n&gt;操作环境:\n    OS:Ubuntu 18.04\n    MySQL版本:5.7及更高\n</code></pre>\n<h3 id=\"1-前置条件\"><a href=\"#1-前置条件\" class=\"headerlink\" title=\"1.前置条件\"></a>1. 前置条件</h3><pre><code>需要系统的root账户或者使用sudo 命令\n</code></pre>\n<h3 id=\"2-使用mysql-secure-installation进行对密码设置\"><a href=\"#2-使用mysql-secure-installation进行对密码设置\" class=\"headerlink\" title=\"2.使用mysql_secure_installation进行对密码设置\"></a>2. 使用 mysql_secure_installation 进行对密码设置</h3><pre><code>如果是第一次安装完MySQL后,可以使用:\n\nsudo mysql_secure_installation  对root账户进行设置密码操作\n</code></pre>\n<h3 id=\"3-使用skip-grant-tables对root账户进行重置密码的操作\"><a href=\"#3-使用skip-grant-tables对root账户进行重置密码的操作\" class=\"headerlink\" title=\"3.使用skip-grant-tables对root账户进行重置密码的操作\"></a>3. 使用 skip-grant-tables 对 root 账户进行重置密码的操作</h3><pre><code>3.1 停止当前正在运行的mysql服务\n\n    sudo service mysql stop\n\n3.2 创建/var/run/mysqld目录,因为MySQL进程在启动和运行的时候都需要访问该soket文件\n\n    sudo mkdir -p /var/run/mysqld\n    sudo chown mysql:mysql /var/run/mysqld\n\n3.3 使用skip-grant-tables启动服务程序\n\n    sudo /usr/sbin/mysqld --skip-grant-tables --skip-networking &amp;\n\n    jobs 然后确认下服务是否启动成功\n\n3.4 使用root无密码登录,进行修改设置密码操作\n\n    mysql -u root root无密码登录\n\n    FLUSH PRIVILEGES; 刷新一遍授权信息\n\n    USE mysql; 切换到mysql库(安装好后自带的)\n\n    UPDATE user SET authentication_string=PASSWORD(\"123456\") WHERE User='root'; 设置密码字段的新密码,\n    authentication_string是新版本存储密码的字段名,旧版本的是password.\n\n    UPDATE user SET plugin=\"mysql_native_password\" WHERE User='root';\n\n    FLUSH PRIVILEGES;\n\n    quit;\n\n3.5 重启MySQL服务\n\n    sudo pkill mysqld  停掉之前启动的服务\n\n    jobs 查看是否正确停止服务\n\n    sudo service mysql start 启动MySQL服务\n\n3.6 使用root账户和刚设置的密码进行登录操作\n\n    mysql -u root --password=123456  使用root和密码登录\n\n    \n</code></pre>\n","excerpt":"","more":"<pre><code>&gt; 摘要:最近在虚拟机上安装Ubuntu18.04版本,然后安装MySQL-server.安装MySQL-server过程中不再像之前会提示\n输入root账户的密码.所以需要进行对root账户设置密码,\n\n&gt;操作环境:\n    OS:Ubuntu 18.04\n    MySQL版本:5.7及更高\n</code></pre>\n<h3 id=\"1-前置条件\"><a href=\"#1-前置条件\" class=\"headerlink\" title=\"1.前置条件\"></a>1. 前置条件</h3><pre><code>需要系统的root账户或者使用sudo 命令\n</code></pre>\n<h3 id=\"2-使用mysql-secure-installation进行对密码设置\"><a href=\"#2-使用mysql-secure-installation进行对密码设置\" class=\"headerlink\" title=\"2.使用mysql_secure_installation进行对密码设置\"></a>2. 使用 mysql_secure_installation 进行对密码设置</h3><pre><code>如果是第一次安装完MySQL后,可以使用:\n\nsudo mysql_secure_installation  对root账户进行设置密码操作\n</code></pre>\n<h3 id=\"3-使用skip-grant-tables对root账户进行重置密码的操作\"><a href=\"#3-使用skip-grant-tables对root账户进行重置密码的操作\" class=\"headerlink\" title=\"3.使用skip-grant-tables对root账户进行重置密码的操作\"></a>3. 使用 skip-grant-tables 对 root 账户进行重置密码的操作</h3><pre><code>3.1 停止当前正在运行的mysql服务\n\n    sudo service mysql stop\n\n3.2 创建/var/run/mysqld目录,因为MySQL进程在启动和运行的时候都需要访问该soket文件\n\n    sudo mkdir -p /var/run/mysqld\n    sudo chown mysql:mysql /var/run/mysqld\n\n3.3 使用skip-grant-tables启动服务程序\n\n    sudo /usr/sbin/mysqld --skip-grant-tables --skip-networking &amp;\n\n    jobs 然后确认下服务是否启动成功\n\n3.4 使用root无密码登录,进行修改设置密码操作\n\n    mysql -u root root无密码登录\n\n    FLUSH PRIVILEGES; 刷新一遍授权信息\n\n    USE mysql; 切换到mysql库(安装好后自带的)\n\n    UPDATE user SET authentication_string=PASSWORD(\"123456\") WHERE User='root'; 设置密码字段的新密码,\n    authentication_string是新版本存储密码的字段名,旧版本的是password.\n\n    UPDATE user SET plugin=\"mysql_native_password\" WHERE User='root';\n\n    FLUSH PRIVILEGES;\n\n    quit;\n\n3.5 重启MySQL服务\n\n    sudo pkill mysqld  停掉之前启动的服务\n\n    jobs 查看是否正确停止服务\n\n    sudo service mysql start 启动MySQL服务\n\n3.6 使用root账户和刚设置的密码进行登录操作\n\n    mysql -u root --password=123456  使用root和密码登录\n\n    \n</code></pre>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:20:04 GMT+0800 (China Standard Time)","title":"MySQL 新版本设置 root 密码和重置 root 密码","path":"2018/08/03/MySQL新版本设置root密码和重置root密码/","eyeCatchImage":null,"excerpt":"MySQL新版本设置root密码和重置root密码","date":{"_isAMomentObject":true,"_i":"2018-08-03T02:45:54.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-08-03T02:45:54.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["MySQL"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":415},{"title":"MySQL 设置用户远程登录","date":"2018-06-12T02:59:34.000Z","description":"MySQL设置用户远程登录","_content":"\n    摘要:在Linux(debian)下,通过apt install mysql-server后,输入root账户密码后,\n    默认是不允许远程登录的.可以用过以下几种方式来设置允许能够远程登录\n\n1.改mysql库下的user表的数据\n\n    mysql -u root –p\n    mysql>use mysql;\n    mysql>update user set host = '%' where user = 'root';\n    mysql>select host, user from user;\n\n2.通过授权的方式,这种方式可以对不同的用户设置不同的访问权限\n\n    #例如: 在MySQL服务器主机上执行,允许root使用123456从任何主机连接到mysql服务器\n\n    mysql>GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '123456' WITH GRANT OPTION;\n\n    mysql>FLUSH PRIVILEGES; # 刷新权限,使配置生效\n\n    #例如:允许用户test从ip为120.77.163.89的主机连接到mysql服务器，并使用123456作为密码\n\n    mysql>GRANT ALL PRIVILEGES ON *.* TO 'test'@’120.77.163.89’ IDENTIFIED BY '654321' WITH GRANT OPTION;\n\n    mysql>FLUSH PRIVILEGES; # 刷新权限,使配置生效\n","source":"_posts/MySQL设置用户远程登录.md","raw":"---\ntitle: MySQL设置用户远程登录\ndate: 2018-06-12 10:59:34\ndescription: MySQL设置用户远程登录\ntags: MySQL\n---\n\n    摘要:在Linux(debian)下,通过apt install mysql-server后,输入root账户密码后,\n    默认是不允许远程登录的.可以用过以下几种方式来设置允许能够远程登录\n\n1.改mysql库下的user表的数据\n\n    mysql -u root –p\n    mysql>use mysql;\n    mysql>update user set host = '%' where user = 'root';\n    mysql>select host, user from user;\n\n2.通过授权的方式,这种方式可以对不同的用户设置不同的访问权限\n\n    #例如: 在MySQL服务器主机上执行,允许root使用123456从任何主机连接到mysql服务器\n\n    mysql>GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '123456' WITH GRANT OPTION;\n\n    mysql>FLUSH PRIVILEGES; # 刷新权限,使配置生效\n\n    #例如:允许用户test从ip为120.77.163.89的主机连接到mysql服务器，并使用123456作为密码\n\n    mysql>GRANT ALL PRIVILEGES ON *.* TO 'test'@’120.77.163.89’ IDENTIFIED BY '654321' WITH GRANT OPTION;\n\n    mysql>FLUSH PRIVILEGES; # 刷新权限,使配置生效\n","slug":"MySQL设置用户远程登录","published":1,"updated":"2025-04-22T08:20:07.139Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745in000id8gkbwn58oj3","content":"<pre><code>摘要:在Linux(debian)下,通过apt install mysql-server后,输入root账户密码后,\n默认是不允许远程登录的.可以用过以下几种方式来设置允许能够远程登录\n</code></pre>\n<p>1. 改 mysql 库下的 user 表的数据</p>\n<pre><code>mysql -u root –p\nmysql&gt;use mysql;\nmysql&gt;update user set host = '%' where user = 'root';\nmysql&gt;select host, user from user;\n</code></pre>\n<p>2. 通过授权的方式，这种方式可以对不同的用户设置不同的访问权限</p>\n<pre><code>#例如: 在MySQL服务器主机上执行,允许root使用123456从任何主机连接到mysql服务器\n\nmysql&gt;GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '123456' WITH GRANT OPTION;\n\nmysql&gt;FLUSH PRIVILEGES; # 刷新权限,使配置生效\n\n#例如:允许用户test从ip为120.77.163.89的主机连接到mysql服务器，并使用123456作为密码\n\nmysql&gt;GRANT ALL PRIVILEGES ON *.* TO 'test'@’120.77.163.89’ IDENTIFIED BY '654321' WITH GRANT OPTION;\n\nmysql&gt;FLUSH PRIVILEGES; # 刷新权限,使配置生效\n</code></pre>\n","excerpt":"","more":"<pre><code>摘要:在Linux(debian)下,通过apt install mysql-server后,输入root账户密码后,\n默认是不允许远程登录的.可以用过以下几种方式来设置允许能够远程登录\n</code></pre>\n<p>1. 改 mysql 库下的 user 表的数据</p>\n<pre><code>mysql -u root –p\nmysql&gt;use mysql;\nmysql&gt;update user set host = '%' where user = 'root';\nmysql&gt;select host, user from user;\n</code></pre>\n<p>2. 通过授权的方式，这种方式可以对不同的用户设置不同的访问权限</p>\n<pre><code>#例如: 在MySQL服务器主机上执行,允许root使用123456从任何主机连接到mysql服务器\n\nmysql&gt;GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '123456' WITH GRANT OPTION;\n\nmysql&gt;FLUSH PRIVILEGES; # 刷新权限,使配置生效\n\n#例如:允许用户test从ip为120.77.163.89的主机连接到mysql服务器，并使用123456作为密码\n\nmysql&gt;GRANT ALL PRIVILEGES ON *.* TO 'test'@’120.77.163.89’ IDENTIFIED BY '654321' WITH GRANT OPTION;\n\nmysql&gt;FLUSH PRIVILEGES; # 刷新权限,使配置生效\n</code></pre>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:20:07 GMT+0800 (China Standard Time)","title":"MySQL 设置用户远程登录","path":"2018/06/12/MySQL设置用户远程登录/","eyeCatchImage":null,"excerpt":"MySQL设置用户远程登录","date":{"_isAMomentObject":true,"_i":"2018-06-12T02:59:34.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-06-12T02:59:34.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["MySQL"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":224},{"title":"Shell 基础","date":"2018-05-20T10:52:36.000Z","description":"Shell基础","_content":"\n    摘要:\n      Shell是一个命令行解释器,它为用户提供了一个向Linux内核\n      发送请求以便运行程序的界面系统级程序.用户可以用Shell来启动,挂起,\n      停止甚至是编写一些程序.\n      Shell还是一个功能相当强大的编程语言.易编写,意调试,灵活性较强.\n      Shell是解释执行的语言,在Shell中可以直接调用Linux系统命令.\n\n#### 1.脚本的执行方式\n\n    1. echo 输出命令\n        echo [选项] [输出内容]\n        选项:\n          -e : 支持反斜杠控制的字符转换\n\n    2. 编写第一个脚本\n      vim hello.sh\n      #!/bin/bash\n      # this is hello program!\n      echo \"hello\"\n\n    3. 脚本执行\n      1.赋予执行权限  \n        chmod 755 ./hello.sh\n        ./hello.sh\n      2.通过bash调用执行脚本\n        bash ./hello.sh\n      3.使用sh命令执行\n        sh ./hello.sh\n\n#### 2.Bash的基本功能\n\n    1. 命令的别名,很多泛指为Linux下的命令,其实本质是属于Bash\n      `alias` 查看系统中所有的命令的别名\n    2. 设置命令别名\n      alias 别名= '原命令'\n      alias ll='ls -l'  #给ls -l 设置别名ll\n\n      以上设置别名的方式只是当次有效,系统重启后无效.要设置别名永久有效,\n      可以写入环境变量中\n      vim ~/.bashrc\n      alias ll='ls -l'\n      保存,执行source ~/.bashrc即可\n\n    3. 删除别名\n      unalias 别名\n      unalias ll\n      unalias是删除临时别名的,永久生效的别名需要删除环境变量中的配置\n\n    4. 命令的生效顺序\n      第一顺位执行用绝对路径或者相对路径的命令\n      第二顺位执行别名\n      第三顺位执行Bash的内部命令\n      第四顺位执行按照$PATH环境变量定义的目录查找顺序找到的第一个命令\n\n      注:因为别名的执行顺序是高于$PATH下的命令的,\n      所以一般情况下请勿将别名设为与其他原始命令相同的命令.\n\n#### 3.Shell编程之Bash变量\n\n  Shell中,所有变量默认都是字符串类型\n\n  1. 用户自定义变量  变量名=变量值(等号2边不能有空格)\n\n    用户自己定义的变量,变量名和值可随意更改\n\n    name=\"zhangsan\"\n\n    echo $name #显示name的值\n\n    1.1 变量叠加\n\n      name=\"$name\"isaname\n\n    1.2  删除变量(释放变量的内存地址) unset 变量名\n\n  2. 环境变量\n\n    环境变量是全局变量,用户可更改值,不能更改名称\n\n  3. 位置参数变量\n\n    $n :n为数字,$0代表命令本身.$1-$9代表第1-第9个参数,10以上的参数需要用大括号包含,如${10}\n\n    例:vim sum.sh\n\n      `#!/bin/bash\n\n        num1=$1\n\n        num2=$2\n\n        sum=$(($num1+$num2))\n\n        #变量sum的和是num1+num2\n\n        echo $sum`\n\n        执行;./sum.sh 10 20  #./sum.sh是$0,10是$1,20是$2\n\n        结果:30\n\n    $* : 这个变量代表命令行中中所有的参数,$* 把所有的参数看成一个整体\n\n    $@ : 这个变量也代表命令行中所有的参数,不过$@ 是把每个参数区分对待\n\n    @# : 这个变量代表命令行中所有参数的个数\n\n    例:vim /demo.sh\n\n    `#!/bin/bash\n\n    echo \"参数是: $* \"\n\n    echo \"参数也是: $@ \"\n\n    echo \"参数个数是: $#\"`\n\n    执行;./demo.sh 11 22 33\n\n    结果:参数是: 11 22 33 参数也是: 11 22 33 参数个数是: 3\n\n    $* 和 $@ 区别\n\n    vim ./demo.sh\n\n    #!/bin/bash\n\n    `for i in \"$*\"\n\n    #$* 把所有的参数看成一个整体,所以执行循环1次\n\n      do\n\n        echo \"参数是: $i\"\n\n      done\n\n    for y in \"$@\"\n\n    #$@ 是把每个参数区分对待,所有有几个参数就循环几次\n\n      do\n\n        echo \"参数是: $y\"\n\n      done\n    `\n\n  4. 预定义变量\n\n    $? : 最后依次执行的命令的返回结果,如果返回是0,代表上一个命令执行成功,如果返回是非0,代表上一个命令执行失败\n\n    $$ : 返回当前进程的PID号\n\n    $! : 后台运行的最后一个进程的进程号(PID)\n\n  5. 接收键盘输入:read 命令\n\n    read [选项] [变量名]\n\n    选项\n\n      -p \"提示信息\":在等待read输入时,输出提示信息\n\n      -t 秒数: read命令会一直等待用户输入,输入次选项可以指定用户等待时间\n\n      -n 字符数: read命令只接受指定的字符数,就会执行\n\n      -s : 隐藏输入的数据,适用于输入密码等情况\n\n#### 4.Shell编程之运算符\n\n    1. declare命令\n\n      declare声明变量类型\n\n      declare [+/-] [选项] 变量名\n\n        选项:用-给变量设定类型属性,用+取消变量的类型属性\n\n      常见选项类型\n\n        -a 将变量声明为数组类型\n\n        -i 将变量声明为整形\n\n        -x 将变量声明为环境变量\n\n        -r 将变量声明为只读变量(设置为只读属性后,不能对变量进行删除,修改,取消属性的操作)\n\n        -p 查看显示指定变量的被声明的类型\n\n    2. 数值运算的方法\n\n      方法1:\n\n      [root@localhost~]# aa=11\n\n      [root@localhost~]# bb=22\n\n      [root@localhost~]# declare -i cc=$aa+$bb\n\n      方法2:\n\n        expr或者let数值运算工具\n\n        [root@localhost~]# aa=11\n\n        [root@localhost~]# bb=22\n\n        [root@localhost~]# dd=$(expr $aa + $bb)\n\n        #dd的值是aa和bb的和,注意:\"+\"号两侧必须有空格\n\n      方法3:\n\n        \"$(())\"或\"$[运算式]\"\n\n        [root@localhost~]# aa=11\n\n        [root@localhost~]# bb=22\n\n        [root@localhost~]# cc=$(($aa + $bb))\n\n        [root@localhost~]# gg=$[$aa + $bb]\n\n    3. 变量测试(只是针对Shell,其他常用不适用.一般不常用,对脚本进行优化的时候才使用)\n\n#### 5.Shell编程之环境变量配置文件\n\n    `/etc/profile\n\n    /etc/profile.d/*.sh\n\n    /etc/bashrc\n\n    ~/.bashrc\n\n    ~/.bash_profile`\n\n    /etc目录下的是系统环境变量文件,~目录下的是当前用户的环境变量配置文件\n\n#### 6.Shell编程之正则表达式\n\n    正则表达式主要是用于描述字符排列和匹配模式d额一种语法规则，\n    主要用于字符串的模式分割,匹配,查找及替换操作\n\n  1.正则表达式与通配符\n\n    通配符：\n      *：匹配任意内容\n      ?：匹配任意一个内容\n      []：匹配括号中的一个字符.\n\n\n  正则表达式用来在文件中匹配符合条件的字符串,正则是包含匹配.\n  grep,awk,sed等命令可以支持正则表达式.\n\n  通配符用来匹配符合条件的文件名,通配符是完全匹配.\n  ls,find,cp这些命令不支持正则表达式,所以只能使用shell的通配符匹配.\n\n  #### 基础正则表达式:\n\n  | 元字符 | 作用 | \n  | - | :-: | -: | \n  |*|前一个字符匹配0次或者任意多次|\n  |.|匹配除了换行符以外的任意一个字符|\n  |^|匹配行首.例如:^hello匹配以hello开头的行|\n  |$|匹配行尾.例如:hello$匹配以hello结尾的行|\n  |[]|匹配中括号中指定的任意一个字符,只匹配一个字符|\n  |[^]|匹配除中括号中的字符以外的任意一个字符,例:[^0-9]表示匹配任意一位非数字字符|\n  |\\\\|转义符,用于将特殊符号的含义取消|\n  |\\\\{n\\\\}|表示其前面的字符恰好出现n次.例:[0-9]\\\\{4\\\\}匹配4位数字|\n  |\\\\{n,\\\\}|表示其前面出现的字符不小于n次,例:[0-9]\\\\{2,\\\\}表示2位及以上的数字|\n  |\\\\{n,m\\\\}|表示其前面出现的字符至少出现n次,最多出现m次,例:[a-z]\\\\{2,4\\\\}匹配2到4位的小写字母|","source":"_posts/Shell基础.md","raw":"---\ntitle: Shell基础\ndate: 2018-05-20 18:52:36\ndescription: Shell基础\ntags:\n  - linux\n  - shell\n---\n\n    摘要:\n      Shell是一个命令行解释器,它为用户提供了一个向Linux内核\n      发送请求以便运行程序的界面系统级程序.用户可以用Shell来启动,挂起,\n      停止甚至是编写一些程序.\n      Shell还是一个功能相当强大的编程语言.易编写,意调试,灵活性较强.\n      Shell是解释执行的语言,在Shell中可以直接调用Linux系统命令.\n\n#### 1.脚本的执行方式\n\n    1. echo 输出命令\n        echo [选项] [输出内容]\n        选项:\n          -e : 支持反斜杠控制的字符转换\n\n    2. 编写第一个脚本\n      vim hello.sh\n      #!/bin/bash\n      # this is hello program!\n      echo \"hello\"\n\n    3. 脚本执行\n      1.赋予执行权限  \n        chmod 755 ./hello.sh\n        ./hello.sh\n      2.通过bash调用执行脚本\n        bash ./hello.sh\n      3.使用sh命令执行\n        sh ./hello.sh\n\n#### 2.Bash的基本功能\n\n    1. 命令的别名,很多泛指为Linux下的命令,其实本质是属于Bash\n      `alias` 查看系统中所有的命令的别名\n    2. 设置命令别名\n      alias 别名= '原命令'\n      alias ll='ls -l'  #给ls -l 设置别名ll\n\n      以上设置别名的方式只是当次有效,系统重启后无效.要设置别名永久有效,\n      可以写入环境变量中\n      vim ~/.bashrc\n      alias ll='ls -l'\n      保存,执行source ~/.bashrc即可\n\n    3. 删除别名\n      unalias 别名\n      unalias ll\n      unalias是删除临时别名的,永久生效的别名需要删除环境变量中的配置\n\n    4. 命令的生效顺序\n      第一顺位执行用绝对路径或者相对路径的命令\n      第二顺位执行别名\n      第三顺位执行Bash的内部命令\n      第四顺位执行按照$PATH环境变量定义的目录查找顺序找到的第一个命令\n\n      注:因为别名的执行顺序是高于$PATH下的命令的,\n      所以一般情况下请勿将别名设为与其他原始命令相同的命令.\n\n#### 3.Shell编程之Bash变量\n\n  Shell中,所有变量默认都是字符串类型\n\n  1. 用户自定义变量  变量名=变量值(等号2边不能有空格)\n\n    用户自己定义的变量,变量名和值可随意更改\n\n    name=\"zhangsan\"\n\n    echo $name #显示name的值\n\n    1.1 变量叠加\n\n      name=\"$name\"isaname\n\n    1.2  删除变量(释放变量的内存地址) unset 变量名\n\n  2. 环境变量\n\n    环境变量是全局变量,用户可更改值,不能更改名称\n\n  3. 位置参数变量\n\n    $n :n为数字,$0代表命令本身.$1-$9代表第1-第9个参数,10以上的参数需要用大括号包含,如${10}\n\n    例:vim sum.sh\n\n      `#!/bin/bash\n\n        num1=$1\n\n        num2=$2\n\n        sum=$(($num1+$num2))\n\n        #变量sum的和是num1+num2\n\n        echo $sum`\n\n        执行;./sum.sh 10 20  #./sum.sh是$0,10是$1,20是$2\n\n        结果:30\n\n    $* : 这个变量代表命令行中中所有的参数,$* 把所有的参数看成一个整体\n\n    $@ : 这个变量也代表命令行中所有的参数,不过$@ 是把每个参数区分对待\n\n    @# : 这个变量代表命令行中所有参数的个数\n\n    例:vim /demo.sh\n\n    `#!/bin/bash\n\n    echo \"参数是: $* \"\n\n    echo \"参数也是: $@ \"\n\n    echo \"参数个数是: $#\"`\n\n    执行;./demo.sh 11 22 33\n\n    结果:参数是: 11 22 33 参数也是: 11 22 33 参数个数是: 3\n\n    $* 和 $@ 区别\n\n    vim ./demo.sh\n\n    #!/bin/bash\n\n    `for i in \"$*\"\n\n    #$* 把所有的参数看成一个整体,所以执行循环1次\n\n      do\n\n        echo \"参数是: $i\"\n\n      done\n\n    for y in \"$@\"\n\n    #$@ 是把每个参数区分对待,所有有几个参数就循环几次\n\n      do\n\n        echo \"参数是: $y\"\n\n      done\n    `\n\n  4. 预定义变量\n\n    $? : 最后依次执行的命令的返回结果,如果返回是0,代表上一个命令执行成功,如果返回是非0,代表上一个命令执行失败\n\n    $$ : 返回当前进程的PID号\n\n    $! : 后台运行的最后一个进程的进程号(PID)\n\n  5. 接收键盘输入:read 命令\n\n    read [选项] [变量名]\n\n    选项\n\n      -p \"提示信息\":在等待read输入时,输出提示信息\n\n      -t 秒数: read命令会一直等待用户输入,输入次选项可以指定用户等待时间\n\n      -n 字符数: read命令只接受指定的字符数,就会执行\n\n      -s : 隐藏输入的数据,适用于输入密码等情况\n\n#### 4.Shell编程之运算符\n\n    1. declare命令\n\n      declare声明变量类型\n\n      declare [+/-] [选项] 变量名\n\n        选项:用-给变量设定类型属性,用+取消变量的类型属性\n\n      常见选项类型\n\n        -a 将变量声明为数组类型\n\n        -i 将变量声明为整形\n\n        -x 将变量声明为环境变量\n\n        -r 将变量声明为只读变量(设置为只读属性后,不能对变量进行删除,修改,取消属性的操作)\n\n        -p 查看显示指定变量的被声明的类型\n\n    2. 数值运算的方法\n\n      方法1:\n\n      [root@localhost~]# aa=11\n\n      [root@localhost~]# bb=22\n\n      [root@localhost~]# declare -i cc=$aa+$bb\n\n      方法2:\n\n        expr或者let数值运算工具\n\n        [root@localhost~]# aa=11\n\n        [root@localhost~]# bb=22\n\n        [root@localhost~]# dd=$(expr $aa + $bb)\n\n        #dd的值是aa和bb的和,注意:\"+\"号两侧必须有空格\n\n      方法3:\n\n        \"$(())\"或\"$[运算式]\"\n\n        [root@localhost~]# aa=11\n\n        [root@localhost~]# bb=22\n\n        [root@localhost~]# cc=$(($aa + $bb))\n\n        [root@localhost~]# gg=$[$aa + $bb]\n\n    3. 变量测试(只是针对Shell,其他常用不适用.一般不常用,对脚本进行优化的时候才使用)\n\n#### 5.Shell编程之环境变量配置文件\n\n    `/etc/profile\n\n    /etc/profile.d/*.sh\n\n    /etc/bashrc\n\n    ~/.bashrc\n\n    ~/.bash_profile`\n\n    /etc目录下的是系统环境变量文件,~目录下的是当前用户的环境变量配置文件\n\n#### 6.Shell编程之正则表达式\n\n    正则表达式主要是用于描述字符排列和匹配模式d额一种语法规则，\n    主要用于字符串的模式分割,匹配,查找及替换操作\n\n  1.正则表达式与通配符\n\n    通配符：\n      *：匹配任意内容\n      ?：匹配任意一个内容\n      []：匹配括号中的一个字符.\n\n\n  正则表达式用来在文件中匹配符合条件的字符串,正则是包含匹配.\n  grep,awk,sed等命令可以支持正则表达式.\n\n  通配符用来匹配符合条件的文件名,通配符是完全匹配.\n  ls,find,cp这些命令不支持正则表达式,所以只能使用shell的通配符匹配.\n\n  #### 基础正则表达式:\n\n  | 元字符 | 作用 | \n  | - | :-: | -: | \n  |*|前一个字符匹配0次或者任意多次|\n  |.|匹配除了换行符以外的任意一个字符|\n  |^|匹配行首.例如:^hello匹配以hello开头的行|\n  |$|匹配行尾.例如:hello$匹配以hello结尾的行|\n  |[]|匹配中括号中指定的任意一个字符,只匹配一个字符|\n  |[^]|匹配除中括号中的字符以外的任意一个字符,例:[^0-9]表示匹配任意一位非数字字符|\n  |\\\\|转义符,用于将特殊符号的含义取消|\n  |\\\\{n\\\\}|表示其前面的字符恰好出现n次.例:[0-9]\\\\{4\\\\}匹配4位数字|\n  |\\\\{n,\\\\}|表示其前面出现的字符不小于n次,例:[0-9]\\\\{2,\\\\}表示2位及以上的数字|\n  |\\\\{n,m\\\\}|表示其前面出现的字符至少出现n次,最多出现m次,例:[a-z]\\\\{2,4\\\\}匹配2到4位的小写字母|","slug":"Shell基础","published":1,"updated":"2025-04-22T08:20:39.585Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745io000kd8gkgii4fkyo","content":"<pre><code>摘要:\n  Shell是一个命令行解释器,它为用户提供了一个向Linux内核\n  发送请求以便运行程序的界面系统级程序.用户可以用Shell来启动,挂起,\n  停止甚至是编写一些程序.\n  Shell还是一个功能相当强大的编程语言.易编写,意调试,灵活性较强.\n  Shell是解释执行的语言,在Shell中可以直接调用Linux系统命令.\n</code></pre>\n<h4 id=\"1-脚本的执行方式\"><a href=\"#1-脚本的执行方式\" class=\"headerlink\" title=\"1.脚本的执行方式\"></a>1. 脚本的执行方式</h4><pre><code>1. echo 输出命令\n    echo [选项] [输出内容]\n    选项:\n      -e : 支持反斜杠控制的字符转换\n\n2. 编写第一个脚本\n  vim hello.sh\n  #!/bin/bash\n  # this is hello program!\n  echo \"hello\"\n\n3. 脚本执行\n  1.赋予执行权限  \n    chmod 755 ./hello.sh\n    ./hello.sh\n  2.通过bash调用执行脚本\n    bash ./hello.sh\n  3.使用sh命令执行\n    sh ./hello.sh\n</code></pre>\n<h4 id=\"2-Bash的基本功能\"><a href=\"#2-Bash的基本功能\" class=\"headerlink\" title=\"2.Bash的基本功能\"></a>2.Bash 的基本功能</h4><pre><code>1. 命令的别名,很多泛指为Linux下的命令,其实本质是属于Bash\n  `alias` 查看系统中所有的命令的别名\n2. 设置命令别名\n  alias 别名= '原命令'\n  alias ll='ls -l'  #给ls -l 设置别名ll\n\n  以上设置别名的方式只是当次有效,系统重启后无效.要设置别名永久有效,\n  可以写入环境变量中\n  vim ~/.bashrc\n  alias ll='ls -l'\n  保存,执行source ~/.bashrc即可\n\n3. 删除别名\n  unalias 别名\n  unalias ll\n  unalias是删除临时别名的,永久生效的别名需要删除环境变量中的配置\n\n4. 命令的生效顺序\n  第一顺位执行用绝对路径或者相对路径的命令\n  第二顺位执行别名\n  第三顺位执行Bash的内部命令\n  第四顺位执行按照$PATH环境变量定义的目录查找顺序找到的第一个命令\n\n  注:因为别名的执行顺序是高于$PATH下的命令的,\n  所以一般情况下请勿将别名设为与其他原始命令相同的命令.\n</code></pre>\n<h4 id=\"3-Shell编程之Bash变量\"><a href=\"#3-Shell编程之Bash变量\" class=\"headerlink\" title=\"3.Shell编程之Bash变量\"></a>3.Shell 编程之 Bash 变量</h4><p>  Shell 中，所有变量默认都是字符串类型</p>\n<ol>\n<li>用户自定义变量  变量名 = 变量值 (等号 2 边不能有空格) </li>\n</ol>\n<pre><code>用户自己定义的变量,变量名和值可随意更改\n\nname=\"zhangsan\"\n\necho $name #显示name的值\n\n1.1 变量叠加\n\n  name=\"$name\"isaname\n\n1.2  删除变量(释放变量的内存地址) unset 变量名\n</code></pre>\n<ol start=\"2\">\n<li>环境变量</li>\n</ol>\n<pre><code>环境变量是全局变量,用户可更改值,不能更改名称\n</code></pre>\n<ol start=\"3\">\n<li>位置参数变量 </li>\n</ol>\n<pre><code>$n :n为数字,$0代表命令本身.$1-$9代表第1-第9个参数,10以上的参数需要用大括号包含,如${10}\n\n例:vim sum.sh\n\n  `#!/bin/bash\n\n    num1=$1\n\n    num2=$2\n\n    sum=$(($num1+$num2))\n\n    #变量sum的和是num1+num2\n\n    echo $sum`\n\n    执行;./sum.sh 10 20  #./sum.sh是$0,10是$1,20是$2\n\n    结果:30\n\n$* : 这个变量代表命令行中中所有的参数,$* 把所有的参数看成一个整体\n\n$@ : 这个变量也代表命令行中所有的参数,不过$@ 是把每个参数区分对待\n\n@# : 这个变量代表命令行中所有参数的个数\n\n例:vim /demo.sh\n\n`#!/bin/bash\n\necho \"参数是: $* \"\n\necho \"参数也是: $@ \"\n\necho \"参数个数是: $#\"`\n\n执行;./demo.sh 11 22 33\n\n结果:参数是: 11 22 33 参数也是: 11 22 33 参数个数是: 3\n\n$* 和 $@ 区别\n\nvim ./demo.sh\n\n#!/bin/bash\n\n`for i in \"$*\"\n\n#$* 把所有的参数看成一个整体,所以执行循环1次\n\n  do\n\n    echo \"参数是: $i\"\n\n  done\n\nfor y in \"$@\"\n\n#$@ 是把每个参数区分对待,所有有几个参数就循环几次\n\n  do\n\n    echo \"参数是: $y\"\n\n  done\n`\n</code></pre>\n<ol start=\"4\">\n<li>预定义变量 </li>\n</ol>\n<pre><code>$? : 最后依次执行的命令的返回结果,如果返回是0,代表上一个命令执行成功,如果返回是非0,代表上一个命令执行失败\n\n$$ : 返回当前进程的PID号\n\n$! : 后台运行的最后一个进程的进程号(PID)\n</code></pre>\n<ol start=\"5\">\n<li>接收键盘输入:read 命令 </li>\n</ol>\n<pre><code>read [选项] [变量名]\n\n选项\n\n  -p \"提示信息\":在等待read输入时,输出提示信息\n\n  -t 秒数: read命令会一直等待用户输入,输入次选项可以指定用户等待时间\n\n  -n 字符数: read命令只接受指定的字符数,就会执行\n\n  -s : 隐藏输入的数据,适用于输入密码等情况\n</code></pre>\n<h4 id=\"4-Shell编程之运算符\"><a href=\"#4-Shell编程之运算符\" class=\"headerlink\" title=\"4.Shell编程之运算符\"></a>4.Shell 编程之运算符</h4><pre><code>1. declare命令\n\n  declare声明变量类型\n\n  declare [+/-] [选项] 变量名\n\n    选项:用-给变量设定类型属性,用+取消变量的类型属性\n\n  常见选项类型\n\n    -a 将变量声明为数组类型\n\n    -i 将变量声明为整形\n\n    -x 将变量声明为环境变量\n\n    -r 将变量声明为只读变量(设置为只读属性后,不能对变量进行删除,修改,取消属性的操作)\n\n    -p 查看显示指定变量的被声明的类型\n\n2. 数值运算的方法\n\n  方法1:\n\n  [root@localhost~]# aa=11\n\n  [root@localhost~]# bb=22\n\n  [root@localhost~]# declare -i cc=$aa+$bb\n\n  方法2:\n\n    expr或者let数值运算工具\n\n    [root@localhost~]# aa=11\n\n    [root@localhost~]# bb=22\n\n    [root@localhost~]# dd=$(expr $aa + $bb)\n\n    #dd的值是aa和bb的和,注意:\"+\"号两侧必须有空格\n\n  方法3:\n\n    \"$(())\"或\"$[运算式]\"\n\n    [root@localhost~]# aa=11\n\n    [root@localhost~]# bb=22\n\n    [root@localhost~]# cc=$(($aa + $bb))\n\n    [root@localhost~]# gg=$[$aa + $bb]\n\n3. 变量测试(只是针对Shell,其他常用不适用.一般不常用,对脚本进行优化的时候才使用)\n</code></pre>\n<h4 id=\"5-Shell编程之环境变量配置文件\"><a href=\"#5-Shell编程之环境变量配置文件\" class=\"headerlink\" title=\"5.Shell编程之环境变量配置文件\"></a>5.Shell 编程之环境变量配置文件</h4><pre><code>`/etc/profile\n\n/etc/profile.d/*.sh\n\n/etc/bashrc\n\n~/.bashrc\n\n~/.bash_profile`\n\n/etc目录下的是系统环境变量文件,~目录下的是当前用户的环境变量配置文件\n</code></pre>\n<h4 id=\"6-Shell编程之正则表达式\"><a href=\"#6-Shell编程之正则表达式\" class=\"headerlink\" title=\"6.Shell编程之正则表达式\"></a>6.Shell 编程之正则表达式</h4><pre><code>正则表达式主要是用于描述字符排列和匹配模式d额一种语法规则，\n主要用于字符串的模式分割,匹配,查找及替换操作\n</code></pre>\n<p>  1. 正则表达式与通配符</p>\n<pre><code>通配符：\n  *：匹配任意内容\n  ?：匹配任意一个内容\n  []：匹配括号中的一个字符.\n</code></pre>\n<p>  正则表达式用来在文件中匹配符合条件的字符串，正则是包含匹配.<br>  grep,awk,sed 等命令可以支持正则表达式.</p>\n<p>  通配符用来匹配符合条件的文件名，通配符是完全匹配.<br>  ls,find,cp 这些命令不支持正则表达式，所以只能使用 shell 的通配符匹配.</p>\n<h4 id=\"基础正则表达式\"><a href=\"#基础正则表达式\" class=\"headerlink\" title=\"基础正则表达式:\"></a>基础正则表达式:</h4><p>  | 元字符 | 作用 |<br>  | - | :-: | -: |<br>  |*| 前一个字符匹配 0 次或者任意多次 |<br>  |.| 匹配除了换行符以外的任意一个字符 |<br>  |^| 匹配行首。例如:^hello 匹配以 hello 开头的行 |<br>  |$| 匹配行尾。例如:hello$ 匹配以 hello 结尾的行 |<br>  |[]| 匹配中括号中指定的任意一个字符，只匹配一个字符 |<br>  |[^]| 匹配除中括号中的字符以外的任意一个字符，例:[^0-9] 表示匹配任意一位非数字字符 |<br>  |\\| 转义符，用于将特殊符号的含义取消 |<br>  |\\{n\\}| 表示其前面的字符恰好出现 n 次。例:[0-9]\\{4\\} 匹配 4 位数字 |<br>  |\\{n,\\}| 表示其前面出现的字符不小于 n 次，例:[0-9]\\{2,\\} 表示 2 位及以上的数字 |<br>  |\\{n,m\\}| 表示其前面出现的字符至少出现 n 次，最多出现 m 次，例:[a-z]\\{2,4\\} 匹配 2 到 4 位的小写字母 |</p>\n","excerpt":"","more":"<pre><code>摘要:\n  Shell是一个命令行解释器,它为用户提供了一个向Linux内核\n  发送请求以便运行程序的界面系统级程序.用户可以用Shell来启动,挂起,\n  停止甚至是编写一些程序.\n  Shell还是一个功能相当强大的编程语言.易编写,意调试,灵活性较强.\n  Shell是解释执行的语言,在Shell中可以直接调用Linux系统命令.\n</code></pre>\n<h4 id=\"1-脚本的执行方式\"><a href=\"#1-脚本的执行方式\" class=\"headerlink\" title=\"1.脚本的执行方式\"></a>1. 脚本的执行方式</h4><pre><code>1. echo 输出命令\n    echo [选项] [输出内容]\n    选项:\n      -e : 支持反斜杠控制的字符转换\n\n2. 编写第一个脚本\n  vim hello.sh\n  #!/bin/bash\n  # this is hello program!\n  echo \"hello\"\n\n3. 脚本执行\n  1.赋予执行权限  \n    chmod 755 ./hello.sh\n    ./hello.sh\n  2.通过bash调用执行脚本\n    bash ./hello.sh\n  3.使用sh命令执行\n    sh ./hello.sh\n</code></pre>\n<h4 id=\"2-Bash的基本功能\"><a href=\"#2-Bash的基本功能\" class=\"headerlink\" title=\"2.Bash的基本功能\"></a>2.Bash 的基本功能</h4><pre><code>1. 命令的别名,很多泛指为Linux下的命令,其实本质是属于Bash\n  `alias` 查看系统中所有的命令的别名\n2. 设置命令别名\n  alias 别名= '原命令'\n  alias ll='ls -l'  #给ls -l 设置别名ll\n\n  以上设置别名的方式只是当次有效,系统重启后无效.要设置别名永久有效,\n  可以写入环境变量中\n  vim ~/.bashrc\n  alias ll='ls -l'\n  保存,执行source ~/.bashrc即可\n\n3. 删除别名\n  unalias 别名\n  unalias ll\n  unalias是删除临时别名的,永久生效的别名需要删除环境变量中的配置\n\n4. 命令的生效顺序\n  第一顺位执行用绝对路径或者相对路径的命令\n  第二顺位执行别名\n  第三顺位执行Bash的内部命令\n  第四顺位执行按照$PATH环境变量定义的目录查找顺序找到的第一个命令\n\n  注:因为别名的执行顺序是高于$PATH下的命令的,\n  所以一般情况下请勿将别名设为与其他原始命令相同的命令.\n</code></pre>\n<h4 id=\"3-Shell编程之Bash变量\"><a href=\"#3-Shell编程之Bash变量\" class=\"headerlink\" title=\"3.Shell编程之Bash变量\"></a>3.Shell 编程之 Bash 变量</h4><p>  Shell 中，所有变量默认都是字符串类型</p>\n<ol>\n<li>用户自定义变量  变量名 = 变量值 (等号 2 边不能有空格) </li>\n</ol>\n<pre><code>用户自己定义的变量,变量名和值可随意更改\n\nname=\"zhangsan\"\n\necho $name #显示name的值\n\n1.1 变量叠加\n\n  name=\"$name\"isaname\n\n1.2  删除变量(释放变量的内存地址) unset 变量名\n</code></pre>\n<ol start=\"2\">\n<li>环境变量</li>\n</ol>\n<pre><code>环境变量是全局变量,用户可更改值,不能更改名称\n</code></pre>\n<ol start=\"3\">\n<li>位置参数变量 </li>\n</ol>\n<pre><code>$n :n为数字,$0代表命令本身.$1-$9代表第1-第9个参数,10以上的参数需要用大括号包含,如${10}\n\n例:vim sum.sh\n\n  `#!/bin/bash\n\n    num1=$1\n\n    num2=$2\n\n    sum=$(($num1+$num2))\n\n    #变量sum的和是num1+num2\n\n    echo $sum`\n\n    执行;./sum.sh 10 20  #./sum.sh是$0,10是$1,20是$2\n\n    结果:30\n\n$* : 这个变量代表命令行中中所有的参数,$* 把所有的参数看成一个整体\n\n$@ : 这个变量也代表命令行中所有的参数,不过$@ 是把每个参数区分对待\n\n@# : 这个变量代表命令行中所有参数的个数\n\n例:vim /demo.sh\n\n`#!/bin/bash\n\necho \"参数是: $* \"\n\necho \"参数也是: $@ \"\n\necho \"参数个数是: $#\"`\n\n执行;./demo.sh 11 22 33\n\n结果:参数是: 11 22 33 参数也是: 11 22 33 参数个数是: 3\n\n$* 和 $@ 区别\n\nvim ./demo.sh\n\n#!/bin/bash\n\n`for i in \"$*\"\n\n#$* 把所有的参数看成一个整体,所以执行循环1次\n\n  do\n\n    echo \"参数是: $i\"\n\n  done\n\nfor y in \"$@\"\n\n#$@ 是把每个参数区分对待,所有有几个参数就循环几次\n\n  do\n\n    echo \"参数是: $y\"\n\n  done\n`\n</code></pre>\n<ol start=\"4\">\n<li>预定义变量 </li>\n</ol>\n<pre><code>$? : 最后依次执行的命令的返回结果,如果返回是0,代表上一个命令执行成功,如果返回是非0,代表上一个命令执行失败\n\n$$ : 返回当前进程的PID号\n\n$! : 后台运行的最后一个进程的进程号(PID)\n</code></pre>\n<ol start=\"5\">\n<li>接收键盘输入:read 命令 </li>\n</ol>\n<pre><code>read [选项] [变量名]\n\n选项\n\n  -p \"提示信息\":在等待read输入时,输出提示信息\n\n  -t 秒数: read命令会一直等待用户输入,输入次选项可以指定用户等待时间\n\n  -n 字符数: read命令只接受指定的字符数,就会执行\n\n  -s : 隐藏输入的数据,适用于输入密码等情况\n</code></pre>\n<h4 id=\"4-Shell编程之运算符\"><a href=\"#4-Shell编程之运算符\" class=\"headerlink\" title=\"4.Shell编程之运算符\"></a>4.Shell 编程之运算符</h4><pre><code>1. declare命令\n\n  declare声明变量类型\n\n  declare [+/-] [选项] 变量名\n\n    选项:用-给变量设定类型属性,用+取消变量的类型属性\n\n  常见选项类型\n\n    -a 将变量声明为数组类型\n\n    -i 将变量声明为整形\n\n    -x 将变量声明为环境变量\n\n    -r 将变量声明为只读变量(设置为只读属性后,不能对变量进行删除,修改,取消属性的操作)\n\n    -p 查看显示指定变量的被声明的类型\n\n2. 数值运算的方法\n\n  方法1:\n\n  [root@localhost~]# aa=11\n\n  [root@localhost~]# bb=22\n\n  [root@localhost~]# declare -i cc=$aa+$bb\n\n  方法2:\n\n    expr或者let数值运算工具\n\n    [root@localhost~]# aa=11\n\n    [root@localhost~]# bb=22\n\n    [root@localhost~]# dd=$(expr $aa + $bb)\n\n    #dd的值是aa和bb的和,注意:\"+\"号两侧必须有空格\n\n  方法3:\n\n    \"$(())\"或\"$[运算式]\"\n\n    [root@localhost~]# aa=11\n\n    [root@localhost~]# bb=22\n\n    [root@localhost~]# cc=$(($aa + $bb))\n\n    [root@localhost~]# gg=$[$aa + $bb]\n\n3. 变量测试(只是针对Shell,其他常用不适用.一般不常用,对脚本进行优化的时候才使用)\n</code></pre>\n<h4 id=\"5-Shell编程之环境变量配置文件\"><a href=\"#5-Shell编程之环境变量配置文件\" class=\"headerlink\" title=\"5.Shell编程之环境变量配置文件\"></a>5.Shell 编程之环境变量配置文件</h4><pre><code>`/etc/profile\n\n/etc/profile.d/*.sh\n\n/etc/bashrc\n\n~/.bashrc\n\n~/.bash_profile`\n\n/etc目录下的是系统环境变量文件,~目录下的是当前用户的环境变量配置文件\n</code></pre>\n<h4 id=\"6-Shell编程之正则表达式\"><a href=\"#6-Shell编程之正则表达式\" class=\"headerlink\" title=\"6.Shell编程之正则表达式\"></a>6.Shell 编程之正则表达式</h4><pre><code>正则表达式主要是用于描述字符排列和匹配模式d额一种语法规则，\n主要用于字符串的模式分割,匹配,查找及替换操作\n</code></pre>\n<p>  1. 正则表达式与通配符</p>\n<pre><code>通配符：\n  *：匹配任意内容\n  ?：匹配任意一个内容\n  []：匹配括号中的一个字符.\n</code></pre>\n<p>  正则表达式用来在文件中匹配符合条件的字符串，正则是包含匹配.<br>  grep,awk,sed 等命令可以支持正则表达式.</p>\n<p>  通配符用来匹配符合条件的文件名，通配符是完全匹配.<br>  ls,find,cp 这些命令不支持正则表达式，所以只能使用 shell 的通配符匹配.</p>\n<h4 id=\"基础正则表达式\"><a href=\"#基础正则表达式\" class=\"headerlink\" title=\"基础正则表达式:\"></a>基础正则表达式:</h4><p>  | 元字符 | 作用 |<br>  | - | :-: | -: |<br>  |*| 前一个字符匹配 0 次或者任意多次 |<br>  |.| 匹配除了换行符以外的任意一个字符 |<br>  |^| 匹配行首。例如:^hello 匹配以 hello 开头的行 |<br>  |$| 匹配行尾。例如:hello$ 匹配以 hello 结尾的行 |<br>  |[]| 匹配中括号中指定的任意一个字符，只匹配一个字符 |<br>  |[^]| 匹配除中括号中的字符以外的任意一个字符，例:[^0-9] 表示匹配任意一位非数字字符 |<br>  |\\| 转义符，用于将特殊符号的含义取消 |<br>  |\\{n\\}| 表示其前面的字符恰好出现 n 次。例:[0-9]\\{4\\} 匹配 4 位数字 |<br>  |\\{n,\\}| 表示其前面出现的字符不小于 n 次，例:[0-9]\\{2,\\} 表示 2 位及以上的数字 |<br>  |\\{n,m\\}| 表示其前面出现的字符至少出现 n 次，最多出现 m 次，例:[a-z]\\{2,4\\} 匹配 2 到 4 位的小写字母 |</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:20:39 GMT+0800 (China Standard Time)","title":"Shell 基础","path":"2018/05/20/Shell基础/","eyeCatchImage":null,"excerpt":"Shell基础","date":{"_isAMomentObject":true,"_i":"2018-05-20T10:52:36.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-05-20T10:52:36.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["linux","shell"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":1827},{"title":"axis2 调用 webservice","date":"2018-12-11T01:36:33.000Z","description":"axis2调用webservice","_content":"<!-- TOC -->\n\n- [WebService:一种跨编程语言和跨操作系统平台的远程调用技术.](#webservice一种跨编程语言和跨操作系统平台的远程调用技术)\n- [WebService的实现包有很多,Java语言有jdk1.6后内置的jws.\\*,Apache cxf,Apache Axis,Apache Axis2.](#webservice的实现包有很多java语言有jdk16后内置的jwsapache-cxfapache-axisapache-axis2)\n  - [1.远程调用](#1远程调用)\n    - [1.1 axis2+wsdl地址方式调用:](#11-axis2wsdl地址方式调用)\n    - [1.2 axis2+endpoint地址方式调用:](#12-axis2endpoint地址方式调用)\n  - [2.wsdl2java方式调用](#2wsdl2java方式调用)\n\n<!-- /TOC -->\n### WebService:一种跨编程语言和跨操作系统平台的远程调用技术.\n\n    WebService都是基于http请求(POST请求,无GET请求)\n    XML+XSD,SOAP和WSDL就是构成WebService平台的三大技术。\n    XML+XSD：\n\n    WebService采用HTTP协议传输数据，采用XML格式封装数据（即XML中说明调用远程服务对象的哪个方法，传递的参数是什么，\n    以及服务对象的返回结果是什么）。XML是WebService平台中表示数据的格式。\n\n    SOAP(Simple Object Access Protocol)：简单对象访问协议\n    \n    SOAP提供了标准的RPC方法来调用Web Service。SOAP协议 = HTTP协议 + XML数据格式SOAP协议定义了SOAP消息的格式，\n    SOAP协议是基于HTTP协议的，SOAP也是基于XML和XSD的，XML是SOAP的数据编码方式。\n    soap协议分1.1和1.2版本:\n    soap1.1:\n      请求方式:post\n      content-type:text/xml;charset=utf-8\n    soap1.2:\n      请求方式:post\n      content-type:application/soap+xml\n\n    WSDL(Web Services Description Language):基于XML的语言，用于描述Web Service及其函数、参数和返回值。\n    \n    它是WebService客户端和服务器端都能理解的标准格式。WSDL文件保存在Web服务器上，通过一个url地址就可以访问到它。\n    客户端要调用一个WebService服务之前，要知道该服务的WSDL文件的地址。\n\n    注:wsdl文件阅读技巧:(从下往上读)\n      找到wsdl:service节点->查看下面的wsdl:port节点->查看其binding属性->找到与bingding名称相同的wsdl:binding节点\n      ->查看节点下的wsdl:operation节点(对应的调用method名称)->wsdl:input方法输入参数节点->对应message属性值\n      ->找到同名的wsdl:message节点->wsdl:part对应的参数名称和类型.\n\n      wsdl:output节点代表服务返回的数据.阅读方式和wsdl:input一致\n\nWebService优点:跨平台跨语言.服务方和调用方不用关心各自的平台和语言\n\nWebService缺点:在使用方式上，RPC和soap的使用在减少，Restful架构占到了主导地位。在数据格式上，XML格式繁琐,使用在减少，json等轻量级格式的使用在增多..另外性能上略低(也有专门对xml解析优化的cpu)\n\n### WebService的实现包有很多,Java语言有jdk1.6后内置的jws.*,Apache cxf,Apache Axis,Apache Axis2.\n\n本文采用axis2包,发布webservice服务可以采用jdk的@WebService注解实现或者cxf/axis/axis2来进行实现,网上教程很多,本文不涉及到这块.主要是发现在调用的时候会有一些坑,所以在此记录\n\nWebService客户端调用主要有2类方式,一种是通过http远程调用,一种是通过wsdl2java产生Java代码调用\n\n#### 1.远程调用\n\n  引入axisjar包:\n  ```xml\n      <!-- Axis2 -->\n        <dependency>\n            <groupId>org.apache.axis2</groupId>\n            <artifactId>axis2</artifactId>\n            <version>1.6.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.ws.commons.axiom</groupId>\n            <artifactId>axiom</artifactId>\n            <version>1.2.20</version>\n            <type>pom</type>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.ws.commons.axiom</groupId>\n            <artifactId>axiom-api</artifactId>\n            <version>1.2.20</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.ws.commons.axiom</groupId>\n            <artifactId>axiom-impl</artifactId>\n            <version>1.2.20</version>\n        </dependency>\n        <dependency>\n            <groupId>wsdl4j</groupId>\n            <artifactId>wsdl4j</artifactId>\n            <version>1.6.3</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.ws.xmlschema</groupId>\n            <artifactId>xmlschema-core</artifactId>\n            <version>2.2.3</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.neethi</groupId>\n            <artifactId>neethi</artifactId>\n            <!--<version>2.0.4</version> -->\n            <version>3.1.1</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.axis2</groupId>\n            <artifactId>axis2-transport-local</artifactId>\n            <version>1.7.7</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.axis2</groupId>\n            <artifactId>axis2-transport-http</artifactId>\n            <version>1.7.7</version>\n        </dependency>\n        <dependency>\n            <groupId>javax.mail</groupId>\n            <artifactId>javax.mail-api</artifactId>\n            <version>1.6.2</version>\n        </dependency>\n      <!-- Axis2 End -->\n  ```\n\n##### 1.1 axis2+wsdl地址方式调用:\n\n```java\n  String soapBindingAddress = \"http://ws.webxml.com.cn/WebServices/MobileCodeWS.asmx?wsdl\";\n        EndpointReference endpointReference = new EndpointReference(soapBindingAddress);\n        //创建一个OMFactory\n        OMFactory factory = OMAbstractFactory.getOMFactory();\n        //指定命名空间\n        OMNamespace namespace = factory.createOMNamespace(\"http://WebXml.com.cn/\", \"web\");\n        //创建method对象，方法名 为getMobileCodeInfo\n        OMElement method = factory.createOMElement(\"getMobileCodeInfo\", namespace);\n        OMElement mobileCode = factory.createOMElement(\"mobileCode\", namespace);//方法参数\n        OMElement userID = factory.createOMElement(\"userID\", namespace);//方法参数\n        //封装参数\n        mobileCode.addChild(factory.createOMText(mobileCode, \"18265963256\"));//设定参数的值\n        method.addChild(mobileCode);\n        userID.addChild(factory.createOMText(userID, \"\"));//设定参数的值\n        method.addChild(userID);\n        //请求参数设置\n        ServiceClient sender = new ServiceClient();\n        Options options = new Options();\n        // 设置soap1.2协议\n        options.setSoapVersionURI(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI);\n        options.setAction(\"http://WebXml.com.cn/getMobileCodeInfo\");\n        options.setTo(endpointReference);\n        sender.setOptions(options);\n        OMElement result = sender.sendReceive(method);\n        System.out.println(result.getFirstElement().getText());\n```\n\n##### 1.2 axis2+endpoint地址方式调用:\n\n```java\n  ServiceClient client = new ServiceClient();\n        // 创建服务地址WebService的URL,注意不是WSDL的URL\n        String url = \"http://ws.webxml.com.cn/WebServices/MobileCodeWS.asmx\";\n        EndpointReference targetEPR = new EndpointReference(url);\n        Options options = client.getOptions();\n        // 设置soap1.2协议\n        options.setSoapVersionURI(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI);\n        options.setTo(targetEPR);\n        // 确定调用方法（wsdl 命名空间地址 (wsdl文档中的targetNamespace) 和 方法名称 的组合）\n        options.setAction(\"http://WebXml.com.cn/getMobileCodeInfo\");\n        OMFactory fac = OMAbstractFactory.getOMFactory();\n        /*\n         * 指定命名空间，参数： uri--即为wsdl文档的targetNamespace，命名空间 perfix--可不填\n         */\n        OMNamespace omNs = fac.createOMNamespace(\"http://WebXml.com.cn/\", \"\");\n        /*\n         * 身份验证\n         * OMElement header = fac.createOMElement(\"AuthenticationToken\", omNs);\n         * OMElement ome_user = fac.createOMElement(\"Username\", omNs); OMElement\n         * ome_pass = fac.createOMElement(\"Password\", omNs);\n         *\n         * ome_user.setText(\"user\"); ome_pass.setText(\"pass\");\n         *\n         * header.addChild(ome_user); header.addChild(ome_pass);\n         *\n         * client.addHeader(header);\n         */\n        // 指定方法\n        OMElement method = fac.createOMElement(\"getMobileCodeInfo\", omNs);\n        // 指定方法的参数\n        OMElement mobileCode = fac.createOMElement(\"mobileCode\", omNs);\n        mobileCode.setText(\"18265963256\");\n        OMElement userID = fac.createOMElement(\"userID\", omNs);\n        userID.setText(\"\");\n        method.addChild(mobileCode);\n        method.addChild(userID);\n        method.build();\n        // 远程调用web服务\n        OMElement result = client.sendReceive(method);\n        System.out.println(result);\n```\n\n    注:返回的xml数据可能含有需要转义的字符,比如&lt;之类的.\n    可以用org.apache.commons.lang3.StringEscapeUtils.unescapeXml方法处理,(已过时),\n    可以用commons-text包下的StringEscapeUtils类进行反转义处理\n\n#### 2.wsdl2java方式调用\n\n  使用jdk命令行下的wsimport命令和wsdl文件生成生成客户端中间代码,\n  \n  注意:只能编译soap1.1的协议，不能编译soap1.2的协议的代码\n\n    wsimport [options] <WSDL_URI>\n    比较常用的[options]有：\n    1. -d <directory>\n      在指定的目录生成class文件\n    2. -clientjar <jarfile>\n      在当前目录生成jar文件，结合-d <directory>可以在指定的目录生成jar文件\n    3. -s <directory>\n      在指定的目录生成java源文件\n    4. -p <pkg>\n      指定生成文件的包结构\n    5. -keep\n      在生成class文件，或者jar包时，同时保留java源文件\n\n例:在当前目录新建class文件夹和java文件夹,分别存放对应的class文件个java文件\n\n    wsimport -keep -d ./class -s ./java -p com.test.demo -verbose http://ws.webxml.com.cn/WebServices/MobileCodeWS.asmx?wsdl  \n\n```java\n  //创建一个MobileCodeWS工厂  \n  MobileCodeWS factory = new MobileCodeWS();  \n  //根据工厂创建一个MobileCodeWSSoap对象  \n  MobileCodeWSSoap mobileCodeWSSoap = factory.getMobileCodeWSSoap();  \n  //调用WebService提供的getMobileCodeInfo方法查询手机号码的归属地  \n  String searchResult = mobileCodeWSSoap.getMobileCodeInfo(\"18265963256\", null);  \n  System.out.println(searchResult);  \n```\n\n笔后摘要:\n\nwebservice既然是基于http的,那么也可使用最原始的URLconnect来进行访问请求处理,但是要注意对应的soap协议版本请求头,还需要组装符合soap协议xml文档信息等.完整的请求头应该和下例类似:\n\n```xml\n  请求头:\n  POST /WebServices/MobileCodeWS.asmx HTTP/1.1\n  Host: webservice.webxml.com.cn\n  Content-Type: text/xml; charset=utf-8\n  Content-Length: length\n  SOAPAction: \"http://WebXml.com.cn/getMobileCodeInfo\"\n\n消息体:\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\n<soap:Body>\n<getMobileCodeInfo xmlns=\"http://WebXml.com.cn/\">\n<mobileCode>18265963256</mobileCode>\n<userID>string</userID>\n</getMobileCodeInfo>\n</soap:Body>\n</soap:Envelope>\n```","source":"_posts/axis2调用webservice.md","raw":"---\ntitle: axis2调用webservice\ndate: 2018-12-11 09:36:33\ndescription: axis2调用webservice\ntags:\n  - axis2\n  - WebService\n  - java\n---\n<!-- TOC -->\n\n- [WebService:一种跨编程语言和跨操作系统平台的远程调用技术.](#webservice一种跨编程语言和跨操作系统平台的远程调用技术)\n- [WebService的实现包有很多,Java语言有jdk1.6后内置的jws.\\*,Apache cxf,Apache Axis,Apache Axis2.](#webservice的实现包有很多java语言有jdk16后内置的jwsapache-cxfapache-axisapache-axis2)\n  - [1.远程调用](#1远程调用)\n    - [1.1 axis2+wsdl地址方式调用:](#11-axis2wsdl地址方式调用)\n    - [1.2 axis2+endpoint地址方式调用:](#12-axis2endpoint地址方式调用)\n  - [2.wsdl2java方式调用](#2wsdl2java方式调用)\n\n<!-- /TOC -->\n### WebService:一种跨编程语言和跨操作系统平台的远程调用技术.\n\n    WebService都是基于http请求(POST请求,无GET请求)\n    XML+XSD,SOAP和WSDL就是构成WebService平台的三大技术。\n    XML+XSD：\n\n    WebService采用HTTP协议传输数据，采用XML格式封装数据（即XML中说明调用远程服务对象的哪个方法，传递的参数是什么，\n    以及服务对象的返回结果是什么）。XML是WebService平台中表示数据的格式。\n\n    SOAP(Simple Object Access Protocol)：简单对象访问协议\n    \n    SOAP提供了标准的RPC方法来调用Web Service。SOAP协议 = HTTP协议 + XML数据格式SOAP协议定义了SOAP消息的格式，\n    SOAP协议是基于HTTP协议的，SOAP也是基于XML和XSD的，XML是SOAP的数据编码方式。\n    soap协议分1.1和1.2版本:\n    soap1.1:\n      请求方式:post\n      content-type:text/xml;charset=utf-8\n    soap1.2:\n      请求方式:post\n      content-type:application/soap+xml\n\n    WSDL(Web Services Description Language):基于XML的语言，用于描述Web Service及其函数、参数和返回值。\n    \n    它是WebService客户端和服务器端都能理解的标准格式。WSDL文件保存在Web服务器上，通过一个url地址就可以访问到它。\n    客户端要调用一个WebService服务之前，要知道该服务的WSDL文件的地址。\n\n    注:wsdl文件阅读技巧:(从下往上读)\n      找到wsdl:service节点->查看下面的wsdl:port节点->查看其binding属性->找到与bingding名称相同的wsdl:binding节点\n      ->查看节点下的wsdl:operation节点(对应的调用method名称)->wsdl:input方法输入参数节点->对应message属性值\n      ->找到同名的wsdl:message节点->wsdl:part对应的参数名称和类型.\n\n      wsdl:output节点代表服务返回的数据.阅读方式和wsdl:input一致\n\nWebService优点:跨平台跨语言.服务方和调用方不用关心各自的平台和语言\n\nWebService缺点:在使用方式上，RPC和soap的使用在减少，Restful架构占到了主导地位。在数据格式上，XML格式繁琐,使用在减少，json等轻量级格式的使用在增多..另外性能上略低(也有专门对xml解析优化的cpu)\n\n### WebService的实现包有很多,Java语言有jdk1.6后内置的jws.*,Apache cxf,Apache Axis,Apache Axis2.\n\n本文采用axis2包,发布webservice服务可以采用jdk的@WebService注解实现或者cxf/axis/axis2来进行实现,网上教程很多,本文不涉及到这块.主要是发现在调用的时候会有一些坑,所以在此记录\n\nWebService客户端调用主要有2类方式,一种是通过http远程调用,一种是通过wsdl2java产生Java代码调用\n\n#### 1.远程调用\n\n  引入axisjar包:\n  ```xml\n      <!-- Axis2 -->\n        <dependency>\n            <groupId>org.apache.axis2</groupId>\n            <artifactId>axis2</artifactId>\n            <version>1.6.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.ws.commons.axiom</groupId>\n            <artifactId>axiom</artifactId>\n            <version>1.2.20</version>\n            <type>pom</type>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.ws.commons.axiom</groupId>\n            <artifactId>axiom-api</artifactId>\n            <version>1.2.20</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.ws.commons.axiom</groupId>\n            <artifactId>axiom-impl</artifactId>\n            <version>1.2.20</version>\n        </dependency>\n        <dependency>\n            <groupId>wsdl4j</groupId>\n            <artifactId>wsdl4j</artifactId>\n            <version>1.6.3</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.ws.xmlschema</groupId>\n            <artifactId>xmlschema-core</artifactId>\n            <version>2.2.3</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.neethi</groupId>\n            <artifactId>neethi</artifactId>\n            <!--<version>2.0.4</version> -->\n            <version>3.1.1</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.axis2</groupId>\n            <artifactId>axis2-transport-local</artifactId>\n            <version>1.7.7</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.axis2</groupId>\n            <artifactId>axis2-transport-http</artifactId>\n            <version>1.7.7</version>\n        </dependency>\n        <dependency>\n            <groupId>javax.mail</groupId>\n            <artifactId>javax.mail-api</artifactId>\n            <version>1.6.2</version>\n        </dependency>\n      <!-- Axis2 End -->\n  ```\n\n##### 1.1 axis2+wsdl地址方式调用:\n\n```java\n  String soapBindingAddress = \"http://ws.webxml.com.cn/WebServices/MobileCodeWS.asmx?wsdl\";\n        EndpointReference endpointReference = new EndpointReference(soapBindingAddress);\n        //创建一个OMFactory\n        OMFactory factory = OMAbstractFactory.getOMFactory();\n        //指定命名空间\n        OMNamespace namespace = factory.createOMNamespace(\"http://WebXml.com.cn/\", \"web\");\n        //创建method对象，方法名 为getMobileCodeInfo\n        OMElement method = factory.createOMElement(\"getMobileCodeInfo\", namespace);\n        OMElement mobileCode = factory.createOMElement(\"mobileCode\", namespace);//方法参数\n        OMElement userID = factory.createOMElement(\"userID\", namespace);//方法参数\n        //封装参数\n        mobileCode.addChild(factory.createOMText(mobileCode, \"18265963256\"));//设定参数的值\n        method.addChild(mobileCode);\n        userID.addChild(factory.createOMText(userID, \"\"));//设定参数的值\n        method.addChild(userID);\n        //请求参数设置\n        ServiceClient sender = new ServiceClient();\n        Options options = new Options();\n        // 设置soap1.2协议\n        options.setSoapVersionURI(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI);\n        options.setAction(\"http://WebXml.com.cn/getMobileCodeInfo\");\n        options.setTo(endpointReference);\n        sender.setOptions(options);\n        OMElement result = sender.sendReceive(method);\n        System.out.println(result.getFirstElement().getText());\n```\n\n##### 1.2 axis2+endpoint地址方式调用:\n\n```java\n  ServiceClient client = new ServiceClient();\n        // 创建服务地址WebService的URL,注意不是WSDL的URL\n        String url = \"http://ws.webxml.com.cn/WebServices/MobileCodeWS.asmx\";\n        EndpointReference targetEPR = new EndpointReference(url);\n        Options options = client.getOptions();\n        // 设置soap1.2协议\n        options.setSoapVersionURI(SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI);\n        options.setTo(targetEPR);\n        // 确定调用方法（wsdl 命名空间地址 (wsdl文档中的targetNamespace) 和 方法名称 的组合）\n        options.setAction(\"http://WebXml.com.cn/getMobileCodeInfo\");\n        OMFactory fac = OMAbstractFactory.getOMFactory();\n        /*\n         * 指定命名空间，参数： uri--即为wsdl文档的targetNamespace，命名空间 perfix--可不填\n         */\n        OMNamespace omNs = fac.createOMNamespace(\"http://WebXml.com.cn/\", \"\");\n        /*\n         * 身份验证\n         * OMElement header = fac.createOMElement(\"AuthenticationToken\", omNs);\n         * OMElement ome_user = fac.createOMElement(\"Username\", omNs); OMElement\n         * ome_pass = fac.createOMElement(\"Password\", omNs);\n         *\n         * ome_user.setText(\"user\"); ome_pass.setText(\"pass\");\n         *\n         * header.addChild(ome_user); header.addChild(ome_pass);\n         *\n         * client.addHeader(header);\n         */\n        // 指定方法\n        OMElement method = fac.createOMElement(\"getMobileCodeInfo\", omNs);\n        // 指定方法的参数\n        OMElement mobileCode = fac.createOMElement(\"mobileCode\", omNs);\n        mobileCode.setText(\"18265963256\");\n        OMElement userID = fac.createOMElement(\"userID\", omNs);\n        userID.setText(\"\");\n        method.addChild(mobileCode);\n        method.addChild(userID);\n        method.build();\n        // 远程调用web服务\n        OMElement result = client.sendReceive(method);\n        System.out.println(result);\n```\n\n    注:返回的xml数据可能含有需要转义的字符,比如&lt;之类的.\n    可以用org.apache.commons.lang3.StringEscapeUtils.unescapeXml方法处理,(已过时),\n    可以用commons-text包下的StringEscapeUtils类进行反转义处理\n\n#### 2.wsdl2java方式调用\n\n  使用jdk命令行下的wsimport命令和wsdl文件生成生成客户端中间代码,\n  \n  注意:只能编译soap1.1的协议，不能编译soap1.2的协议的代码\n\n    wsimport [options] <WSDL_URI>\n    比较常用的[options]有：\n    1. -d <directory>\n      在指定的目录生成class文件\n    2. -clientjar <jarfile>\n      在当前目录生成jar文件，结合-d <directory>可以在指定的目录生成jar文件\n    3. -s <directory>\n      在指定的目录生成java源文件\n    4. -p <pkg>\n      指定生成文件的包结构\n    5. -keep\n      在生成class文件，或者jar包时，同时保留java源文件\n\n例:在当前目录新建class文件夹和java文件夹,分别存放对应的class文件个java文件\n\n    wsimport -keep -d ./class -s ./java -p com.test.demo -verbose http://ws.webxml.com.cn/WebServices/MobileCodeWS.asmx?wsdl  \n\n```java\n  //创建一个MobileCodeWS工厂  \n  MobileCodeWS factory = new MobileCodeWS();  \n  //根据工厂创建一个MobileCodeWSSoap对象  \n  MobileCodeWSSoap mobileCodeWSSoap = factory.getMobileCodeWSSoap();  \n  //调用WebService提供的getMobileCodeInfo方法查询手机号码的归属地  \n  String searchResult = mobileCodeWSSoap.getMobileCodeInfo(\"18265963256\", null);  \n  System.out.println(searchResult);  \n```\n\n笔后摘要:\n\nwebservice既然是基于http的,那么也可使用最原始的URLconnect来进行访问请求处理,但是要注意对应的soap协议版本请求头,还需要组装符合soap协议xml文档信息等.完整的请求头应该和下例类似:\n\n```xml\n  请求头:\n  POST /WebServices/MobileCodeWS.asmx HTTP/1.1\n  Host: webservice.webxml.com.cn\n  Content-Type: text/xml; charset=utf-8\n  Content-Length: length\n  SOAPAction: \"http://WebXml.com.cn/getMobileCodeInfo\"\n\n消息体:\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\n<soap:Body>\n<getMobileCodeInfo xmlns=\"http://WebXml.com.cn/\">\n<mobileCode>18265963256</mobileCode>\n<userID>string</userID>\n</getMobileCodeInfo>\n</soap:Body>\n</soap:Envelope>\n```","slug":"axis2调用webservice","published":1,"updated":"2025-04-22T08:16:28.040Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745ip000md8gk4ji194ut","content":"<!-- TOC -->\n\n<ul>\n<li><a href=\"#webservice%E4%B8%80%E7%A7%8D%E8%B7%A8%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%92%8C%E8%B7%A8%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8%E6%8A%80%E6%9C%AF\">WebService: 一种跨编程语言和跨操作系统平台的远程调用技术.</a></li>\n<li><a href=\"#webservice%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8C%85%E6%9C%89%E5%BE%88%E5%A4%9Ajava%E8%AF%AD%E8%A8%80%E6%9C%89jdk16%E5%90%8E%E5%86%85%E7%BD%AE%E7%9A%84jwsapache-cxfapache-axisapache-axis2\">WebService 的实现包有很多，Java 语言有 jdk1.6 后内置的 jws.*,Apache cxf,Apache Axis,Apache Axis2.</a><ul>\n<li><a href=\"#1%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8\">1. 远程调用</a><ul>\n<li><a href=\"#11-axis2wsdl%E5%9C%B0%E5%9D%80%E6%96%B9%E5%BC%8F%E8%B0%83%E7%94%A8\">1.1 axis2+wsdl 地址方式调用:</a></li>\n<li><a href=\"#12-axis2endpoint%E5%9C%B0%E5%9D%80%E6%96%B9%E5%BC%8F%E8%B0%83%E7%94%A8\">1.2 axis2+endpoint 地址方式调用:</a></li>\n</ul>\n</li>\n<li><a href=\"#2wsdl2java%E6%96%B9%E5%BC%8F%E8%B0%83%E7%94%A8\">2.wsdl2java 方式调用</a></li>\n</ul>\n</li>\n</ul>\n<!-- /TOC -->\n<h3 id=\"WebService-一种跨编程语言和跨操作系统平台的远程调用技术\"><a href=\"#WebService-一种跨编程语言和跨操作系统平台的远程调用技术\" class=\"headerlink\" title=\"WebService:一种跨编程语言和跨操作系统平台的远程调用技术.\"></a>WebService: 一种跨编程语言和跨操作系统平台的远程调用技术.</h3><pre><code>WebService都是基于http请求(POST请求,无GET请求)\nXML+XSD,SOAP和WSDL就是构成WebService平台的三大技术。\nXML+XSD：\n\nWebService采用HTTP协议传输数据，采用XML格式封装数据（即XML中说明调用远程服务对象的哪个方法，传递的参数是什么，\n以及服务对象的返回结果是什么）。XML是WebService平台中表示数据的格式。\n\nSOAP(Simple Object Access Protocol)：简单对象访问协议\n\nSOAP提供了标准的RPC方法来调用Web Service。SOAP协议 = HTTP协议 + XML数据格式SOAP协议定义了SOAP消息的格式，\nSOAP协议是基于HTTP协议的，SOAP也是基于XML和XSD的，XML是SOAP的数据编码方式。\nsoap协议分1.1和1.2版本:\nsoap1.1:\n  请求方式:post\n  content-type:text/xml;charset=utf-8\nsoap1.2:\n  请求方式:post\n  content-type:application/soap+xml\n\nWSDL(Web Services Description Language):基于XML的语言，用于描述Web Service及其函数、参数和返回值。\n\n它是WebService客户端和服务器端都能理解的标准格式。WSDL文件保存在Web服务器上，通过一个url地址就可以访问到它。\n客户端要调用一个WebService服务之前，要知道该服务的WSDL文件的地址。\n\n注:wsdl文件阅读技巧:(从下往上读)\n  找到wsdl:service节点-&gt;查看下面的wsdl:port节点-&gt;查看其binding属性-&gt;找到与bingding名称相同的wsdl:binding节点\n  -&gt;查看节点下的wsdl:operation节点(对应的调用method名称)-&gt;wsdl:input方法输入参数节点-&gt;对应message属性值\n  -&gt;找到同名的wsdl:message节点-&gt;wsdl:part对应的参数名称和类型.\n\n  wsdl:output节点代表服务返回的数据.阅读方式和wsdl:input一致\n</code></pre>\n<p>WebService 优点：跨平台跨语言。服务方和调用方不用关心各自的平台和语言</p>\n<p>WebService 缺点：在使用方式上，RPC 和 soap 的使用在减少，Restful 架构占到了主导地位。在数据格式上，XML 格式繁琐，使用在减少，json 等轻量级格式的使用在增多.. 另外性能上略低 (也有专门对 xml 解析优化的 cpu)</p>\n<h3 id=\"WebService的实现包有很多-Java语言有jdk1-6后内置的jws-Apache-cxf-Apache-Axis-Apache-Axis2\"><a href=\"#WebService的实现包有很多-Java语言有jdk1-6后内置的jws-Apache-cxf-Apache-Axis-Apache-Axis2\" class=\"headerlink\" title=\"WebService的实现包有很多,Java语言有jdk1.6后内置的jws.*,Apache cxf,Apache Axis,Apache Axis2.\"></a>WebService 的实现包有很多，Java 语言有 jdk1.6 后内置的 jws.*,Apache cxf,Apache Axis,Apache Axis2.</h3><p>本文采用 axis2 包，发布 webservice 服务可以采用 jdk 的 @WebService 注解实现或者 cxf/axis/axis2 来进行实现，网上教程很多，本文不涉及到这块。主要是发现在调用的时候会有一些坑，所以在此记录</p>\n<p>WebService 客户端调用主要有 2 类方式，一种是通过 http 远程调用，一种是通过 wsdl2java 产生 Java 代码调用</p>\n<h4 id=\"1-远程调用\"><a href=\"#1-远程调用\" class=\"headerlink\" title=\"1.远程调用\"></a>1. 远程调用</h4><p>  引入 axisjar 包:<br>  </p><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!-- Axis2 --&gt;</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.apache.axis2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>axis2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.6.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.apache.ws.commons.axiom<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>axiom<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.2.20<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>type</span><span class=\"token punctuation\">&gt;</span></span>pom<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>type</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.apache.ws.commons.axiom<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>axiom-api<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.2.20<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.apache.ws.commons.axiom<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>axiom-impl<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.2.20<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>wsdl4j<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>wsdl4j<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.6.3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.apache.ws.xmlschema<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>xmlschema-core<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>2.2.3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.apache.neethi<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>neethi<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token comment\">&lt;!--&lt;version&gt;2.0.4&lt;/version&gt; --&gt;</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>3.1.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.apache.axis2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>axis2-transport-local<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.7.7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.apache.axis2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>axis2-transport-http<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.7.7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>javax.mail<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>javax.mail-api<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.6.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!-- Axis2 End --&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p></p>\n<h5 id=\"1-1-axis2-wsdl地址方式调用\"><a href=\"#1-1-axis2-wsdl地址方式调用\" class=\"headerlink\" title=\"1.1 axis2+wsdl地址方式调用:\"></a>1.1 axis2+wsdl 地址方式调用:</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">String</span> soapBindingAddress <span class=\"token operator\">=</span> <span class=\"token string\">\"http://ws.webxml.com.cn/WebServices/MobileCodeWS.asmx?wsdl\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">EndpointReference</span> endpointReference <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EndpointReference</span><span class=\"token punctuation\">(</span>soapBindingAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">//创建一个OMFactory</span>\n      <span class=\"token class-name\">OMFactory</span> factory <span class=\"token operator\">=</span> <span class=\"token class-name\">OMAbstractFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getOMFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">//指定命名空间</span>\n      <span class=\"token class-name\">OMNamespace</span> namespace <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">createOMNamespace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://WebXml.com.cn/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"web\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">//创建method对象，方法名 为getMobileCodeInfo</span>\n      <span class=\"token class-name\">OMElement</span> method <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">createOMElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getMobileCodeInfo\"</span><span class=\"token punctuation\">,</span> namespace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">OMElement</span> mobileCode <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">createOMElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mobileCode\"</span><span class=\"token punctuation\">,</span> namespace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//方法参数</span>\n      <span class=\"token class-name\">OMElement</span> userID <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">createOMElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"userID\"</span><span class=\"token punctuation\">,</span> namespace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//方法参数</span>\n      <span class=\"token comment\">//封装参数</span>\n      mobileCode<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">.</span><span class=\"token function\">createOMText</span><span class=\"token punctuation\">(</span>mobileCode<span class=\"token punctuation\">,</span> <span class=\"token string\">\"18265963256\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设定参数的值</span>\n      method<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>mobileCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      userID<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">.</span><span class=\"token function\">createOMText</span><span class=\"token punctuation\">(</span>userID<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设定参数的值</span>\n      method<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>userID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">//请求参数设置</span>\n      <span class=\"token class-name\">ServiceClient</span> sender <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServiceClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">Options</span> options <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Options</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 设置soap1.2协议</span>\n      options<span class=\"token punctuation\">.</span><span class=\"token function\">setSoapVersionURI</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SOAP12Constants</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SOAP_ENVELOPE_NAMESPACE_URI</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      options<span class=\"token punctuation\">.</span><span class=\"token function\">setAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://WebXml.com.cn/getMobileCodeInfo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      options<span class=\"token punctuation\">.</span><span class=\"token function\">setTo</span><span class=\"token punctuation\">(</span>endpointReference<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      sender<span class=\"token punctuation\">.</span><span class=\"token function\">setOptions</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">OMElement</span> result <span class=\"token operator\">=</span> sender<span class=\"token punctuation\">.</span><span class=\"token function\">sendReceive</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">getFirstElement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"1-2-axis2-endpoint地址方式调用\"><a href=\"#1-2-axis2-endpoint地址方式调用\" class=\"headerlink\" title=\"1.2 axis2+endpoint地址方式调用:\"></a>1.2 axis2+endpoint 地址方式调用:</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">ServiceClient</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServiceClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 创建服务地址WebService的URL,注意不是WSDL的URL</span>\n      <span class=\"token class-name\">String</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://ws.webxml.com.cn/WebServices/MobileCodeWS.asmx\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">EndpointReference</span> targetEPR <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EndpointReference</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">Options</span> options <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 设置soap1.2协议</span>\n      options<span class=\"token punctuation\">.</span><span class=\"token function\">setSoapVersionURI</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SOAP12Constants</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SOAP_ENVELOPE_NAMESPACE_URI</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      options<span class=\"token punctuation\">.</span><span class=\"token function\">setTo</span><span class=\"token punctuation\">(</span>targetEPR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 确定调用方法（wsdl 命名空间地址 (wsdl文档中的targetNamespace) 和 方法名称 的组合）</span>\n      options<span class=\"token punctuation\">.</span><span class=\"token function\">setAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://WebXml.com.cn/getMobileCodeInfo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">OMFactory</span> fac <span class=\"token operator\">=</span> <span class=\"token class-name\">OMAbstractFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getOMFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">/*\n       * 指定命名空间，参数： uri--即为wsdl文档的targetNamespace，命名空间 perfix--可不填\n       */</span>\n      <span class=\"token class-name\">OMNamespace</span> omNs <span class=\"token operator\">=</span> fac<span class=\"token punctuation\">.</span><span class=\"token function\">createOMNamespace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://WebXml.com.cn/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">/*\n       * 身份验证\n       * OMElement header = fac.createOMElement(\"AuthenticationToken\", omNs);\n       * OMElement ome_user = fac.createOMElement(\"Username\", omNs); OMElement\n       * ome_pass = fac.createOMElement(\"Password\", omNs);\n       *\n       * ome_user.setText(\"user\"); ome_pass.setText(\"pass\");\n       *\n       * header.addChild(ome_user); header.addChild(ome_pass);\n       *\n       * client.addHeader(header);\n       */</span>\n      <span class=\"token comment\">// 指定方法</span>\n      <span class=\"token class-name\">OMElement</span> method <span class=\"token operator\">=</span> fac<span class=\"token punctuation\">.</span><span class=\"token function\">createOMElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getMobileCodeInfo\"</span><span class=\"token punctuation\">,</span> omNs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 指定方法的参数</span>\n      <span class=\"token class-name\">OMElement</span> mobileCode <span class=\"token operator\">=</span> fac<span class=\"token punctuation\">.</span><span class=\"token function\">createOMElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mobileCode\"</span><span class=\"token punctuation\">,</span> omNs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      mobileCode<span class=\"token punctuation\">.</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"18265963256\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">OMElement</span> userID <span class=\"token operator\">=</span> fac<span class=\"token punctuation\">.</span><span class=\"token function\">createOMElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"userID\"</span><span class=\"token punctuation\">,</span> omNs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      userID<span class=\"token punctuation\">.</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      method<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>mobileCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      method<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>userID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      method<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 远程调用web服务</span>\n      <span class=\"token class-name\">OMElement</span> result <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">sendReceive</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre><code>注:返回的xml数据可能含有需要转义的字符,比如&amp;lt;之类的.\n可以用org.apache.commons.lang3.StringEscapeUtils.unescapeXml方法处理,(已过时),\n可以用commons-text包下的StringEscapeUtils类进行反转义处理\n</code></pre>\n<h4 id=\"2-wsdl2java方式调用\"><a href=\"#2-wsdl2java方式调用\" class=\"headerlink\" title=\"2.wsdl2java方式调用\"></a>2.wsdl2java 方式调用</h4><p>  使用 jdk 命令行下的 wsimport 命令和 wsdl 文件生成生成客户端中间代码，</p>\n<p>  注意：只能编译 soap1.1 的协议，不能编译 soap1.2 的协议的代码</p>\n<pre><code>wsimport [options] &lt;WSDL_URI&gt;\n比较常用的[options]有：\n1. -d &lt;directory&gt;\n  在指定的目录生成class文件\n2. -clientjar &lt;jarfile&gt;\n  在当前目录生成jar文件，结合-d &lt;directory&gt;可以在指定的目录生成jar文件\n3. -s &lt;directory&gt;\n  在指定的目录生成java源文件\n4. -p &lt;pkg&gt;\n  指定生成文件的包结构\n5. -keep\n  在生成class文件，或者jar包时，同时保留java源文件\n</code></pre>\n<p>例：在当前目录新建 class 文件夹和 java 文件夹，分别存放对应的 class 文件个 java 文件</p>\n<pre><code>wsimport -keep -d ./class -s ./java -p com.test.demo -verbose http://ws.webxml.com.cn/WebServices/MobileCodeWS.asmx?wsdl  \n</code></pre>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//创建一个MobileCodeWS工厂  </span>\n<span class=\"token class-name\">MobileCodeWS</span> factory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MobileCodeWS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token comment\">//根据工厂创建一个MobileCodeWSSoap对象  </span>\n<span class=\"token class-name\">MobileCodeWSSoap</span> mobileCodeWSSoap <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">getMobileCodeWSSoap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token comment\">//调用WebService提供的getMobileCodeInfo方法查询手机号码的归属地  </span>\n<span class=\"token class-name\">String</span> searchResult <span class=\"token operator\">=</span> mobileCodeWSSoap<span class=\"token punctuation\">.</span><span class=\"token function\">getMobileCodeInfo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"18265963256\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>searchResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>笔后摘要:</p>\n<p>webservice 既然是基于 http 的，那么也可使用最原始的 URLconnect 来进行访问请求处理，但是要注意对应的 soap 协议版本请求头，还需要组装符合 soap 协议 xml 文档信息等。完整的请求头应该和下例类似:</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">  请求头:\n  POST /WebServices/MobileCodeWS.asmx HTTP/1.1\n  Host: webservice.webxml.com.cn\n  Content-Type: text/xml; charset=utf-8\n  Content-Length: length\n  SOAPAction: \"http://WebXml.com.cn/getMobileCodeInfo\"\n\n消息体:\n<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">soap:</span>Envelope</span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsd</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>soap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.xmlsoap.org/soap/envelope/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">soap:</span>Body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>getMobileCodeInfo</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://WebXml.com.cn/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mobileCode</span><span class=\"token punctuation\">&gt;</span></span>18265963256<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mobileCode</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>userID</span><span class=\"token punctuation\">&gt;</span></span>string<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>userID</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>getMobileCodeInfo</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">soap:</span>Body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">soap:</span>Envelope</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","excerpt":"","more":"<!-- TOC -->\n\n<ul>\n<li><a href=\"#webservice%E4%B8%80%E7%A7%8D%E8%B7%A8%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%92%8C%E8%B7%A8%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8%E6%8A%80%E6%9C%AF\">WebService: 一种跨编程语言和跨操作系统平台的远程调用技术.</a></li>\n<li><a href=\"#webservice%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8C%85%E6%9C%89%E5%BE%88%E5%A4%9Ajava%E8%AF%AD%E8%A8%80%E6%9C%89jdk16%E5%90%8E%E5%86%85%E7%BD%AE%E7%9A%84jwsapache-cxfapache-axisapache-axis2\">WebService 的实现包有很多，Java 语言有 jdk1.6 后内置的 jws.*,Apache cxf,Apache Axis,Apache Axis2.</a><ul>\n<li><a href=\"#1%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8\">1. 远程调用</a><ul>\n<li><a href=\"#11-axis2wsdl%E5%9C%B0%E5%9D%80%E6%96%B9%E5%BC%8F%E8%B0%83%E7%94%A8\">1.1 axis2+wsdl 地址方式调用:</a></li>\n<li><a href=\"#12-axis2endpoint%E5%9C%B0%E5%9D%80%E6%96%B9%E5%BC%8F%E8%B0%83%E7%94%A8\">1.2 axis2+endpoint 地址方式调用:</a></li>\n</ul>\n</li>\n<li><a href=\"#2wsdl2java%E6%96%B9%E5%BC%8F%E8%B0%83%E7%94%A8\">2.wsdl2java 方式调用</a></li>\n</ul>\n</li>\n</ul>\n<!-- /TOC -->\n<h3 id=\"WebService-一种跨编程语言和跨操作系统平台的远程调用技术\"><a href=\"#WebService-一种跨编程语言和跨操作系统平台的远程调用技术\" class=\"headerlink\" title=\"WebService:一种跨编程语言和跨操作系统平台的远程调用技术.\"></a>WebService: 一种跨编程语言和跨操作系统平台的远程调用技术.</h3><pre><code>WebService都是基于http请求(POST请求,无GET请求)\nXML+XSD,SOAP和WSDL就是构成WebService平台的三大技术。\nXML+XSD：\n\nWebService采用HTTP协议传输数据，采用XML格式封装数据（即XML中说明调用远程服务对象的哪个方法，传递的参数是什么，\n以及服务对象的返回结果是什么）。XML是WebService平台中表示数据的格式。\n\nSOAP(Simple Object Access Protocol)：简单对象访问协议\n\nSOAP提供了标准的RPC方法来调用Web Service。SOAP协议 = HTTP协议 + XML数据格式SOAP协议定义了SOAP消息的格式，\nSOAP协议是基于HTTP协议的，SOAP也是基于XML和XSD的，XML是SOAP的数据编码方式。\nsoap协议分1.1和1.2版本:\nsoap1.1:\n  请求方式:post\n  content-type:text/xml;charset=utf-8\nsoap1.2:\n  请求方式:post\n  content-type:application/soap+xml\n\nWSDL(Web Services Description Language):基于XML的语言，用于描述Web Service及其函数、参数和返回值。\n\n它是WebService客户端和服务器端都能理解的标准格式。WSDL文件保存在Web服务器上，通过一个url地址就可以访问到它。\n客户端要调用一个WebService服务之前，要知道该服务的WSDL文件的地址。\n\n注:wsdl文件阅读技巧:(从下往上读)\n  找到wsdl:service节点-&gt;查看下面的wsdl:port节点-&gt;查看其binding属性-&gt;找到与bingding名称相同的wsdl:binding节点\n  -&gt;查看节点下的wsdl:operation节点(对应的调用method名称)-&gt;wsdl:input方法输入参数节点-&gt;对应message属性值\n  -&gt;找到同名的wsdl:message节点-&gt;wsdl:part对应的参数名称和类型.\n\n  wsdl:output节点代表服务返回的数据.阅读方式和wsdl:input一致\n</code></pre>\n<p>WebService 优点：跨平台跨语言。服务方和调用方不用关心各自的平台和语言</p>\n<p>WebService 缺点：在使用方式上，RPC 和 soap 的使用在减少，Restful 架构占到了主导地位。在数据格式上，XML 格式繁琐，使用在减少，json 等轻量级格式的使用在增多.. 另外性能上略低 (也有专门对 xml 解析优化的 cpu)</p>\n<h3 id=\"WebService的实现包有很多-Java语言有jdk1-6后内置的jws-Apache-cxf-Apache-Axis-Apache-Axis2\"><a href=\"#WebService的实现包有很多-Java语言有jdk1-6后内置的jws-Apache-cxf-Apache-Axis-Apache-Axis2\" class=\"headerlink\" title=\"WebService的实现包有很多,Java语言有jdk1.6后内置的jws.*,Apache cxf,Apache Axis,Apache Axis2.\"></a>WebService 的实现包有很多，Java 语言有 jdk1.6 后内置的 jws.*,Apache cxf,Apache Axis,Apache Axis2.</h3><p>本文采用 axis2 包，发布 webservice 服务可以采用 jdk 的 @WebService 注解实现或者 cxf/axis/axis2 来进行实现，网上教程很多，本文不涉及到这块。主要是发现在调用的时候会有一些坑，所以在此记录</p>\n<p>WebService 客户端调用主要有 2 类方式，一种是通过 http 远程调用，一种是通过 wsdl2java 产生 Java 代码调用</p>\n<h4 id=\"1-远程调用\"><a href=\"#1-远程调用\" class=\"headerlink\" title=\"1.远程调用\"></a>1. 远程调用</h4><p>  引入 axisjar 包:<br>  </p><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token comment\">&lt;!-- Axis2 --&gt;</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.apache.axis2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>axis2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.6.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.apache.ws.commons.axiom<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>axiom<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.2.20<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>type</span><span class=\"token punctuation\">&gt;</span></span>pom<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>type</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.apache.ws.commons.axiom<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>axiom-api<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.2.20<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.apache.ws.commons.axiom<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>axiom-impl<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.2.20<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>wsdl4j<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>wsdl4j<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.6.3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.apache.ws.xmlschema<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>xmlschema-core<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>2.2.3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.apache.neethi<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>neethi<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token comment\">&lt;!--&lt;version&gt;2.0.4&lt;/version&gt; --&gt;</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>3.1.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.apache.axis2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>axis2-transport-local<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.7.7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.apache.axis2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>axis2-transport-http<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.7.7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>javax.mail<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>javax.mail-api<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.6.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!-- Axis2 End --&gt;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p></p>\n<h5 id=\"1-1-axis2-wsdl地址方式调用\"><a href=\"#1-1-axis2-wsdl地址方式调用\" class=\"headerlink\" title=\"1.1 axis2+wsdl地址方式调用:\"></a>1.1 axis2+wsdl 地址方式调用:</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">String</span> soapBindingAddress <span class=\"token operator\">=</span> <span class=\"token string\">\"http://ws.webxml.com.cn/WebServices/MobileCodeWS.asmx?wsdl\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">EndpointReference</span> endpointReference <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EndpointReference</span><span class=\"token punctuation\">(</span>soapBindingAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">//创建一个OMFactory</span>\n      <span class=\"token class-name\">OMFactory</span> factory <span class=\"token operator\">=</span> <span class=\"token class-name\">OMAbstractFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getOMFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">//指定命名空间</span>\n      <span class=\"token class-name\">OMNamespace</span> namespace <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">createOMNamespace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://WebXml.com.cn/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"web\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">//创建method对象，方法名 为getMobileCodeInfo</span>\n      <span class=\"token class-name\">OMElement</span> method <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">createOMElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getMobileCodeInfo\"</span><span class=\"token punctuation\">,</span> namespace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">OMElement</span> mobileCode <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">createOMElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mobileCode\"</span><span class=\"token punctuation\">,</span> namespace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//方法参数</span>\n      <span class=\"token class-name\">OMElement</span> userID <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">createOMElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"userID\"</span><span class=\"token punctuation\">,</span> namespace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//方法参数</span>\n      <span class=\"token comment\">//封装参数</span>\n      mobileCode<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">.</span><span class=\"token function\">createOMText</span><span class=\"token punctuation\">(</span>mobileCode<span class=\"token punctuation\">,</span> <span class=\"token string\">\"18265963256\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设定参数的值</span>\n      method<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>mobileCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      userID<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">.</span><span class=\"token function\">createOMText</span><span class=\"token punctuation\">(</span>userID<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设定参数的值</span>\n      method<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>userID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">//请求参数设置</span>\n      <span class=\"token class-name\">ServiceClient</span> sender <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServiceClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">Options</span> options <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Options</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 设置soap1.2协议</span>\n      options<span class=\"token punctuation\">.</span><span class=\"token function\">setSoapVersionURI</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SOAP12Constants</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SOAP_ENVELOPE_NAMESPACE_URI</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      options<span class=\"token punctuation\">.</span><span class=\"token function\">setAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://WebXml.com.cn/getMobileCodeInfo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      options<span class=\"token punctuation\">.</span><span class=\"token function\">setTo</span><span class=\"token punctuation\">(</span>endpointReference<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      sender<span class=\"token punctuation\">.</span><span class=\"token function\">setOptions</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">OMElement</span> result <span class=\"token operator\">=</span> sender<span class=\"token punctuation\">.</span><span class=\"token function\">sendReceive</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">getFirstElement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"1-2-axis2-endpoint地址方式调用\"><a href=\"#1-2-axis2-endpoint地址方式调用\" class=\"headerlink\" title=\"1.2 axis2+endpoint地址方式调用:\"></a>1.2 axis2+endpoint 地址方式调用:</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">ServiceClient</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServiceClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 创建服务地址WebService的URL,注意不是WSDL的URL</span>\n      <span class=\"token class-name\">String</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://ws.webxml.com.cn/WebServices/MobileCodeWS.asmx\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">EndpointReference</span> targetEPR <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EndpointReference</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">Options</span> options <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 设置soap1.2协议</span>\n      options<span class=\"token punctuation\">.</span><span class=\"token function\">setSoapVersionURI</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SOAP12Constants</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SOAP_ENVELOPE_NAMESPACE_URI</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      options<span class=\"token punctuation\">.</span><span class=\"token function\">setTo</span><span class=\"token punctuation\">(</span>targetEPR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 确定调用方法（wsdl 命名空间地址 (wsdl文档中的targetNamespace) 和 方法名称 的组合）</span>\n      options<span class=\"token punctuation\">.</span><span class=\"token function\">setAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://WebXml.com.cn/getMobileCodeInfo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">OMFactory</span> fac <span class=\"token operator\">=</span> <span class=\"token class-name\">OMAbstractFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getOMFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">/*\n       * 指定命名空间，参数： uri--即为wsdl文档的targetNamespace，命名空间 perfix--可不填\n       */</span>\n      <span class=\"token class-name\">OMNamespace</span> omNs <span class=\"token operator\">=</span> fac<span class=\"token punctuation\">.</span><span class=\"token function\">createOMNamespace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://WebXml.com.cn/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">/*\n       * 身份验证\n       * OMElement header = fac.createOMElement(\"AuthenticationToken\", omNs);\n       * OMElement ome_user = fac.createOMElement(\"Username\", omNs); OMElement\n       * ome_pass = fac.createOMElement(\"Password\", omNs);\n       *\n       * ome_user.setText(\"user\"); ome_pass.setText(\"pass\");\n       *\n       * header.addChild(ome_user); header.addChild(ome_pass);\n       *\n       * client.addHeader(header);\n       */</span>\n      <span class=\"token comment\">// 指定方法</span>\n      <span class=\"token class-name\">OMElement</span> method <span class=\"token operator\">=</span> fac<span class=\"token punctuation\">.</span><span class=\"token function\">createOMElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getMobileCodeInfo\"</span><span class=\"token punctuation\">,</span> omNs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 指定方法的参数</span>\n      <span class=\"token class-name\">OMElement</span> mobileCode <span class=\"token operator\">=</span> fac<span class=\"token punctuation\">.</span><span class=\"token function\">createOMElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mobileCode\"</span><span class=\"token punctuation\">,</span> omNs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      mobileCode<span class=\"token punctuation\">.</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"18265963256\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">OMElement</span> userID <span class=\"token operator\">=</span> fac<span class=\"token punctuation\">.</span><span class=\"token function\">createOMElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"userID\"</span><span class=\"token punctuation\">,</span> omNs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      userID<span class=\"token punctuation\">.</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      method<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>mobileCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      method<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>userID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      method<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 远程调用web服务</span>\n      <span class=\"token class-name\">OMElement</span> result <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">sendReceive</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre><code>注:返回的xml数据可能含有需要转义的字符,比如&amp;lt;之类的.\n可以用org.apache.commons.lang3.StringEscapeUtils.unescapeXml方法处理,(已过时),\n可以用commons-text包下的StringEscapeUtils类进行反转义处理\n</code></pre>\n<h4 id=\"2-wsdl2java方式调用\"><a href=\"#2-wsdl2java方式调用\" class=\"headerlink\" title=\"2.wsdl2java方式调用\"></a>2.wsdl2java 方式调用</h4><p>  使用 jdk 命令行下的 wsimport 命令和 wsdl 文件生成生成客户端中间代码，</p>\n<p>  注意：只能编译 soap1.1 的协议，不能编译 soap1.2 的协议的代码</p>\n<pre><code>wsimport [options] &lt;WSDL_URI&gt;\n比较常用的[options]有：\n1. -d &lt;directory&gt;\n  在指定的目录生成class文件\n2. -clientjar &lt;jarfile&gt;\n  在当前目录生成jar文件，结合-d &lt;directory&gt;可以在指定的目录生成jar文件\n3. -s &lt;directory&gt;\n  在指定的目录生成java源文件\n4. -p &lt;pkg&gt;\n  指定生成文件的包结构\n5. -keep\n  在生成class文件，或者jar包时，同时保留java源文件\n</code></pre>\n<p>例：在当前目录新建 class 文件夹和 java 文件夹，分别存放对应的 class 文件个 java 文件</p>\n<pre><code>wsimport -keep -d ./class -s ./java -p com.test.demo -verbose http://ws.webxml.com.cn/WebServices/MobileCodeWS.asmx?wsdl  \n</code></pre>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//创建一个MobileCodeWS工厂  </span>\n<span class=\"token class-name\">MobileCodeWS</span> factory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MobileCodeWS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token comment\">//根据工厂创建一个MobileCodeWSSoap对象  </span>\n<span class=\"token class-name\">MobileCodeWSSoap</span> mobileCodeWSSoap <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">getMobileCodeWSSoap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token comment\">//调用WebService提供的getMobileCodeInfo方法查询手机号码的归属地  </span>\n<span class=\"token class-name\">String</span> searchResult <span class=\"token operator\">=</span> mobileCodeWSSoap<span class=\"token punctuation\">.</span><span class=\"token function\">getMobileCodeInfo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"18265963256\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>searchResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>笔后摘要:</p>\n<p>webservice 既然是基于 http 的，那么也可使用最原始的 URLconnect 来进行访问请求处理，但是要注意对应的 soap 协议版本请求头，还需要组装符合 soap 协议 xml 文档信息等。完整的请求头应该和下例类似:</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">  请求头:\n  POST /WebServices/MobileCodeWS.asmx HTTP/1.1\n  Host: webservice.webxml.com.cn\n  Content-Type: text/xml; charset=utf-8\n  Content-Length: length\n  SOAPAction: \"http://WebXml.com.cn/getMobileCodeInfo\"\n\n消息体:\n<span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">soap:</span>Envelope</span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsd</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>soap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.xmlsoap.org/soap/envelope/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">soap:</span>Body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>getMobileCodeInfo</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://WebXml.com.cn/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mobileCode</span><span class=\"token punctuation\">&gt;</span></span>18265963256<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mobileCode</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>userID</span><span class=\"token punctuation\">&gt;</span></span>string<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>userID</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>getMobileCodeInfo</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">soap:</span>Body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">soap:</span>Envelope</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:16:28 GMT+0800 (China Standard Time)","title":"axis2 调用 webservice","path":"2018/12/11/axis2调用webservice/","eyeCatchImage":null,"excerpt":"axis2调用webservice","date":{"_isAMomentObject":true,"_i":"2018-12-11T01:36:33.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-12-11T01:36:33.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["java","axis2","WebService"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":1121},{"title":"atom 配置 vue 前端开发环境","date":"2018-06-25T01:48:27.000Z","description":"使用atom配置前端vue开发环境","_content":"\n1.安装好atom后,安装常用的几个插件\n\n    prettier-atom : 格式化代码插件\n\n    atom-axios : vue-axios提示插件\n\n    autoclose-html : 自定补全闭合html标签插件\n\n    file-icons : 文件图标,便利区分不同类型的文件\n\n    autocomplete-paths : 自动提示补全文件路径插件\n\n    language-vue : atom支持vue的插件\n\n    language-vue-component : 高亮显示vue组件插件\n\n    vue2-autocomplete : vue2.0+提示插件\n\n    linter-eslint : eslint规则校验插件\n\n    px2rem-plus : px转rem插件\n\n    minimap : 在编辑器右边出现预览源代码(类似sublime text3右侧预览导航效果)的插件\n\n    下面是支持markdown的插件:\n\n    markdown-toc : 对markdown文档生成目录的插件\n\n    markdown-table-editor : markdown文档表格编辑插件\n\n2.安装好对应的插件后,大部分情况能够使用,但是vue项目需要支持eslint校验的话,需要对linter-eslint设置下面的 Lint-HTML-Files进行勾选\n\n![](/images/eslint.png)\n\n3.默认的prettier格式化的规则是不符合eslint的,比如会对每行尾部增加分号,单引号变变为双引号,需要修改其配置为下:\n\n![](/images/prettier.png)\n","source":"_posts/atom配置vue前端开发环境.md","raw":"---\ntitle: atom配置vue前端开发环境\ndate: 2018-06-25 09:48:27\ndescription: 使用atom配置前端vue开发环境\ntags:\n  - atom\n---\n\n1.安装好atom后,安装常用的几个插件\n\n    prettier-atom : 格式化代码插件\n\n    atom-axios : vue-axios提示插件\n\n    autoclose-html : 自定补全闭合html标签插件\n\n    file-icons : 文件图标,便利区分不同类型的文件\n\n    autocomplete-paths : 自动提示补全文件路径插件\n\n    language-vue : atom支持vue的插件\n\n    language-vue-component : 高亮显示vue组件插件\n\n    vue2-autocomplete : vue2.0+提示插件\n\n    linter-eslint : eslint规则校验插件\n\n    px2rem-plus : px转rem插件\n\n    minimap : 在编辑器右边出现预览源代码(类似sublime text3右侧预览导航效果)的插件\n\n    下面是支持markdown的插件:\n\n    markdown-toc : 对markdown文档生成目录的插件\n\n    markdown-table-editor : markdown文档表格编辑插件\n\n2.安装好对应的插件后,大部分情况能够使用,但是vue项目需要支持eslint校验的话,需要对linter-eslint设置下面的 Lint-HTML-Files进行勾选\n\n![](/images/eslint.png)\n\n3.默认的prettier格式化的规则是不符合eslint的,比如会对每行尾部增加分号,单引号变变为双引号,需要修改其配置为下:\n\n![](/images/prettier.png)\n","slug":"atom配置vue前端开发环境","published":1,"updated":"2025-04-22T08:10:37.375Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745ip000pd8gkhda9d976","content":"<p>1. 安装好 atom 后，安装常用的几个插件</p>\n<pre><code>prettier-atom : 格式化代码插件\n\natom-axios : vue-axios提示插件\n\nautoclose-html : 自定补全闭合html标签插件\n\nfile-icons : 文件图标,便利区分不同类型的文件\n\nautocomplete-paths : 自动提示补全文件路径插件\n\nlanguage-vue : atom支持vue的插件\n\nlanguage-vue-component : 高亮显示vue组件插件\n\nvue2-autocomplete : vue2.0+提示插件\n\nlinter-eslint : eslint规则校验插件\n\npx2rem-plus : px转rem插件\n\nminimap : 在编辑器右边出现预览源代码(类似sublime text3右侧预览导航效果)的插件\n\n下面是支持markdown的插件:\n\nmarkdown-toc : 对markdown文档生成目录的插件\n\nmarkdown-table-editor : markdown文档表格编辑插件\n</code></pre>\n<p>2. 安装好对应的插件后，大部分情况能够使用，但是 vue 项目需要支持 eslint 校验的话，需要对 linter-eslint 设置下面的 Lint-HTML-Files 进行勾选</p>\n<p><img src=\"/images/eslint.png\"></p>\n<p>3. 默认的 prettier 格式化的规则是不符合 eslint 的，比如会对每行尾部增加分号，单引号变变为双引号，需要修改其配置为下:</p>\n<p><img src=\"/images/prettier.png\"></p>\n","excerpt":"","more":"<p>1. 安装好 atom 后，安装常用的几个插件</p>\n<pre><code>prettier-atom : 格式化代码插件\n\natom-axios : vue-axios提示插件\n\nautoclose-html : 自定补全闭合html标签插件\n\nfile-icons : 文件图标,便利区分不同类型的文件\n\nautocomplete-paths : 自动提示补全文件路径插件\n\nlanguage-vue : atom支持vue的插件\n\nlanguage-vue-component : 高亮显示vue组件插件\n\nvue2-autocomplete : vue2.0+提示插件\n\nlinter-eslint : eslint规则校验插件\n\npx2rem-plus : px转rem插件\n\nminimap : 在编辑器右边出现预览源代码(类似sublime text3右侧预览导航效果)的插件\n\n下面是支持markdown的插件:\n\nmarkdown-toc : 对markdown文档生成目录的插件\n\nmarkdown-table-editor : markdown文档表格编辑插件\n</code></pre>\n<p>2. 安装好对应的插件后，大部分情况能够使用，但是 vue 项目需要支持 eslint 校验的话，需要对 linter-eslint 设置下面的 Lint-HTML-Files 进行勾选</p>\n<p><img src=\"/images/eslint.png\"></p>\n<p>3. 默认的 prettier 格式化的规则是不符合 eslint 的，比如会对每行尾部增加分号，单引号变变为双引号，需要修改其配置为下:</p>\n<p><img src=\"/images/prettier.png\"></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/eslint.png","popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:10:37 GMT+0800 (China Standard Time)","title":"atom 配置 vue 前端开发环境","path":"2018/06/25/atom配置vue前端开发环境/","eyeCatchImage":"/images/eslint.png","excerpt":"使用atom配置前端vue开发环境","date":{"_isAMomentObject":true,"_i":"2018-06-25T01:48:27.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-06-25T01:48:27.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["atom"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":280},{"title":"debian 系系统编译 CuraEngine 引擎","date":"2018-09-05T08:13:22.000Z","description":"CuraEngine是一个功能强大、快速、强劲的3D模型切片引擎.Cura就是采用了CuraEngine引擎的.","_content":"\n      摘要:CuraEngine是一个功能强大、快速、强劲的3D模型切片引擎.Cura就是采用了CuraEngine引擎的.\n      本文的操作环境为deepin 15.7,编译CuraEngine的版本为2.4\n\n1.安装cmake\n\n    sudo apt install cmake\n\n2.安装Protobuf >= 3.0.0 \n  \n  2.1 安装libtool\n\n    sudo apt install libtool\n  \n  2.2 安装autoconf\n  \n    sudo apt install autoconf\n  2.3 clone代码,--depth=1.clone最近一次提交的,可以减少clone时间\n  \n    git clone https://github.com/protocolbuffers/protobuf.git --depth=1\n\n  2.4 进入到protobuf目录.执行\n  \n    ./autogen.sh\n\n  2.5 \n  \n    ./configure\n    \n  2.6 \n  \n    make \n\n  2.7 \n  \n    sudo make install\n\n3.安装libArcus\n\n  3.1 安装python3-dev\n      \n      sudo apt install python3-dev\n  \n  3.2 安装python3-sip-dev\n  \n    sudo apt install python3-sip-dev\n\n  3.3 安装libprotobuf-dev\n  \n    sudo apt install libprotobuf-dev\n\n  3.4 clone代码\n  \n    git clone https://github.com/Ultimaker/libArcus.git --depth=1\n\n  3.5 进入到libArcus目录,执行\n\n    mkdir build && cd build\n    cmake ..\n\n  3.6 \n  \n    make\n\n  3.7 \n  \n    sudo make install\n\n4.编译CuraEngine\n\n  4.1 clone代码.此处编译2.4版本,-b指定版本\n  \n    git clone https://github.com/Ultimaker/CuraEngine.git -b 2.4 --depth=1\n    \n  4.2 \n  \n    mkdir build && cd build\n\n  4.3 \n  \n    cmake ..\n\n\n  4.4 \n  \n    make","source":"_posts/debian系系统编译CuraEngine引擎.md","raw":"---\ntitle: debian系系统编译CuraEngine引擎\ndate: 2018-09-05 16:13:22\ndescription: CuraEngine是一个功能强大、快速、强劲的3D模型切片引擎.Cura就是采用了CuraEngine引擎的.\ntags: linux\n---\n\n      摘要:CuraEngine是一个功能强大、快速、强劲的3D模型切片引擎.Cura就是采用了CuraEngine引擎的.\n      本文的操作环境为deepin 15.7,编译CuraEngine的版本为2.4\n\n1.安装cmake\n\n    sudo apt install cmake\n\n2.安装Protobuf >= 3.0.0 \n  \n  2.1 安装libtool\n\n    sudo apt install libtool\n  \n  2.2 安装autoconf\n  \n    sudo apt install autoconf\n  2.3 clone代码,--depth=1.clone最近一次提交的,可以减少clone时间\n  \n    git clone https://github.com/protocolbuffers/protobuf.git --depth=1\n\n  2.4 进入到protobuf目录.执行\n  \n    ./autogen.sh\n\n  2.5 \n  \n    ./configure\n    \n  2.6 \n  \n    make \n\n  2.7 \n  \n    sudo make install\n\n3.安装libArcus\n\n  3.1 安装python3-dev\n      \n      sudo apt install python3-dev\n  \n  3.2 安装python3-sip-dev\n  \n    sudo apt install python3-sip-dev\n\n  3.3 安装libprotobuf-dev\n  \n    sudo apt install libprotobuf-dev\n\n  3.4 clone代码\n  \n    git clone https://github.com/Ultimaker/libArcus.git --depth=1\n\n  3.5 进入到libArcus目录,执行\n\n    mkdir build && cd build\n    cmake ..\n\n  3.6 \n  \n    make\n\n  3.7 \n  \n    sudo make install\n\n4.编译CuraEngine\n\n  4.1 clone代码.此处编译2.4版本,-b指定版本\n  \n    git clone https://github.com/Ultimaker/CuraEngine.git -b 2.4 --depth=1\n    \n  4.2 \n  \n    mkdir build && cd build\n\n  4.3 \n  \n    cmake ..\n\n\n  4.4 \n  \n    make","slug":"debian系系统编译CuraEngine引擎","published":1,"updated":"2025-04-22T08:16:36.558Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745iq000rd8gkdko5bb2j","content":"<pre><code>  摘要:CuraEngine是一个功能强大、快速、强劲的3D模型切片引擎.Cura就是采用了CuraEngine引擎的.\n  本文的操作环境为deepin 15.7,编译CuraEngine的版本为2.4\n</code></pre>\n<p>1. 安装 cmake</p>\n<pre><code>sudo apt install cmake\n</code></pre>\n<p>2. 安装 Protobuf &gt;= 3.0.0 </p>\n<p>  2.1 安装 libtool</p>\n<pre><code>sudo apt install libtool\n</code></pre>\n<p>  2.2 安装 autoconf</p>\n<pre><code>sudo apt install autoconf\n</code></pre>\n<p>  2.3 clone 代码，–depth=1.clone 最近一次提交的，可以减少 clone 时间</p>\n<pre><code>git clone https://github.com/protocolbuffers/protobuf.git --depth=1\n</code></pre>\n<p>  2.4 进入到 protobuf 目录。执行</p>\n<pre><code>./autogen.sh\n</code></pre>\n<p>  2.5 </p>\n<pre><code>./configure\n</code></pre>\n<p>  2.6 </p>\n<pre><code>make \n</code></pre>\n<p>  2.7 </p>\n<pre><code>sudo make install\n</code></pre>\n<p>3. 安装 libArcus</p>\n<p>  3.1 安装 python3-dev</p>\n<pre><code>  sudo apt install python3-dev\n</code></pre>\n<p>  3.2 安装 python3-sip-dev</p>\n<pre><code>sudo apt install python3-sip-dev\n</code></pre>\n<p>  3.3 安装 libprotobuf-dev</p>\n<pre><code>sudo apt install libprotobuf-dev\n</code></pre>\n<p>  3.4 clone 代码</p>\n<pre><code>git clone https://github.com/Ultimaker/libArcus.git --depth=1\n</code></pre>\n<p>  3.5 进入到 libArcus 目录，执行</p>\n<pre><code>mkdir build &amp;&amp; cd build\ncmake ..\n</code></pre>\n<p>  3.6 </p>\n<pre><code>make\n</code></pre>\n<p>  3.7 </p>\n<pre><code>sudo make install\n</code></pre>\n<p>4. 编译 CuraEngine</p>\n<p>  4.1 clone 代码。此处编译 2.4 版本，-b 指定版本</p>\n<pre><code>git clone https://github.com/Ultimaker/CuraEngine.git -b 2.4 --depth=1\n</code></pre>\n<p>  4.2 </p>\n<pre><code>mkdir build &amp;&amp; cd build\n</code></pre>\n<p>  4.3 </p>\n<pre><code>cmake ..\n</code></pre>\n<p>  4.4 </p>\n<pre><code>make\n</code></pre>\n","excerpt":"","more":"<pre><code>  摘要:CuraEngine是一个功能强大、快速、强劲的3D模型切片引擎.Cura就是采用了CuraEngine引擎的.\n  本文的操作环境为deepin 15.7,编译CuraEngine的版本为2.4\n</code></pre>\n<p>1. 安装 cmake</p>\n<pre><code>sudo apt install cmake\n</code></pre>\n<p>2. 安装 Protobuf &gt;= 3.0.0 </p>\n<p>  2.1 安装 libtool</p>\n<pre><code>sudo apt install libtool\n</code></pre>\n<p>  2.2 安装 autoconf</p>\n<pre><code>sudo apt install autoconf\n</code></pre>\n<p>  2.3 clone 代码，–depth=1.clone 最近一次提交的，可以减少 clone 时间</p>\n<pre><code>git clone https://github.com/protocolbuffers/protobuf.git --depth=1\n</code></pre>\n<p>  2.4 进入到 protobuf 目录。执行</p>\n<pre><code>./autogen.sh\n</code></pre>\n<p>  2.5 </p>\n<pre><code>./configure\n</code></pre>\n<p>  2.6 </p>\n<pre><code>make \n</code></pre>\n<p>  2.7 </p>\n<pre><code>sudo make install\n</code></pre>\n<p>3. 安装 libArcus</p>\n<p>  3.1 安装 python3-dev</p>\n<pre><code>  sudo apt install python3-dev\n</code></pre>\n<p>  3.2 安装 python3-sip-dev</p>\n<pre><code>sudo apt install python3-sip-dev\n</code></pre>\n<p>  3.3 安装 libprotobuf-dev</p>\n<pre><code>sudo apt install libprotobuf-dev\n</code></pre>\n<p>  3.4 clone 代码</p>\n<pre><code>git clone https://github.com/Ultimaker/libArcus.git --depth=1\n</code></pre>\n<p>  3.5 进入到 libArcus 目录，执行</p>\n<pre><code>mkdir build &amp;&amp; cd build\ncmake ..\n</code></pre>\n<p>  3.6 </p>\n<pre><code>make\n</code></pre>\n<p>  3.7 </p>\n<pre><code>sudo make install\n</code></pre>\n<p>4. 编译 CuraEngine</p>\n<p>  4.1 clone 代码。此处编译 2.4 版本，-b 指定版本</p>\n<pre><code>git clone https://github.com/Ultimaker/CuraEngine.git -b 2.4 --depth=1\n</code></pre>\n<p>  4.2 </p>\n<pre><code>mkdir build &amp;&amp; cd build\n</code></pre>\n<p>  4.3 </p>\n<pre><code>cmake ..\n</code></pre>\n<p>  4.4 </p>\n<pre><code>make\n</code></pre>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:16:36 GMT+0800 (China Standard Time)","title":"debian 系系统编译 CuraEngine 引擎","path":"2018/09/05/debian系系统编译CuraEngine引擎/","eyeCatchImage":null,"excerpt":"CuraEngine是一个功能强大、快速、强劲的3D模型切片引擎.Cura就是采用了CuraEngine引擎的.","date":{"_isAMomentObject":true,"_i":"2018-09-05T08:13:22.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-09-05T08:13:22.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["linux"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":233},{"title":"deepin linux 下初识 docker","date":"2019-05-29T02:27:29.000Z","description":"deepin linux 安装最新版 docker","_content":"\n### deepin linux 安装最新版 docker\n\n可以参考官放 wiki 文档进行安装,地址如下:\n\nhttps://wiki.deepin.org/wiki/Docker#.E5.9C.A8_Deepin_.E4.B8.AD.E5.AE.89.E8.A3.85_Docker_.E6.9C.80.E6.96.B0.E7.89.88.E7.9A.84.E6.96.B9.E6.B3.95\n\n但官网打开速度比较慢,另外关于最后一项禁止开启自启官方说的方式是无效的,笔者亲试至少在(deepin 15.10.1 基于 unstable 升级上来的)是无效的.所以将详情步骤记录如下:\n\n    注:执行apt命令之前,最好先执行一次更新仓库操作sudo apt update\n\n1.如果以前安装过老版本，要确保先卸载以前版本.\n\n`sudo apt remove docker.io docker-engine`\n\n2.安装密钥管理与下载相关的工具\n\n// 密钥管理（add-apt-repository ca-certificates 等）与下载（curl 等）相关的工具\n\n`sudo apt-get install apt-transport-https ca-certificates curl python-software-properties software-properties-common`\n\n3.下载并安装密钥\n\n`curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -`\n\n执行成功后返回 OK 即可.如果不成功的话,可能是网络问题,我这儿是处于翻墙状态,所以是能成功的.不能成功的话,可以按照官方 wiki 上说的使用国内镜像源`curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/debian/gpg | sudo apt-key add -`\n\n4.查看密钥是否安装成功\n\n`sudo apt-get fingerprint 0EBFCD88`\n\n如果成功会提示\n\n`pub 4096R/0EBFCD88 2017-02-22 Key fingerprint = 9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88`\n`uid Docker Release (CE deb) <docker@docker.com>`\n`sub 4096R/F273FCD8 2017-02-22`\n\n5.在 source.list 中添加 docker-ce 软件源\n\n    在此需要注意当前系统版本,执行 cat /etc/debian_version查看当前系统是基于debian的哪个版本.debian版本号和系统代号如下:\n\n| 系统代号 | 版本号 |\n| -------- | ------ |\n| squeeze  | 6.x    |\n| wheezy   | 7.x    |\n| jessie   | 8.x    |\n| stretch  | 9.x    |\n\ndeepin 15.10.x 是基于 debian9.0 的,所以加入源如下:\n\nsudo vim /etc/apt/sources.list\n\n`deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/debian stretch stable`\n\n6.更新仓库\n\n`sudo apt update`\n\n7.安装 docker-ce\n\n`sudo apt install docker-ce`\n\n    注:这一步网络不好可能会导致失败,多试几次总会成功的.\n\n8.启动 docker\n\n`sudo systemctl start docker` 或者\n`service docker start`\n\n9.查看安装的版本信息\n\n`docker version`\n\n10.验证 docker 是否被正确安装并且能够正常使用\n\n`sudo docker run hello-world`\n\n如果能够正常下载，并能够正常执行，则说明 docker 正常安装\n\n11.让普通用户也能运行 docker\n\n    默认情况下，普通用户运行 docker 会有权限问题，每次运行都得加 sudo，很麻烦。把你的账号加到 docker 用户组后就不用加 sudo 了：\n\n`sudo usermod -aG docker test` // test 是用户名,替换为自己的,执行后注销登录\n\n12.docker service 默认是开机自启的,强迫症取消开机自启的\n\n    这一点,官方说的安装chkconfig来管理\n\n安装 chkconfig\n\n`sudo apt install chkconfig`\n\n移除自启\n\n`sudo chkconfig --del docker`\n\n    但是试了,重启无效无效.需要通过systemctl命令来禁止\n\n`sudo systemctl disable docker`\n\n### docker 使用初识\n\n#### docker 入门命令\n\ndocker 安装后,默认是没有任何镜像的,如果安装后执行了 docker run hello-world 的话,是有一个 hello-world 的镜像的.\n\n`docker images` // 查看本地的镜像\n\n可以通过 pull 命令获取相关镜像\n\n`docker search nginx` // 在 docker.io 上搜索 nginx 相关的镜像\n\n`docker pull nginx:latest` // latest 代表取最新版本,要获取其他版本 docker pull nginx:xxxx\n\n`docker run -itd --name nginx1.0 nginx` // -d: 后台启动容器;-i: 以交互模式运行容器，通常与 -t 同时使用;-t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用; --name：容器的别名，默认为随机的,这儿为 nginx1.0\n\n    第一次使用run运行指定别名后,以后可通过docker start+ 别名的方式启动\n\n`docker ps` // 查看正在运行的容器\n\n`docker ps -a` // 查看所有容器\n\n`docker ps -l` // 查看最近一次运行的容器\n\n`docker exec -it nginx1.0 bash` // 进入 nginx1.0 容器的命令行\n\n`docker start nginx1.0` // 启动 nginx1.0 容器\n\n`docker stop nginx1.0` // 停止 nginx1.0 容器\n\n`docker rm nginx1.0` // 删除 nginx1.0 容器\n\n#### docker 网络\n\nlinux 使用 namespace 来进行资源的隔离 ，docker 的隔离性\n\n1.docker 的网路类型分为：\n\nBridge 模式：桥接（默认的模式）\n\nhost 模式：容器将不会获得独立的 network namespace，将和主机公用一个；即在 docker 中使用网络和主机上一样的；\n\nNone：不与外界任何东西进行通讯\n\n2.采用 Bridge 的时候需要和主机通讯，就需要使用端口映射\n\ndocker run -d --name nginx1.0 -p 8080:80 nginx # 主机的 8080 端口映射到容器中的 80 端口\n\n    多个端口映射可以跟多个-p,比如:-p 8080:80 -p 6379:6379\n\n#### docker 镜像备份和导入镜像\n\n`docker save -o /home/xxx/images/nginx.tar nginx1.0` // 将 nginx1.0 镜像备份到/home/xxx/images/目录下\n\n`docker load --input /home/xxx/images/nginx.tar` // 导入镜像\n\n#### docker挂载物理机本地目录\n\ndocker可以支持把一个宿主机上的目录挂载到镜像里。\n\n`docker run -itd -v /home/bz/Downloads:/home/Downloads nginx1.0` // 通过-v参数，冒号前为宿主机目录，必须为绝对路径，冒号后为镜像内挂载的路径\n\n默认挂载的路径权限为读写。如果指定为只读可以用：ro\n\n`docker run -itd -v /home/bz/Downloads:/home/Downloads:ro nginx1.0`","source":"_posts/deepin-linux下初识docker.md","raw":"---\ntitle: deepin linux下初识docker\ndate: 2019-05-29 10:27:29\ndescription: deepin linux 安装最新版 docker\ntags:\n  - linux\n  - docker\n---\n\n### deepin linux 安装最新版 docker\n\n可以参考官放 wiki 文档进行安装,地址如下:\n\nhttps://wiki.deepin.org/wiki/Docker#.E5.9C.A8_Deepin_.E4.B8.AD.E5.AE.89.E8.A3.85_Docker_.E6.9C.80.E6.96.B0.E7.89.88.E7.9A.84.E6.96.B9.E6.B3.95\n\n但官网打开速度比较慢,另外关于最后一项禁止开启自启官方说的方式是无效的,笔者亲试至少在(deepin 15.10.1 基于 unstable 升级上来的)是无效的.所以将详情步骤记录如下:\n\n    注:执行apt命令之前,最好先执行一次更新仓库操作sudo apt update\n\n1.如果以前安装过老版本，要确保先卸载以前版本.\n\n`sudo apt remove docker.io docker-engine`\n\n2.安装密钥管理与下载相关的工具\n\n// 密钥管理（add-apt-repository ca-certificates 等）与下载（curl 等）相关的工具\n\n`sudo apt-get install apt-transport-https ca-certificates curl python-software-properties software-properties-common`\n\n3.下载并安装密钥\n\n`curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -`\n\n执行成功后返回 OK 即可.如果不成功的话,可能是网络问题,我这儿是处于翻墙状态,所以是能成功的.不能成功的话,可以按照官方 wiki 上说的使用国内镜像源`curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/debian/gpg | sudo apt-key add -`\n\n4.查看密钥是否安装成功\n\n`sudo apt-get fingerprint 0EBFCD88`\n\n如果成功会提示\n\n`pub 4096R/0EBFCD88 2017-02-22 Key fingerprint = 9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88`\n`uid Docker Release (CE deb) <docker@docker.com>`\n`sub 4096R/F273FCD8 2017-02-22`\n\n5.在 source.list 中添加 docker-ce 软件源\n\n    在此需要注意当前系统版本,执行 cat /etc/debian_version查看当前系统是基于debian的哪个版本.debian版本号和系统代号如下:\n\n| 系统代号 | 版本号 |\n| -------- | ------ |\n| squeeze  | 6.x    |\n| wheezy   | 7.x    |\n| jessie   | 8.x    |\n| stretch  | 9.x    |\n\ndeepin 15.10.x 是基于 debian9.0 的,所以加入源如下:\n\nsudo vim /etc/apt/sources.list\n\n`deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/debian stretch stable`\n\n6.更新仓库\n\n`sudo apt update`\n\n7.安装 docker-ce\n\n`sudo apt install docker-ce`\n\n    注:这一步网络不好可能会导致失败,多试几次总会成功的.\n\n8.启动 docker\n\n`sudo systemctl start docker` 或者\n`service docker start`\n\n9.查看安装的版本信息\n\n`docker version`\n\n10.验证 docker 是否被正确安装并且能够正常使用\n\n`sudo docker run hello-world`\n\n如果能够正常下载，并能够正常执行，则说明 docker 正常安装\n\n11.让普通用户也能运行 docker\n\n    默认情况下，普通用户运行 docker 会有权限问题，每次运行都得加 sudo，很麻烦。把你的账号加到 docker 用户组后就不用加 sudo 了：\n\n`sudo usermod -aG docker test` // test 是用户名,替换为自己的,执行后注销登录\n\n12.docker service 默认是开机自启的,强迫症取消开机自启的\n\n    这一点,官方说的安装chkconfig来管理\n\n安装 chkconfig\n\n`sudo apt install chkconfig`\n\n移除自启\n\n`sudo chkconfig --del docker`\n\n    但是试了,重启无效无效.需要通过systemctl命令来禁止\n\n`sudo systemctl disable docker`\n\n### docker 使用初识\n\n#### docker 入门命令\n\ndocker 安装后,默认是没有任何镜像的,如果安装后执行了 docker run hello-world 的话,是有一个 hello-world 的镜像的.\n\n`docker images` // 查看本地的镜像\n\n可以通过 pull 命令获取相关镜像\n\n`docker search nginx` // 在 docker.io 上搜索 nginx 相关的镜像\n\n`docker pull nginx:latest` // latest 代表取最新版本,要获取其他版本 docker pull nginx:xxxx\n\n`docker run -itd --name nginx1.0 nginx` // -d: 后台启动容器;-i: 以交互模式运行容器，通常与 -t 同时使用;-t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用; --name：容器的别名，默认为随机的,这儿为 nginx1.0\n\n    第一次使用run运行指定别名后,以后可通过docker start+ 别名的方式启动\n\n`docker ps` // 查看正在运行的容器\n\n`docker ps -a` // 查看所有容器\n\n`docker ps -l` // 查看最近一次运行的容器\n\n`docker exec -it nginx1.0 bash` // 进入 nginx1.0 容器的命令行\n\n`docker start nginx1.0` // 启动 nginx1.0 容器\n\n`docker stop nginx1.0` // 停止 nginx1.0 容器\n\n`docker rm nginx1.0` // 删除 nginx1.0 容器\n\n#### docker 网络\n\nlinux 使用 namespace 来进行资源的隔离 ，docker 的隔离性\n\n1.docker 的网路类型分为：\n\nBridge 模式：桥接（默认的模式）\n\nhost 模式：容器将不会获得独立的 network namespace，将和主机公用一个；即在 docker 中使用网络和主机上一样的；\n\nNone：不与外界任何东西进行通讯\n\n2.采用 Bridge 的时候需要和主机通讯，就需要使用端口映射\n\ndocker run -d --name nginx1.0 -p 8080:80 nginx # 主机的 8080 端口映射到容器中的 80 端口\n\n    多个端口映射可以跟多个-p,比如:-p 8080:80 -p 6379:6379\n\n#### docker 镜像备份和导入镜像\n\n`docker save -o /home/xxx/images/nginx.tar nginx1.0` // 将 nginx1.0 镜像备份到/home/xxx/images/目录下\n\n`docker load --input /home/xxx/images/nginx.tar` // 导入镜像\n\n#### docker挂载物理机本地目录\n\ndocker可以支持把一个宿主机上的目录挂载到镜像里。\n\n`docker run -itd -v /home/bz/Downloads:/home/Downloads nginx1.0` // 通过-v参数，冒号前为宿主机目录，必须为绝对路径，冒号后为镜像内挂载的路径\n\n默认挂载的路径权限为读写。如果指定为只读可以用：ro\n\n`docker run -itd -v /home/bz/Downloads:/home/Downloads:ro nginx1.0`","slug":"deepin-linux下初识docker","published":1,"updated":"2025-04-22T08:16:43.573Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745iq000td8gkb2df48ud","content":"<h3 id=\"deepin-linux-安装最新版-docker\"><a href=\"#deepin-linux-安装最新版-docker\" class=\"headerlink\" title=\"deepin linux 安装最新版 docker\"></a>deepin linux 安装最新版 docker</h3><p>可以参考官放 wiki 文档进行安装，地址如下:</p>\n<p><a href=\"https://wiki.deepin.org/wiki/Docker#.E5.9C.A8_Deepin_.E4.B8.AD.E5.AE.89.E8.A3.85_Docker_.E6.9C.80.E6.96.B0.E7.89.88.E7.9A.84.E6.96.B9.E6.B3.95\">https://wiki.deepin.org/wiki/Docker#.E5.9C.A8_Deepin_.E4.B8.AD.E5.AE.89.E8.A3.85_Docker_.E6.9C.80.E6.96.B0.E7.89.88.E7.9A.84.E6.96.B9.E6.B3.95</a></p>\n<p>但官网打开速度比较慢，另外关于最后一项禁止开启自启官方说的方式是无效的，笔者亲试至少在 (deepin 15.10.1 基于 unstable 升级上来的) 是无效的。所以将详情步骤记录如下:</p>\n<pre><code>注:执行apt命令之前,最好先执行一次更新仓库操作sudo apt update\n</code></pre>\n<p>1. 如果以前安装过老版本，要确保先卸载以前版本.</p>\n<p><code>sudo apt remove docker.io docker-engine</code></p>\n<p>2. 安装密钥管理与下载相关的工具</p>\n<p>// 密钥管理（add-apt-repository ca-certificates 等）与下载（curl 等）相关的工具</p>\n<p><code>sudo apt-get install apt-transport-https ca-certificates curl python-software-properties software-properties-common</code></p>\n<p>3. 下载并安装密钥</p>\n<p><code>curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -</code></p>\n<p>执行成功后返回 OK 即可。如果不成功的话，可能是网络问题，我这儿是处于翻墙状态，所以是能成功的。不能成功的话，可以按照官方 wiki 上说的使用国内镜像源 <code>curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/debian/gpg | sudo apt-key add -</code></p>\n<p>4. 查看密钥是否安装成功</p>\n<p><code>sudo apt-get fingerprint 0EBFCD88</code></p>\n<p>如果成功会提示</p>\n<p><code>pub 4096R/0EBFCD88 2017-02-22 Key fingerprint = 9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88</code><br><code>uid Docker Release (CE deb) &lt;docker@docker.com&gt;</code><br><code>sub 4096R/F273FCD8 2017-02-22</code></p>\n<p>5. 在 source.list 中添加 docker-ce 软件源</p>\n<pre><code>在此需要注意当前系统版本,执行 cat /etc/debian_version查看当前系统是基于debian的哪个版本.debian版本号和系统代号如下:\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>系统代号</th>\n<th>版本号</th>\n</tr>\n</thead>\n<tbody><tr>\n<td> squeeze</td>\n<td>6.x</td>\n</tr>\n<tr>\n<td>wheezy</td>\n<td>7.x</td>\n</tr>\n<tr>\n<td>jessie</td>\n<td>8.x</td>\n</tr>\n<tr>\n<td>stretch</td>\n<td>9.x</td>\n</tr>\n</tbody></table>\n<p>deepin 15.10.x 是基于 debian9.0 的，所以加入源如下:</p>\n<p>sudo vim /etc/apt/sources.list</p>\n<p><code>deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/debian stretch stable</code></p>\n<p>6. 更新仓库</p>\n<p><code>sudo apt update</code></p>\n<p>7. 安装 docker-ce</p>\n<p><code>sudo apt install docker-ce</code></p>\n<pre><code>注:这一步网络不好可能会导致失败,多试几次总会成功的.\n</code></pre>\n<p>8. 启动 docker</p>\n<p><code>sudo systemctl start docker</code> 或者<br><code>service docker start</code></p>\n<p>9. 查看安装的版本信息</p>\n<p><code>docker version</code></p>\n<p>10. 验证 docker 是否被正确安装并且能够正常使用</p>\n<p><code>sudo docker run hello-world</code></p>\n<p>如果能够正常下载，并能够正常执行，则说明 docker 正常安装</p>\n<p>11. 让普通用户也能运行 docker</p>\n<pre><code>默认情况下，普通用户运行 docker 会有权限问题，每次运行都得加 sudo，很麻烦。把你的账号加到 docker 用户组后就不用加 sudo 了：\n</code></pre>\n<p><code>sudo usermod -aG docker test</code> //test 是用户名，替换为自己的，执行后注销登录</p>\n<p>12.docker service 默认是开机自启的，强迫症取消开机自启的</p>\n<pre><code>这一点,官方说的安装chkconfig来管理\n</code></pre>\n<p>安装 chkconfig</p>\n<p><code>sudo apt install chkconfig</code></p>\n<p>移除自启</p>\n<p><code>sudo chkconfig --del docker</code></p>\n<pre><code>但是试了,重启无效无效.需要通过systemctl命令来禁止\n</code></pre>\n<p><code>sudo systemctl disable docker</code></p>\n<h3 id=\"docker-使用初识\"><a href=\"#docker-使用初识\" class=\"headerlink\" title=\"docker 使用初识\"></a>docker 使用初识</h3><h4 id=\"docker-入门命令\"><a href=\"#docker-入门命令\" class=\"headerlink\" title=\"docker 入门命令\"></a>docker 入门命令</h4><p>docker 安装后，默认是没有任何镜像的，如果安装后执行了 docker run hello-world 的话，是有一个 hello-world 的镜像的.</p>\n<p><code>docker images</code> // 查看本地的镜像</p>\n<p>可以通过 pull 命令获取相关镜像</p>\n<p><code>docker search nginx</code> // 在 docker.io 上搜索 nginx 相关的镜像</p>\n<p><code>docker pull nginx:latest</code> //latest 代表取最新版本，要获取其他版本 docker pull nginx:xxxx</p>\n<p><code>docker run -itd --name nginx1.0 nginx</code> //-d: 后台启动容器；-i: 以交互模式运行容器，通常与 -t 同时使用；-t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用；–name：容器的别名，默认为随机的，这儿为 nginx1.0</p>\n<pre><code>第一次使用run运行指定别名后,以后可通过docker start+ 别名的方式启动\n</code></pre>\n<p><code>docker ps</code> // 查看正在运行的容器</p>\n<p><code>docker ps -a</code> // 查看所有容器</p>\n<p><code>docker ps -l</code> // 查看最近一次运行的容器</p>\n<p><code>docker exec -it nginx1.0 bash</code> // 进入 nginx1.0 容器的命令行</p>\n<p><code>docker start nginx1.0</code> // 启动 nginx1.0 容器</p>\n<p><code>docker stop nginx1.0</code> // 停止 nginx1.0 容器</p>\n<p><code>docker rm nginx1.0</code> // 删除 nginx1.0 容器</p>\n<h4 id=\"docker-网络\"><a href=\"#docker-网络\" class=\"headerlink\" title=\"docker 网络\"></a>docker 网络</h4><p>linux 使用 namespace 来进行资源的隔离 ，docker 的隔离性</p>\n<p>1.docker 的网路类型分为：</p>\n<p>Bridge 模式：桥接（默认的模式）</p>\n<p>host 模式：容器将不会获得独立的 network namespace，将和主机公用一个；即在 docker 中使用网络和主机上一样的；</p>\n<p>None：不与外界任何东西进行通讯</p>\n<p>2. 采用 Bridge 的时候需要和主机通讯，就需要使用端口映射</p>\n<p>docker run -d –name nginx1.0 -p 8080:80 nginx # 主机的 8080 端口映射到容器中的 80 端口</p>\n<pre><code>多个端口映射可以跟多个-p,比如:-p 8080:80 -p 6379:6379\n</code></pre>\n<h4 id=\"docker-镜像备份和导入镜像\"><a href=\"#docker-镜像备份和导入镜像\" class=\"headerlink\" title=\"docker 镜像备份和导入镜像\"></a>docker 镜像备份和导入镜像</h4><p><code>docker save -o /home/xxx/images/nginx.tar nginx1.0</code> // 将 nginx1.0 镜像备份到 /home/xxx/images/ 目录下</p>\n<p><code>docker load --input /home/xxx/images/nginx.tar</code> // 导入镜像</p>\n<h4 id=\"docker挂载物理机本地目录\"><a href=\"#docker挂载物理机本地目录\" class=\"headerlink\" title=\"docker挂载物理机本地目录\"></a>docker 挂载物理机本地目录</h4><p>docker 可以支持把一个宿主机上的目录挂载到镜像里。</p>\n<p><code>docker run -itd -v /home/bz/Downloads:/home/Downloads nginx1.0</code> // 通过 - v 参数，冒号前为宿主机目录，必须为绝对路径，冒号后为镜像内挂载的路径</p>\n<p>默认挂载的路径权限为读写。如果指定为只读可以用：ro</p>\n<p><code>docker run -itd -v /home/bz/Downloads:/home/Downloads:ro nginx1.0</code></p>\n","excerpt":"","more":"<h3 id=\"deepin-linux-安装最新版-docker\"><a href=\"#deepin-linux-安装最新版-docker\" class=\"headerlink\" title=\"deepin linux 安装最新版 docker\"></a>deepin linux 安装最新版 docker</h3><p>可以参考官放 wiki 文档进行安装，地址如下:</p>\n<p><a href=\"https://wiki.deepin.org/wiki/Docker#.E5.9C.A8_Deepin_.E4.B8.AD.E5.AE.89.E8.A3.85_Docker_.E6.9C.80.E6.96.B0.E7.89.88.E7.9A.84.E6.96.B9.E6.B3.95\">https://wiki.deepin.org/wiki/Docker#.E5.9C.A8_Deepin_.E4.B8.AD.E5.AE.89.E8.A3.85_Docker_.E6.9C.80.E6.96.B0.E7.89.88.E7.9A.84.E6.96.B9.E6.B3.95</a></p>\n<p>但官网打开速度比较慢，另外关于最后一项禁止开启自启官方说的方式是无效的，笔者亲试至少在 (deepin 15.10.1 基于 unstable 升级上来的) 是无效的。所以将详情步骤记录如下:</p>\n<pre><code>注:执行apt命令之前,最好先执行一次更新仓库操作sudo apt update\n</code></pre>\n<p>1. 如果以前安装过老版本，要确保先卸载以前版本.</p>\n<p><code>sudo apt remove docker.io docker-engine</code></p>\n<p>2. 安装密钥管理与下载相关的工具</p>\n<p>// 密钥管理（add-apt-repository ca-certificates 等）与下载（curl 等）相关的工具</p>\n<p><code>sudo apt-get install apt-transport-https ca-certificates curl python-software-properties software-properties-common</code></p>\n<p>3. 下载并安装密钥</p>\n<p><code>curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -</code></p>\n<p>执行成功后返回 OK 即可。如果不成功的话，可能是网络问题，我这儿是处于翻墙状态，所以是能成功的。不能成功的话，可以按照官方 wiki 上说的使用国内镜像源 <code>curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/debian/gpg | sudo apt-key add -</code></p>\n<p>4. 查看密钥是否安装成功</p>\n<p><code>sudo apt-get fingerprint 0EBFCD88</code></p>\n<p>如果成功会提示</p>\n<p><code>pub 4096R/0EBFCD88 2017-02-22 Key fingerprint = 9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88</code><br><code>uid Docker Release (CE deb) &lt;docker@docker.com&gt;</code><br><code>sub 4096R/F273FCD8 2017-02-22</code></p>\n<p>5. 在 source.list 中添加 docker-ce 软件源</p>\n<pre><code>在此需要注意当前系统版本,执行 cat /etc/debian_version查看当前系统是基于debian的哪个版本.debian版本号和系统代号如下:\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>系统代号</th>\n<th>版本号</th>\n</tr>\n</thead>\n<tbody><tr>\n<td> squeeze</td>\n<td>6.x</td>\n</tr>\n<tr>\n<td>wheezy</td>\n<td>7.x</td>\n</tr>\n<tr>\n<td>jessie</td>\n<td>8.x</td>\n</tr>\n<tr>\n<td>stretch</td>\n<td>9.x</td>\n</tr>\n</tbody></table>\n<p>deepin 15.10.x 是基于 debian9.0 的，所以加入源如下:</p>\n<p>sudo vim /etc/apt/sources.list</p>\n<p><code>deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/debian stretch stable</code></p>\n<p>6. 更新仓库</p>\n<p><code>sudo apt update</code></p>\n<p>7. 安装 docker-ce</p>\n<p><code>sudo apt install docker-ce</code></p>\n<pre><code>注:这一步网络不好可能会导致失败,多试几次总会成功的.\n</code></pre>\n<p>8. 启动 docker</p>\n<p><code>sudo systemctl start docker</code> 或者<br><code>service docker start</code></p>\n<p>9. 查看安装的版本信息</p>\n<p><code>docker version</code></p>\n<p>10. 验证 docker 是否被正确安装并且能够正常使用</p>\n<p><code>sudo docker run hello-world</code></p>\n<p>如果能够正常下载，并能够正常执行，则说明 docker 正常安装</p>\n<p>11. 让普通用户也能运行 docker</p>\n<pre><code>默认情况下，普通用户运行 docker 会有权限问题，每次运行都得加 sudo，很麻烦。把你的账号加到 docker 用户组后就不用加 sudo 了：\n</code></pre>\n<p><code>sudo usermod -aG docker test</code> //test 是用户名，替换为自己的，执行后注销登录</p>\n<p>12.docker service 默认是开机自启的，强迫症取消开机自启的</p>\n<pre><code>这一点,官方说的安装chkconfig来管理\n</code></pre>\n<p>安装 chkconfig</p>\n<p><code>sudo apt install chkconfig</code></p>\n<p>移除自启</p>\n<p><code>sudo chkconfig --del docker</code></p>\n<pre><code>但是试了,重启无效无效.需要通过systemctl命令来禁止\n</code></pre>\n<p><code>sudo systemctl disable docker</code></p>\n<h3 id=\"docker-使用初识\"><a href=\"#docker-使用初识\" class=\"headerlink\" title=\"docker 使用初识\"></a>docker 使用初识</h3><h4 id=\"docker-入门命令\"><a href=\"#docker-入门命令\" class=\"headerlink\" title=\"docker 入门命令\"></a>docker 入门命令</h4><p>docker 安装后，默认是没有任何镜像的，如果安装后执行了 docker run hello-world 的话，是有一个 hello-world 的镜像的.</p>\n<p><code>docker images</code> // 查看本地的镜像</p>\n<p>可以通过 pull 命令获取相关镜像</p>\n<p><code>docker search nginx</code> // 在 docker.io 上搜索 nginx 相关的镜像</p>\n<p><code>docker pull nginx:latest</code> //latest 代表取最新版本，要获取其他版本 docker pull nginx:xxxx</p>\n<p><code>docker run -itd --name nginx1.0 nginx</code> //-d: 后台启动容器；-i: 以交互模式运行容器，通常与 -t 同时使用；-t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用；–name：容器的别名，默认为随机的，这儿为 nginx1.0</p>\n<pre><code>第一次使用run运行指定别名后,以后可通过docker start+ 别名的方式启动\n</code></pre>\n<p><code>docker ps</code> // 查看正在运行的容器</p>\n<p><code>docker ps -a</code> // 查看所有容器</p>\n<p><code>docker ps -l</code> // 查看最近一次运行的容器</p>\n<p><code>docker exec -it nginx1.0 bash</code> // 进入 nginx1.0 容器的命令行</p>\n<p><code>docker start nginx1.0</code> // 启动 nginx1.0 容器</p>\n<p><code>docker stop nginx1.0</code> // 停止 nginx1.0 容器</p>\n<p><code>docker rm nginx1.0</code> // 删除 nginx1.0 容器</p>\n<h4 id=\"docker-网络\"><a href=\"#docker-网络\" class=\"headerlink\" title=\"docker 网络\"></a>docker 网络</h4><p>linux 使用 namespace 来进行资源的隔离 ，docker 的隔离性</p>\n<p>1.docker 的网路类型分为：</p>\n<p>Bridge 模式：桥接（默认的模式）</p>\n<p>host 模式：容器将不会获得独立的 network namespace，将和主机公用一个；即在 docker 中使用网络和主机上一样的；</p>\n<p>None：不与外界任何东西进行通讯</p>\n<p>2. 采用 Bridge 的时候需要和主机通讯，就需要使用端口映射</p>\n<p>docker run -d –name nginx1.0 -p 8080:80 nginx # 主机的 8080 端口映射到容器中的 80 端口</p>\n<pre><code>多个端口映射可以跟多个-p,比如:-p 8080:80 -p 6379:6379\n</code></pre>\n<h4 id=\"docker-镜像备份和导入镜像\"><a href=\"#docker-镜像备份和导入镜像\" class=\"headerlink\" title=\"docker 镜像备份和导入镜像\"></a>docker 镜像备份和导入镜像</h4><p><code>docker save -o /home/xxx/images/nginx.tar nginx1.0</code> // 将 nginx1.0 镜像备份到 /home/xxx/images/ 目录下</p>\n<p><code>docker load --input /home/xxx/images/nginx.tar</code> // 导入镜像</p>\n<h4 id=\"docker挂载物理机本地目录\"><a href=\"#docker挂载物理机本地目录\" class=\"headerlink\" title=\"docker挂载物理机本地目录\"></a>docker 挂载物理机本地目录</h4><p>docker 可以支持把一个宿主机上的目录挂载到镜像里。</p>\n<p><code>docker run -itd -v /home/bz/Downloads:/home/Downloads nginx1.0</code> // 通过 - v 参数，冒号前为宿主机目录，必须为绝对路径，冒号后为镜像内挂载的路径</p>\n<p>默认挂载的路径权限为读写。如果指定为只读可以用：ro</p>\n<p><code>docker run -itd -v /home/bz/Downloads:/home/Downloads:ro nginx1.0</code></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:16:43 GMT+0800 (China Standard Time)","title":"deepin linux 下初识 docker","path":"2019/05/29/deepin-linux下初识docker/","eyeCatchImage":null,"excerpt":"deepin linux 安装最新版 docker","date":{"_isAMomentObject":true,"_i":"2019-05-29T02:27:29.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2019-05-29T02:27:29.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["linux","docker"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":1319},{"title":"git 常用的使用总结","date":"2019-03-16T03:29:32.000Z","description":"Git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目","_content":"\n### 对一个已存在的远程仓库进行clone和提交代码操作\nclone代码\n>$ git clone [-b branchName] 远程地址 [filefolder name]\n\n>-b代表clone某个分支,后面跟分支的名称.代码clone到本地后,当前路径会多一个与git 远程项目名相同的文件夹(手工指定文件夹名除外).\n\n>$ cd 文件夹名\n\n提交代码:\n>$ git status // 查看当前工作目录的状态\n\n>$ git add . 或 git add -u 或 git add -A(git add --all的缩写) //添加要提交的文件到git暂存区. 相关区别:三条命令对应的git版本不一样也有区别.\n\n>git1.x 版本![](/images/git1.x.jpg)\n\n>git2.x 版本![](/images/git2.x.jpg)\n\n>使用2.x以上版本的git使用-a和.是一样的.本人通常使用.更加方便快捷\n\n>$ git status // 添加文件到暂存区后再次查看确保文件的状态\n\n>$ git commit -m \"注释\"\n\n>$ git remote -v // 查看当前已经存在的git 远程url\n\n>$ git push -u 远程名称 本地要提交的分支:远程分支 // 远程分支不存在的时候会自动在远程创建该名称分支\n\n### 已有代码在用户本地,远程不存在的情况\n>$ cd existing_folder\n\n>$ git init\n\n>$ git status\n\n>$ git remote add origin git@code.aliyun.com:baz/foo.git\n\n>$ git add .\n\n>$ git status\n\n>$ git commit -m \"注释\"\n\n>$ git push -u origin master:master // 提交本地master到远程master\n\n\n### 对远程初始化仓库有git history,本地代码也有git history的情况\n>针对远程本地都有git 提交的情况,比较特殊.比如阿里云code上面新建项目必须选择对应的模板,会进行对仓库初始化操作.而本地存在之前的项目(已经含有git记录,比如gitlab,coding之类的).推荐方式:先从远程clone下来.然后删除clone下来的文件夹下的文件(.git目录除外).然后commit->push提交到远程\n\n1.删除远程仓库不需要的文件\n\n>$ git clone alicodeurl xxx\n\n>$ cd xxx\n\n>//去资源文件管理器中手动删除除.git目录外的其他文件. linux/osx也可cd 目录再rm删除\n\n>$ git status\n\n>$ git add .\n\n>$ git status\n\n>$ git commit -m \"注释\"\n\n>$ git push -u origin master:master // 提交本地master到远程master\n\n2.对本地项目进行提交到远程\n\n>$ cd project filefolder\n\n>$ git remote add origin git@code.aliyun.com:baz/foo.git\n\n>$ git pull origin master --allow-unrelated-histories // 会弹出merge的编辑器,删除或者增加内容后退出\n\n>$ git add .\n\n>$ git commit -m \"注释\"\n\n>$ git push -u origin master:master // 提交本地master到远程master\n\n### 项目开发中的分支使用\n\n切换分支\n>$ git checkout 分支名称\n\n创建分支dev\n\n>$ git checkout -b dev  // 创建并进入到分支,git branch 可查看当前分支指针状态\n\n#### 注\n约定在Dev分支上面进行编码开发.上述的所有提交代码命令必须在dev分支上执行,最后的一句git push 换成以下命令\n\n>$ git push -u origin dev:dev // 提交本地dev到远程dev.第一次远程无dev会自动创建dev\n\n更新远程分支代码到本地:\n>$ git fetch origin dev // fetch远程dev分支代码 ..避免使用pull\n\n在当前分支合并fetch下面的代码\n>$ git merge origin/dev  // 合并从远程dev分支fetch下来的代码\n\n## 注意\n\n版本正式上线后,需要将dev分支发布到Master分支.采用以下命令:\n>$ git checkout master  // 切换到Master分支\n\n>$ git merge --no-ff dev // 对Dev分支进行合并\n\n>使用--no-ff参数后，会执行正常合并，在Master分支上生成一个新节点。为了保证版本演进的清晰，推荐采用这种做法\n\n\n### Git4个阶段的撤销操作\n\n>了解git阶段首选理解git的几个区:\n\n>工作区(working area),\n\n>暂存区(stage),\n\n>本地仓库(local repository),\n\n>远程仓库(remote repository).\n\n>每将文件存到不同的区的时候会产生一个状态,在加上最开始的一个状态总共5个状态.\n\n>未修改(Origin)\n\n>已修改(Modified)\n\n>已暂存(Staged)\n\n>已提交(Committed)\n\n>已推送(Pushed)\n\n##### 1.文件处于已修改的状态,即修改过文件.未暂存(add)\n\n>文件已修改,恢复到初始状态(未做任何修改状态)\n\n>$git checkout . 或者 $git reset --hard origin/dev    // 恢复到与远程dev保持一致的状态,相当于刚clone dev的状态\n\n##### 2.文件处于已暂存(stage),未提交(commit)\n\n>文件已经进行过git add . 操作,但是还未进行git commit操作\n\n>$git reset  // 恢复到已修改的状态\n\n>$git checkout . // 继续执行这条,就恢复到初始状态(未做任何修改状态)\n\n>如果要实现恢复到初始状态(未做任何修改状态),除了通过执行上面2步命令外,也可一直接执行下面这句,一步恢复到初始状态\n\n>$git reset --hard // 一步到初始状态\n\n##### 3.文件处于已提交(commit),未推送(push)\n\n>这种情况下,代表已经提交到本地仓库了,既然已经污染了你的本地仓库，那么就从远程仓库把代码取回来吧.恢复到初始状态了,\n\n>$git reset --hard origin/dev  //<b>直接恢复到初始化状态,但已做的修改全部会丢失</b>\n\n##### 4.文件处于已推送(push)\n\n>既git add了，又git commit了，并且还git push了，这时代码已经进入远程仓库。如果想恢复的话.由于本地仓库和远程仓库是等价的，只需要先恢复本地仓库，再强制push到远程仓库就好了\n\n>$git reset --hard HEAD^   //将本地恢复到初始状态,<b>之前已做的修改全部会丢失</b>\n\n>$git push -f // 将本地仓库初始化后推送到远程,将远程保持和本地一致\n\n##### 注:只要还未影响到本地仓库(local repository)的时候,即没有commit时,都可以恢复到已修改的状态.一旦commit后,影响了本地仓库,就只能恢复到上一次的本地仓库的版本.所做的修改都会丢失..\n\n###git撤销暂存区的文件\n>有时候执行git add . 后,将当前目录下的所有改动文件都添加到了暂存区,此时如果有三两个文件是不需要添加进暂存区的,可以执行以下命令将文件从暂存区移除\n>$git rm --cached 文件名\n\n### git tag的常用使用\n\n>Git可以对某个版本打上标签(tag)，表示本版本为发行版\n\n>$git tag // 查看所有标签\n\n>$git tag -l 1.0.*  // 打印符合检索条件的标签\n\n>$git checkout 1.0.0 // 查看对应标签状态\n\n>$git tag -a 1.0.0 -m \"1.0.0版本\" // 创建带备注标签(推荐)\n\n>$git tag -a 1.0.0 0c3b62d -m \"备注信息\" // 针对特定commit版本SHA创建标签\n\n>$git tag -d 1.0.0 // 删除本地1.0.0标签\n\n>$git push origin --tags // 将本地所有标签发布到远程仓库\n\n>$git push origin 1.0.0 // 指定标签版本(1.0.0)发送\n\n>$git push origin --delete 1.0.0 // 删除远程仓库对应标签,此命令需要Git版本 > V1.7.0\n\n>$git push origin :refs/tags/1.0.0 // 删除远程仓库对应标签,此命令需要Git版本 < V1.7.0\n","source":"_posts/git常用的使用总结.md","raw":"---\ntitle: git常用的使用总结\ndate: 2019-03-16 11:29:32\ndescription: Git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目\ntags:\n  - Git\n---\n\n### 对一个已存在的远程仓库进行clone和提交代码操作\nclone代码\n>$ git clone [-b branchName] 远程地址 [filefolder name]\n\n>-b代表clone某个分支,后面跟分支的名称.代码clone到本地后,当前路径会多一个与git 远程项目名相同的文件夹(手工指定文件夹名除外).\n\n>$ cd 文件夹名\n\n提交代码:\n>$ git status // 查看当前工作目录的状态\n\n>$ git add . 或 git add -u 或 git add -A(git add --all的缩写) //添加要提交的文件到git暂存区. 相关区别:三条命令对应的git版本不一样也有区别.\n\n>git1.x 版本![](/images/git1.x.jpg)\n\n>git2.x 版本![](/images/git2.x.jpg)\n\n>使用2.x以上版本的git使用-a和.是一样的.本人通常使用.更加方便快捷\n\n>$ git status // 添加文件到暂存区后再次查看确保文件的状态\n\n>$ git commit -m \"注释\"\n\n>$ git remote -v // 查看当前已经存在的git 远程url\n\n>$ git push -u 远程名称 本地要提交的分支:远程分支 // 远程分支不存在的时候会自动在远程创建该名称分支\n\n### 已有代码在用户本地,远程不存在的情况\n>$ cd existing_folder\n\n>$ git init\n\n>$ git status\n\n>$ git remote add origin git@code.aliyun.com:baz/foo.git\n\n>$ git add .\n\n>$ git status\n\n>$ git commit -m \"注释\"\n\n>$ git push -u origin master:master // 提交本地master到远程master\n\n\n### 对远程初始化仓库有git history,本地代码也有git history的情况\n>针对远程本地都有git 提交的情况,比较特殊.比如阿里云code上面新建项目必须选择对应的模板,会进行对仓库初始化操作.而本地存在之前的项目(已经含有git记录,比如gitlab,coding之类的).推荐方式:先从远程clone下来.然后删除clone下来的文件夹下的文件(.git目录除外).然后commit->push提交到远程\n\n1.删除远程仓库不需要的文件\n\n>$ git clone alicodeurl xxx\n\n>$ cd xxx\n\n>//去资源文件管理器中手动删除除.git目录外的其他文件. linux/osx也可cd 目录再rm删除\n\n>$ git status\n\n>$ git add .\n\n>$ git status\n\n>$ git commit -m \"注释\"\n\n>$ git push -u origin master:master // 提交本地master到远程master\n\n2.对本地项目进行提交到远程\n\n>$ cd project filefolder\n\n>$ git remote add origin git@code.aliyun.com:baz/foo.git\n\n>$ git pull origin master --allow-unrelated-histories // 会弹出merge的编辑器,删除或者增加内容后退出\n\n>$ git add .\n\n>$ git commit -m \"注释\"\n\n>$ git push -u origin master:master // 提交本地master到远程master\n\n### 项目开发中的分支使用\n\n切换分支\n>$ git checkout 分支名称\n\n创建分支dev\n\n>$ git checkout -b dev  // 创建并进入到分支,git branch 可查看当前分支指针状态\n\n#### 注\n约定在Dev分支上面进行编码开发.上述的所有提交代码命令必须在dev分支上执行,最后的一句git push 换成以下命令\n\n>$ git push -u origin dev:dev // 提交本地dev到远程dev.第一次远程无dev会自动创建dev\n\n更新远程分支代码到本地:\n>$ git fetch origin dev // fetch远程dev分支代码 ..避免使用pull\n\n在当前分支合并fetch下面的代码\n>$ git merge origin/dev  // 合并从远程dev分支fetch下来的代码\n\n## 注意\n\n版本正式上线后,需要将dev分支发布到Master分支.采用以下命令:\n>$ git checkout master  // 切换到Master分支\n\n>$ git merge --no-ff dev // 对Dev分支进行合并\n\n>使用--no-ff参数后，会执行正常合并，在Master分支上生成一个新节点。为了保证版本演进的清晰，推荐采用这种做法\n\n\n### Git4个阶段的撤销操作\n\n>了解git阶段首选理解git的几个区:\n\n>工作区(working area),\n\n>暂存区(stage),\n\n>本地仓库(local repository),\n\n>远程仓库(remote repository).\n\n>每将文件存到不同的区的时候会产生一个状态,在加上最开始的一个状态总共5个状态.\n\n>未修改(Origin)\n\n>已修改(Modified)\n\n>已暂存(Staged)\n\n>已提交(Committed)\n\n>已推送(Pushed)\n\n##### 1.文件处于已修改的状态,即修改过文件.未暂存(add)\n\n>文件已修改,恢复到初始状态(未做任何修改状态)\n\n>$git checkout . 或者 $git reset --hard origin/dev    // 恢复到与远程dev保持一致的状态,相当于刚clone dev的状态\n\n##### 2.文件处于已暂存(stage),未提交(commit)\n\n>文件已经进行过git add . 操作,但是还未进行git commit操作\n\n>$git reset  // 恢复到已修改的状态\n\n>$git checkout . // 继续执行这条,就恢复到初始状态(未做任何修改状态)\n\n>如果要实现恢复到初始状态(未做任何修改状态),除了通过执行上面2步命令外,也可一直接执行下面这句,一步恢复到初始状态\n\n>$git reset --hard // 一步到初始状态\n\n##### 3.文件处于已提交(commit),未推送(push)\n\n>这种情况下,代表已经提交到本地仓库了,既然已经污染了你的本地仓库，那么就从远程仓库把代码取回来吧.恢复到初始状态了,\n\n>$git reset --hard origin/dev  //<b>直接恢复到初始化状态,但已做的修改全部会丢失</b>\n\n##### 4.文件处于已推送(push)\n\n>既git add了，又git commit了，并且还git push了，这时代码已经进入远程仓库。如果想恢复的话.由于本地仓库和远程仓库是等价的，只需要先恢复本地仓库，再强制push到远程仓库就好了\n\n>$git reset --hard HEAD^   //将本地恢复到初始状态,<b>之前已做的修改全部会丢失</b>\n\n>$git push -f // 将本地仓库初始化后推送到远程,将远程保持和本地一致\n\n##### 注:只要还未影响到本地仓库(local repository)的时候,即没有commit时,都可以恢复到已修改的状态.一旦commit后,影响了本地仓库,就只能恢复到上一次的本地仓库的版本.所做的修改都会丢失..\n\n###git撤销暂存区的文件\n>有时候执行git add . 后,将当前目录下的所有改动文件都添加到了暂存区,此时如果有三两个文件是不需要添加进暂存区的,可以执行以下命令将文件从暂存区移除\n>$git rm --cached 文件名\n\n### git tag的常用使用\n\n>Git可以对某个版本打上标签(tag)，表示本版本为发行版\n\n>$git tag // 查看所有标签\n\n>$git tag -l 1.0.*  // 打印符合检索条件的标签\n\n>$git checkout 1.0.0 // 查看对应标签状态\n\n>$git tag -a 1.0.0 -m \"1.0.0版本\" // 创建带备注标签(推荐)\n\n>$git tag -a 1.0.0 0c3b62d -m \"备注信息\" // 针对特定commit版本SHA创建标签\n\n>$git tag -d 1.0.0 // 删除本地1.0.0标签\n\n>$git push origin --tags // 将本地所有标签发布到远程仓库\n\n>$git push origin 1.0.0 // 指定标签版本(1.0.0)发送\n\n>$git push origin --delete 1.0.0 // 删除远程仓库对应标签,此命令需要Git版本 > V1.7.0\n\n>$git push origin :refs/tags/1.0.0 // 删除远程仓库对应标签,此命令需要Git版本 < V1.7.0\n","slug":"git常用的使用总结","published":1,"updated":"2025-04-22T08:16:53.549Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745ir000vd8gk8sckgxn1","content":"<h3 id=\"对一个已存在的远程仓库进行clone和提交代码操作\"><a href=\"#对一个已存在的远程仓库进行clone和提交代码操作\" class=\"headerlink\" title=\"对一个已存在的远程仓库进行clone和提交代码操作\"></a>对一个已存在的远程仓库进行 clone 和提交代码操作</h3><p>clone 代码</p>\n<blockquote>\n<p>$ git clone [-b branchName] 远程地址 [filefolder name]</p>\n</blockquote>\n<blockquote>\n<p>-b 代表 clone 某个分支，后面跟分支的名称。代码 clone 到本地后，当前路径会多一个与 git 远程项目名相同的文件夹 (手工指定文件夹名除外).</p>\n</blockquote>\n<blockquote>\n<p>$ cd 文件夹名</p>\n</blockquote>\n<p>提交代码:</p>\n<blockquote>\n<p>$ git status // 查看当前工作目录的状态</p>\n</blockquote>\n<blockquote>\n<p>$ git add . 或 git add -u 或 git add -A (git add –all 的缩写) // 添加要提交的文件到 git 暂存区。相关区别：三条命令对应的 git 版本不一样也有区别.</p>\n</blockquote>\n<blockquote>\n<p>git1.x 版本<img src=\"/images/git1.x.jpg\"></p>\n</blockquote>\n<blockquote>\n<p>git2.x 版本<img src=\"/images/git2.x.jpg\"></p>\n</blockquote>\n<blockquote>\n<p>使用 2.x 以上版本的 git 使用 - a 和。是一样的。本人通常使用。更加方便快捷</p>\n</blockquote>\n<blockquote>\n<p>$ git status // 添加文件到暂存区后再次查看确保文件的状态</p>\n</blockquote>\n<blockquote>\n<p>$ git commit -m “注释”</p>\n</blockquote>\n<blockquote>\n<p>$ git remote -v // 查看当前已经存在的 git 远程 url</p>\n</blockquote>\n<blockquote>\n<p>$ git push -u 远程名称 本地要提交的分支：远程分支 // 远程分支不存在的时候会自动在远程创建该名称分支</p>\n</blockquote>\n<h3 id=\"已有代码在用户本地-远程不存在的情况\"><a href=\"#已有代码在用户本地-远程不存在的情况\" class=\"headerlink\" title=\"已有代码在用户本地,远程不存在的情况\"></a>已有代码在用户本地，远程不存在的情况</h3><blockquote>\n<p>$ cd existing_folder</p>\n</blockquote>\n<blockquote>\n<p>$ git init</p>\n</blockquote>\n<blockquote>\n<p>$ git status</p>\n</blockquote>\n<blockquote>\n<p>$ git remote add origin <a href=\"mailto:git@code.aliyun.com\">git@code.aliyun.com</a>:baz/foo.git</p>\n</blockquote>\n<blockquote>\n<p>$ git add .</p>\n</blockquote>\n<blockquote>\n<p>$ git status</p>\n</blockquote>\n<blockquote>\n<p>$ git commit -m “注释”</p>\n</blockquote>\n<blockquote>\n<p>$ git push -u origin master:master // 提交本地 master 到远程 master</p>\n</blockquote>\n<h3 id=\"对远程初始化仓库有git-history-本地代码也有git-history的情况\"><a href=\"#对远程初始化仓库有git-history-本地代码也有git-history的情况\" class=\"headerlink\" title=\"对远程初始化仓库有git history,本地代码也有git history的情况\"></a>对远程初始化仓库有 git history, 本地代码也有 git history 的情况</h3><blockquote>\n<p>针对远程本地都有 git 提交的情况，比较特殊。比如阿里云 code 上面新建项目必须选择对应的模板，会进行对仓库初始化操作。而本地存在之前的项目 (已经含有 git 记录，比如 gitlab,coding 之类的). 推荐方式：先从远程 clone 下来。然后删除 clone 下来的文件夹下的文件 (.git 目录除外). 然后 commit-&gt;push 提交到远程</p>\n</blockquote>\n<p>1. 删除远程仓库不需要的文件</p>\n<blockquote>\n<p>$ git clone alicodeurl xxx</p>\n</blockquote>\n<blockquote>\n<p>$ cd xxx</p>\n</blockquote>\n<blockquote>\n<p>// 去资源文件管理器中手动删除除.git 目录外的其他文件. linux/osx 也可 cd 目录再 rm 删除</p>\n</blockquote>\n<blockquote>\n<p>$ git status</p>\n</blockquote>\n<blockquote>\n<p>$ git add .</p>\n</blockquote>\n<blockquote>\n<p>$ git status</p>\n</blockquote>\n<blockquote>\n<p>$ git commit -m “注释”</p>\n</blockquote>\n<blockquote>\n<p>$ git push -u origin master:master // 提交本地 master 到远程 master</p>\n</blockquote>\n<p>2. 对本地项目进行提交到远程</p>\n<blockquote>\n<p>$ cd project filefolder</p>\n</blockquote>\n<blockquote>\n<p>$ git remote add origin <a href=\"mailto:git@code.aliyun.com\">git@code.aliyun.com</a>:baz/foo.git</p>\n</blockquote>\n<blockquote>\n<p>$ git pull origin master –allow-unrelated-histories // 会弹出 merge 的编辑器，删除或者增加内容后退出</p>\n</blockquote>\n<blockquote>\n<p>$ git add .</p>\n</blockquote>\n<blockquote>\n<p>$ git commit -m “注释”</p>\n</blockquote>\n<blockquote>\n<p>$ git push -u origin master:master // 提交本地 master 到远程 master</p>\n</blockquote>\n<h3 id=\"项目开发中的分支使用\"><a href=\"#项目开发中的分支使用\" class=\"headerlink\" title=\"项目开发中的分支使用\"></a>项目开发中的分支使用</h3><p>切换分支</p>\n<blockquote>\n<p>$ git checkout 分支名称</p>\n</blockquote>\n<p>创建分支 dev</p>\n<blockquote>\n<p>$ git checkout -b dev  // 创建并进入到分支，git branch 可查看当前分支指针状态</p>\n</blockquote>\n<h4 id=\"注\"><a href=\"#注\" class=\"headerlink\" title=\"注\"></a>注</h4><p>约定在 Dev 分支上面进行编码开发。上述的所有提交代码命令必须在 dev 分支上执行，最后的一句 git push 换成以下命令</p>\n<blockquote>\n<p>$ git push -u origin dev:dev // 提交本地 dev 到远程 dev. 第一次远程无 dev 会自动创建 dev</p>\n</blockquote>\n<p>更新远程分支代码到本地:</p>\n<blockquote>\n<p>$ git fetch origin dev //fetch 远程 dev 分支代码 .. 避免使用 pull</p>\n</blockquote>\n<p>在当前分支合并 fetch 下面的代码</p>\n<blockquote>\n<p>$ git merge origin/dev  // 合并从远程 dev 分支 fetch 下来的代码</p>\n</blockquote>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><p>版本正式上线后，需要将 dev 分支发布到 Master 分支。采用以下命令:</p>\n<blockquote>\n<p>$ git checkout master  // 切换到 Master 分支</p>\n</blockquote>\n<blockquote>\n<p>$ git merge –no-ff dev // 对 Dev 分支进行合并</p>\n</blockquote>\n<blockquote>\n<p>使用–no-ff 参数后，会执行正常合并，在 Master 分支上生成一个新节点。为了保证版本演进的清晰，推荐采用这种做法</p>\n</blockquote>\n<h3 id=\"Git4个阶段的撤销操作\"><a href=\"#Git4个阶段的撤销操作\" class=\"headerlink\" title=\"Git4个阶段的撤销操作\"></a>Git4 个阶段的撤销操作</h3><blockquote>\n<p>了解 git 阶段首选理解 git 的几个区:</p>\n</blockquote>\n<blockquote>\n<p>工作区 (working area),</p>\n</blockquote>\n<blockquote>\n<p>暂存区 (stage),</p>\n</blockquote>\n<blockquote>\n<p>本地仓库 (local repository),</p>\n</blockquote>\n<blockquote>\n<p>远程仓库 (remote repository).</p>\n</blockquote>\n<blockquote>\n<p>每将文件存到不同的区的时候会产生一个状态，在加上最开始的一个状态总共 5 个状态.</p>\n</blockquote>\n<blockquote>\n<p>未修改 (Origin)</p>\n</blockquote>\n<blockquote>\n<p>已修改 (Modified)</p>\n</blockquote>\n<blockquote>\n<p>已暂存 (Staged)</p>\n</blockquote>\n<blockquote>\n<p>已提交 (Committed)</p>\n</blockquote>\n<blockquote>\n<p>已推送 (Pushed)</p>\n</blockquote>\n<h5 id=\"1-文件处于已修改的状态-即修改过文件-未暂存-add\"><a href=\"#1-文件处于已修改的状态-即修改过文件-未暂存-add\" class=\"headerlink\" title=\"1.文件处于已修改的状态,即修改过文件.未暂存(add)\"></a>1. 文件处于已修改的状态，即修改过文件。未暂存 (add)</h5><blockquote>\n<p>文件已修改，恢复到初始状态 (未做任何修改状态)</p>\n</blockquote>\n<blockquote>\n<p>$git checkout . 或者 $git reset –hard origin/dev    // 恢复到与远程 dev 保持一致的状态，相当于刚 clone dev 的状态</p>\n</blockquote>\n<h5 id=\"2-文件处于已暂存-stage-未提交-commit\"><a href=\"#2-文件处于已暂存-stage-未提交-commit\" class=\"headerlink\" title=\"2.文件处于已暂存(stage),未提交(commit)\"></a>2. 文件处于已暂存 (stage), 未提交 (commit)</h5><blockquote>\n<p>文件已经进行过 git add . 操作，但是还未进行 git commit 操作</p>\n</blockquote>\n<blockquote>\n<p>$git reset  // 恢复到已修改的状态</p>\n</blockquote>\n<blockquote>\n<p>$git checkout . // 继续执行这条，就恢复到初始状态 (未做任何修改状态)</p>\n</blockquote>\n<blockquote>\n<p>如果要实现恢复到初始状态 (未做任何修改状态), 除了通过执行上面 2 步命令外，也可一直接执行下面这句，一步恢复到初始状态</p>\n</blockquote>\n<blockquote>\n<p>$git reset –hard // 一步到初始状态</p>\n</blockquote>\n<h5 id=\"3-文件处于已提交-commit-未推送-push\"><a href=\"#3-文件处于已提交-commit-未推送-push\" class=\"headerlink\" title=\"3.文件处于已提交(commit),未推送(push)\"></a>3. 文件处于已提交 (commit), 未推送 (push)</h5><blockquote>\n<p>这种情况下，代表已经提交到本地仓库了，既然已经污染了你的本地仓库，那么就从远程仓库把代码取回来吧。恢复到初始状态了，</p>\n</blockquote>\n<blockquote>\n<p>$git reset –hard origin/dev  // <b>直接恢复到初始化状态，但已做的修改全部会丢失</b></p>\n</blockquote>\n<h5 id=\"4-文件处于已推送-push\"><a href=\"#4-文件处于已推送-push\" class=\"headerlink\" title=\"4.文件处于已推送(push)\"></a>4. 文件处于已推送 (push)</h5><blockquote>\n<p>既 git add 了，又 git commit 了，并且还 git push 了，这时代码已经进入远程仓库。如果想恢复的话。由于本地仓库和远程仓库是等价的，只需要先恢复本地仓库，再强制 push 到远程仓库就好了</p>\n</blockquote>\n<blockquote>\n<p>$git reset –hard HEAD^   // 将本地恢复到初始状态，<b>之前已做的修改全部会丢失</b></p>\n</blockquote>\n<blockquote>\n<p>$git push -f // 将本地仓库初始化后推送到远程，将远程保持和本地一致</p>\n</blockquote>\n<h5 id=\"注-只要还未影响到本地仓库-local-repository-的时候-即没有commit时-都可以恢复到已修改的状态-一旦commit后-影响了本地仓库-就只能恢复到上一次的本地仓库的版本-所做的修改都会丢失\"><a href=\"#注-只要还未影响到本地仓库-local-repository-的时候-即没有commit时-都可以恢复到已修改的状态-一旦commit后-影响了本地仓库-就只能恢复到上一次的本地仓库的版本-所做的修改都会丢失\" class=\"headerlink\" title=\"注:只要还未影响到本地仓库(local repository)的时候,即没有commit时,都可以恢复到已修改的状态.一旦commit后,影响了本地仓库,就只能恢复到上一次的本地仓库的版本.所做的修改都会丢失..\"></a>注：只要还未影响到本地仓库 (local repository) 的时候，即没有 commit 时，都可以恢复到已修改的状态。一旦 commit 后，影响了本地仓库，就只能恢复到上一次的本地仓库的版本。所做的修改都会丢失..</h5><p>###git 撤销暂存区的文件</p>\n<blockquote>\n<p>有时候执行 git add . 后，将当前目录下的所有改动文件都添加到了暂存区，此时如果有三两个文件是不需要添加进暂存区的，可以执行以下命令将文件从暂存区移除<br>$git rm –cached 文件名</p>\n</blockquote>\n<h3 id=\"git-tag的常用使用\"><a href=\"#git-tag的常用使用\" class=\"headerlink\" title=\"git tag的常用使用\"></a>git tag 的常用使用</h3><blockquote>\n<p>Git 可以对某个版本打上标签 (tag)，表示本版本为发行版</p>\n</blockquote>\n<blockquote>\n<p>$git tag // 查看所有标签</p>\n</blockquote>\n<blockquote>\n<p>$git tag -l 1.0.*  // 打印符合检索条件的标签</p>\n</blockquote>\n<blockquote>\n<p>$git checkout 1.0.0 // 查看对应标签状态</p>\n</blockquote>\n<blockquote>\n<p>$git tag -a 1.0.0 -m “1.0.0 版本” // 创建带备注标签 (推荐)</p>\n</blockquote>\n<blockquote>\n<p>$git tag -a 1.0.0 0c3b62d -m “备注信息” // 针对特定 commit 版本 SHA 创建标签</p>\n</blockquote>\n<blockquote>\n<p>$git tag -d 1.0.0 // 删除本地 1.0.0 标签</p>\n</blockquote>\n<blockquote>\n<p>$git push origin –tags // 将本地所有标签发布到远程仓库</p>\n</blockquote>\n<blockquote>\n<p>$git push origin 1.0.0 // 指定标签版本 (1.0.0) 发送</p>\n</blockquote>\n<blockquote>\n<p>$git push origin –delete 1.0.0 // 删除远程仓库对应标签，此命令需要 Git 版本 &gt; V1.7.0</p>\n</blockquote>\n<blockquote>\n<p>$git push origin :refs/tags/1.0.0 // 删除远程仓库对应标签，此命令需要 Git 版本 &lt; V1.7.0</p>\n</blockquote>\n","excerpt":"","more":"<h3 id=\"对一个已存在的远程仓库进行clone和提交代码操作\"><a href=\"#对一个已存在的远程仓库进行clone和提交代码操作\" class=\"headerlink\" title=\"对一个已存在的远程仓库进行clone和提交代码操作\"></a>对一个已存在的远程仓库进行 clone 和提交代码操作</h3><p>clone 代码</p>\n<blockquote>\n<p>$ git clone [-b branchName] 远程地址 [filefolder name]</p>\n</blockquote>\n<blockquote>\n<p>-b 代表 clone 某个分支，后面跟分支的名称。代码 clone 到本地后，当前路径会多一个与 git 远程项目名相同的文件夹 (手工指定文件夹名除外).</p>\n</blockquote>\n<blockquote>\n<p>$ cd 文件夹名</p>\n</blockquote>\n<p>提交代码:</p>\n<blockquote>\n<p>$ git status // 查看当前工作目录的状态</p>\n</blockquote>\n<blockquote>\n<p>$ git add . 或 git add -u 或 git add -A (git add –all 的缩写) // 添加要提交的文件到 git 暂存区。相关区别：三条命令对应的 git 版本不一样也有区别.</p>\n</blockquote>\n<blockquote>\n<p>git1.x 版本<img src=\"/images/git1.x.jpg\"></p>\n</blockquote>\n<blockquote>\n<p>git2.x 版本<img src=\"/images/git2.x.jpg\"></p>\n</blockquote>\n<blockquote>\n<p>使用 2.x 以上版本的 git 使用 - a 和。是一样的。本人通常使用。更加方便快捷</p>\n</blockquote>\n<blockquote>\n<p>$ git status // 添加文件到暂存区后再次查看确保文件的状态</p>\n</blockquote>\n<blockquote>\n<p>$ git commit -m “注释”</p>\n</blockquote>\n<blockquote>\n<p>$ git remote -v // 查看当前已经存在的 git 远程 url</p>\n</blockquote>\n<blockquote>\n<p>$ git push -u 远程名称 本地要提交的分支：远程分支 // 远程分支不存在的时候会自动在远程创建该名称分支</p>\n</blockquote>\n<h3 id=\"已有代码在用户本地-远程不存在的情况\"><a href=\"#已有代码在用户本地-远程不存在的情况\" class=\"headerlink\" title=\"已有代码在用户本地,远程不存在的情况\"></a>已有代码在用户本地，远程不存在的情况</h3><blockquote>\n<p>$ cd existing_folder</p>\n</blockquote>\n<blockquote>\n<p>$ git init</p>\n</blockquote>\n<blockquote>\n<p>$ git status</p>\n</blockquote>\n<blockquote>\n<p>$ git remote add origin <a href=\"mailto:git@code.aliyun.com\">git@code.aliyun.com</a>:baz/foo.git</p>\n</blockquote>\n<blockquote>\n<p>$ git add .</p>\n</blockquote>\n<blockquote>\n<p>$ git status</p>\n</blockquote>\n<blockquote>\n<p>$ git commit -m “注释”</p>\n</blockquote>\n<blockquote>\n<p>$ git push -u origin master:master // 提交本地 master 到远程 master</p>\n</blockquote>\n<h3 id=\"对远程初始化仓库有git-history-本地代码也有git-history的情况\"><a href=\"#对远程初始化仓库有git-history-本地代码也有git-history的情况\" class=\"headerlink\" title=\"对远程初始化仓库有git history,本地代码也有git history的情况\"></a>对远程初始化仓库有 git history, 本地代码也有 git history 的情况</h3><blockquote>\n<p>针对远程本地都有 git 提交的情况，比较特殊。比如阿里云 code 上面新建项目必须选择对应的模板，会进行对仓库初始化操作。而本地存在之前的项目 (已经含有 git 记录，比如 gitlab,coding 之类的). 推荐方式：先从远程 clone 下来。然后删除 clone 下来的文件夹下的文件 (.git 目录除外). 然后 commit-&gt;push 提交到远程</p>\n</blockquote>\n<p>1. 删除远程仓库不需要的文件</p>\n<blockquote>\n<p>$ git clone alicodeurl xxx</p>\n</blockquote>\n<blockquote>\n<p>$ cd xxx</p>\n</blockquote>\n<blockquote>\n<p>// 去资源文件管理器中手动删除除.git 目录外的其他文件. linux/osx 也可 cd 目录再 rm 删除</p>\n</blockquote>\n<blockquote>\n<p>$ git status</p>\n</blockquote>\n<blockquote>\n<p>$ git add .</p>\n</blockquote>\n<blockquote>\n<p>$ git status</p>\n</blockquote>\n<blockquote>\n<p>$ git commit -m “注释”</p>\n</blockquote>\n<blockquote>\n<p>$ git push -u origin master:master // 提交本地 master 到远程 master</p>\n</blockquote>\n<p>2. 对本地项目进行提交到远程</p>\n<blockquote>\n<p>$ cd project filefolder</p>\n</blockquote>\n<blockquote>\n<p>$ git remote add origin <a href=\"mailto:git@code.aliyun.com\">git@code.aliyun.com</a>:baz/foo.git</p>\n</blockquote>\n<blockquote>\n<p>$ git pull origin master –allow-unrelated-histories // 会弹出 merge 的编辑器，删除或者增加内容后退出</p>\n</blockquote>\n<blockquote>\n<p>$ git add .</p>\n</blockquote>\n<blockquote>\n<p>$ git commit -m “注释”</p>\n</blockquote>\n<blockquote>\n<p>$ git push -u origin master:master // 提交本地 master 到远程 master</p>\n</blockquote>\n<h3 id=\"项目开发中的分支使用\"><a href=\"#项目开发中的分支使用\" class=\"headerlink\" title=\"项目开发中的分支使用\"></a>项目开发中的分支使用</h3><p>切换分支</p>\n<blockquote>\n<p>$ git checkout 分支名称</p>\n</blockquote>\n<p>创建分支 dev</p>\n<blockquote>\n<p>$ git checkout -b dev  // 创建并进入到分支，git branch 可查看当前分支指针状态</p>\n</blockquote>\n<h4 id=\"注\"><a href=\"#注\" class=\"headerlink\" title=\"注\"></a>注</h4><p>约定在 Dev 分支上面进行编码开发。上述的所有提交代码命令必须在 dev 分支上执行，最后的一句 git push 换成以下命令</p>\n<blockquote>\n<p>$ git push -u origin dev:dev // 提交本地 dev 到远程 dev. 第一次远程无 dev 会自动创建 dev</p>\n</blockquote>\n<p>更新远程分支代码到本地:</p>\n<blockquote>\n<p>$ git fetch origin dev //fetch 远程 dev 分支代码 .. 避免使用 pull</p>\n</blockquote>\n<p>在当前分支合并 fetch 下面的代码</p>\n<blockquote>\n<p>$ git merge origin/dev  // 合并从远程 dev 分支 fetch 下来的代码</p>\n</blockquote>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><p>版本正式上线后，需要将 dev 分支发布到 Master 分支。采用以下命令:</p>\n<blockquote>\n<p>$ git checkout master  // 切换到 Master 分支</p>\n</blockquote>\n<blockquote>\n<p>$ git merge –no-ff dev // 对 Dev 分支进行合并</p>\n</blockquote>\n<blockquote>\n<p>使用–no-ff 参数后，会执行正常合并，在 Master 分支上生成一个新节点。为了保证版本演进的清晰，推荐采用这种做法</p>\n</blockquote>\n<h3 id=\"Git4个阶段的撤销操作\"><a href=\"#Git4个阶段的撤销操作\" class=\"headerlink\" title=\"Git4个阶段的撤销操作\"></a>Git4 个阶段的撤销操作</h3><blockquote>\n<p>了解 git 阶段首选理解 git 的几个区:</p>\n</blockquote>\n<blockquote>\n<p>工作区 (working area),</p>\n</blockquote>\n<blockquote>\n<p>暂存区 (stage),</p>\n</blockquote>\n<blockquote>\n<p>本地仓库 (local repository),</p>\n</blockquote>\n<blockquote>\n<p>远程仓库 (remote repository).</p>\n</blockquote>\n<blockquote>\n<p>每将文件存到不同的区的时候会产生一个状态，在加上最开始的一个状态总共 5 个状态.</p>\n</blockquote>\n<blockquote>\n<p>未修改 (Origin)</p>\n</blockquote>\n<blockquote>\n<p>已修改 (Modified)</p>\n</blockquote>\n<blockquote>\n<p>已暂存 (Staged)</p>\n</blockquote>\n<blockquote>\n<p>已提交 (Committed)</p>\n</blockquote>\n<blockquote>\n<p>已推送 (Pushed)</p>\n</blockquote>\n<h5 id=\"1-文件处于已修改的状态-即修改过文件-未暂存-add\"><a href=\"#1-文件处于已修改的状态-即修改过文件-未暂存-add\" class=\"headerlink\" title=\"1.文件处于已修改的状态,即修改过文件.未暂存(add)\"></a>1. 文件处于已修改的状态，即修改过文件。未暂存 (add)</h5><blockquote>\n<p>文件已修改，恢复到初始状态 (未做任何修改状态)</p>\n</blockquote>\n<blockquote>\n<p>$git checkout . 或者 $git reset –hard origin/dev    // 恢复到与远程 dev 保持一致的状态，相当于刚 clone dev 的状态</p>\n</blockquote>\n<h5 id=\"2-文件处于已暂存-stage-未提交-commit\"><a href=\"#2-文件处于已暂存-stage-未提交-commit\" class=\"headerlink\" title=\"2.文件处于已暂存(stage),未提交(commit)\"></a>2. 文件处于已暂存 (stage), 未提交 (commit)</h5><blockquote>\n<p>文件已经进行过 git add . 操作，但是还未进行 git commit 操作</p>\n</blockquote>\n<blockquote>\n<p>$git reset  // 恢复到已修改的状态</p>\n</blockquote>\n<blockquote>\n<p>$git checkout . // 继续执行这条，就恢复到初始状态 (未做任何修改状态)</p>\n</blockquote>\n<blockquote>\n<p>如果要实现恢复到初始状态 (未做任何修改状态), 除了通过执行上面 2 步命令外，也可一直接执行下面这句，一步恢复到初始状态</p>\n</blockquote>\n<blockquote>\n<p>$git reset –hard // 一步到初始状态</p>\n</blockquote>\n<h5 id=\"3-文件处于已提交-commit-未推送-push\"><a href=\"#3-文件处于已提交-commit-未推送-push\" class=\"headerlink\" title=\"3.文件处于已提交(commit),未推送(push)\"></a>3. 文件处于已提交 (commit), 未推送 (push)</h5><blockquote>\n<p>这种情况下，代表已经提交到本地仓库了，既然已经污染了你的本地仓库，那么就从远程仓库把代码取回来吧。恢复到初始状态了，</p>\n</blockquote>\n<blockquote>\n<p>$git reset –hard origin/dev  // <b>直接恢复到初始化状态，但已做的修改全部会丢失</b></p>\n</blockquote>\n<h5 id=\"4-文件处于已推送-push\"><a href=\"#4-文件处于已推送-push\" class=\"headerlink\" title=\"4.文件处于已推送(push)\"></a>4. 文件处于已推送 (push)</h5><blockquote>\n<p>既 git add 了，又 git commit 了，并且还 git push 了，这时代码已经进入远程仓库。如果想恢复的话。由于本地仓库和远程仓库是等价的，只需要先恢复本地仓库，再强制 push 到远程仓库就好了</p>\n</blockquote>\n<blockquote>\n<p>$git reset –hard HEAD^   // 将本地恢复到初始状态，<b>之前已做的修改全部会丢失</b></p>\n</blockquote>\n<blockquote>\n<p>$git push -f // 将本地仓库初始化后推送到远程，将远程保持和本地一致</p>\n</blockquote>\n<h5 id=\"注-只要还未影响到本地仓库-local-repository-的时候-即没有commit时-都可以恢复到已修改的状态-一旦commit后-影响了本地仓库-就只能恢复到上一次的本地仓库的版本-所做的修改都会丢失\"><a href=\"#注-只要还未影响到本地仓库-local-repository-的时候-即没有commit时-都可以恢复到已修改的状态-一旦commit后-影响了本地仓库-就只能恢复到上一次的本地仓库的版本-所做的修改都会丢失\" class=\"headerlink\" title=\"注:只要还未影响到本地仓库(local repository)的时候,即没有commit时,都可以恢复到已修改的状态.一旦commit后,影响了本地仓库,就只能恢复到上一次的本地仓库的版本.所做的修改都会丢失..\"></a>注：只要还未影响到本地仓库 (local repository) 的时候，即没有 commit 时，都可以恢复到已修改的状态。一旦 commit 后，影响了本地仓库，就只能恢复到上一次的本地仓库的版本。所做的修改都会丢失..</h5><p>###git 撤销暂存区的文件</p>\n<blockquote>\n<p>有时候执行 git add . 后，将当前目录下的所有改动文件都添加到了暂存区，此时如果有三两个文件是不需要添加进暂存区的，可以执行以下命令将文件从暂存区移除<br>$git rm –cached 文件名</p>\n</blockquote>\n<h3 id=\"git-tag的常用使用\"><a href=\"#git-tag的常用使用\" class=\"headerlink\" title=\"git tag的常用使用\"></a>git tag 的常用使用</h3><blockquote>\n<p>Git 可以对某个版本打上标签 (tag)，表示本版本为发行版</p>\n</blockquote>\n<blockquote>\n<p>$git tag // 查看所有标签</p>\n</blockquote>\n<blockquote>\n<p>$git tag -l 1.0.*  // 打印符合检索条件的标签</p>\n</blockquote>\n<blockquote>\n<p>$git checkout 1.0.0 // 查看对应标签状态</p>\n</blockquote>\n<blockquote>\n<p>$git tag -a 1.0.0 -m “1.0.0 版本” // 创建带备注标签 (推荐)</p>\n</blockquote>\n<blockquote>\n<p>$git tag -a 1.0.0 0c3b62d -m “备注信息” // 针对特定 commit 版本 SHA 创建标签</p>\n</blockquote>\n<blockquote>\n<p>$git tag -d 1.0.0 // 删除本地 1.0.0 标签</p>\n</blockquote>\n<blockquote>\n<p>$git push origin –tags // 将本地所有标签发布到远程仓库</p>\n</blockquote>\n<blockquote>\n<p>$git push origin 1.0.0 // 指定标签版本 (1.0.0) 发送</p>\n</blockquote>\n<blockquote>\n<p>$git push origin –delete 1.0.0 // 删除远程仓库对应标签，此命令需要 Git 版本 &gt; V1.7.0</p>\n</blockquote>\n<blockquote>\n<p>$git push origin :refs/tags/1.0.0 // 删除远程仓库对应标签，此命令需要 Git 版本 &lt; V1.7.0</p>\n</blockquote>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/git1.x.jpg","popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:16:53 GMT+0800 (China Standard Time)","title":"git 常用的使用总结","path":"2019/03/16/git常用的使用总结/","eyeCatchImage":"/images/git1.x.jpg","excerpt":"Git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目","date":{"_isAMomentObject":true,"_i":"2019-03-16T03:29:32.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2019-03-16T03:29:32.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["Git"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":1778},{"title":"java 实现图片的灰度化处理","date":"2018-06-12T07:36:11.000Z","description":"24位彩色图与8位灰度图","_content":"\n    摘要:24位彩色图与8位灰度图\n\n    在一个24位彩色图像中，每个像素由三个字节表示，通常表示为RGB。\n    通常，许多24位彩色图像存储为32位图像，每个像素多余的字节存储为一个alpha值，表现有特殊影响的信息\n    在RGB模型中，如果R=G=B时，则彩色表示一种灰度颜色，其中R=G=B的值叫灰度值，\n    因此，灰度图像每个像素只需一个字节存放灰度值（又称强度值、亮度值），灰度范围为0-255.\n    这样就得到一幅图片的灰度图\n\n常见的几种灰度化的方法:\n\n    分量法：使用RGB三个分量中的一个作为灰度图的灰度值。\n    最值法：使用RGB三个分量中最大值或最小值作为灰度图的灰度值。\n    均值法：使用RGB三个分量的平均值作为灰度图的灰度值。\n    加权法：由于人眼颜色敏感度不同，按下一定的权值对RGB三分量进行加权平均能得到较合理的灰度图像。\n    一般情况按照：Y = 0.30R + 0.59G + 0.11B.加权法实际上是取一幅图片的亮度值\n    人眼对绿色的敏感最高，对蓝色敏感最低 ）作为灰度值来计算，用到了YUV模型\n\njava编码实现图片灰度化\n\n1.强制设置灰度化的方法（效果相对就差）\n\n    ```java\n    /**\n     * 图片灰化（效果不行，不建议。据说：搜索“Java实现灰度化”，十有八九都是一种方法）\n     *\n     * @param bufferedImage 待处理图片\n     * @return\n     * @throws Exception\n     */\n    public static BufferedImage grayImage(BufferedImage bufferedImage) throws Exception {\n\n        int width = bufferedImage.getWidth();  \n        int height = bufferedImage.getHeight();  \n\n        BufferedImage grayBufferedImage = new BufferedImage(width, height,\n                                        BufferedImage.TYPE_BYTE_GRAY);\n        for (int x = 0; x < width; x++) {  \n            for(int y = 0 ; y < height; y++) {  \n            \tgrayBufferedImage.setRGB(x, y, bufferedImage.getRGB(x, j));  \n            }  \n        }  \n    }\n    ```\n\n2.加权法灰度化（效果较好）\n\n    ```java\n    /**\n     * 图片灰化（参考：http://www.codeceo.com/article/java-image-gray.html）\n     *\n     * @param bufferedImage 待处理图片\n     * @return\n     * @throws Exception\n     */\n    public static BufferedImage grayImage(BufferedImage bufferedImage) throws\n      Exception {\n    \tint width = bufferedImage.getWidth();\n    \tint height = bufferedImage.getHeight();\n    \tBufferedImage grayBufferedImage = new BufferedImage(width, height,\n                                        BufferedImage.TYPE_BYTE_GRAY);\n    \tfor (int x = 0; x < width; x++) {\n    \t\tfor (int y = 0; y < height; y++) {\n    \t\t\t// 计算灰度值\n    \t\t\tfinal int color = bufferedImage.getRGB(x, y);\n    \t\t\tfinal int r = (color >> 16) & 0xff;\n    \t\t\tfinal int g = (color >> 8) & 0xff;\n    \t\t\tfinal int b = color & 0xff;\n    \t\t\tint gray = (int) (0.3 * r + 0.59 * g + 0.11 * b);\n    \t\t\tint newPixel = colorToRGB(255, gray, gray, gray);\n    \t\t\tgrayBufferedImage.setRGB(x, y, newPixel);\n    \t\t}\n    \t}\n    \treturn grayBufferedImage;\n    }\n\n    /**\n     * 颜色分量转换为RGB值\n     *\n     * @param alpha\n     * @param red\n     * @param green\n     * @param blue\n     * @return\n     */\n    private static int colorToRGB(int alpha, int red, int green, int blue) {\n    \tint newPixel = 0;\n    \tnewPixel += alpha;\n    \tnewPixel = newPixel << 8;\n    \tnewPixel += red;\n    \tnewPixel = newPixel << 8;\n    \tnewPixel += green;\n    \tnewPixel = newPixel << 8;\n    \tnewPixel += blue;\n    \treturn newPixel;\n    }\n    ```\n","source":"_posts/java实现图片的灰度化处理.md","raw":"---\ntitle: java实现图片的灰度化处理\ndate: 2018-06-12 15:36:11\ntags: java\ndescription: 24位彩色图与8位灰度图\n---\n\n    摘要:24位彩色图与8位灰度图\n\n    在一个24位彩色图像中，每个像素由三个字节表示，通常表示为RGB。\n    通常，许多24位彩色图像存储为32位图像，每个像素多余的字节存储为一个alpha值，表现有特殊影响的信息\n    在RGB模型中，如果R=G=B时，则彩色表示一种灰度颜色，其中R=G=B的值叫灰度值，\n    因此，灰度图像每个像素只需一个字节存放灰度值（又称强度值、亮度值），灰度范围为0-255.\n    这样就得到一幅图片的灰度图\n\n常见的几种灰度化的方法:\n\n    分量法：使用RGB三个分量中的一个作为灰度图的灰度值。\n    最值法：使用RGB三个分量中最大值或最小值作为灰度图的灰度值。\n    均值法：使用RGB三个分量的平均值作为灰度图的灰度值。\n    加权法：由于人眼颜色敏感度不同，按下一定的权值对RGB三分量进行加权平均能得到较合理的灰度图像。\n    一般情况按照：Y = 0.30R + 0.59G + 0.11B.加权法实际上是取一幅图片的亮度值\n    人眼对绿色的敏感最高，对蓝色敏感最低 ）作为灰度值来计算，用到了YUV模型\n\njava编码实现图片灰度化\n\n1.强制设置灰度化的方法（效果相对就差）\n\n    ```java\n    /**\n     * 图片灰化（效果不行，不建议。据说：搜索“Java实现灰度化”，十有八九都是一种方法）\n     *\n     * @param bufferedImage 待处理图片\n     * @return\n     * @throws Exception\n     */\n    public static BufferedImage grayImage(BufferedImage bufferedImage) throws Exception {\n\n        int width = bufferedImage.getWidth();  \n        int height = bufferedImage.getHeight();  \n\n        BufferedImage grayBufferedImage = new BufferedImage(width, height,\n                                        BufferedImage.TYPE_BYTE_GRAY);\n        for (int x = 0; x < width; x++) {  \n            for(int y = 0 ; y < height; y++) {  \n            \tgrayBufferedImage.setRGB(x, y, bufferedImage.getRGB(x, j));  \n            }  \n        }  \n    }\n    ```\n\n2.加权法灰度化（效果较好）\n\n    ```java\n    /**\n     * 图片灰化（参考：http://www.codeceo.com/article/java-image-gray.html）\n     *\n     * @param bufferedImage 待处理图片\n     * @return\n     * @throws Exception\n     */\n    public static BufferedImage grayImage(BufferedImage bufferedImage) throws\n      Exception {\n    \tint width = bufferedImage.getWidth();\n    \tint height = bufferedImage.getHeight();\n    \tBufferedImage grayBufferedImage = new BufferedImage(width, height,\n                                        BufferedImage.TYPE_BYTE_GRAY);\n    \tfor (int x = 0; x < width; x++) {\n    \t\tfor (int y = 0; y < height; y++) {\n    \t\t\t// 计算灰度值\n    \t\t\tfinal int color = bufferedImage.getRGB(x, y);\n    \t\t\tfinal int r = (color >> 16) & 0xff;\n    \t\t\tfinal int g = (color >> 8) & 0xff;\n    \t\t\tfinal int b = color & 0xff;\n    \t\t\tint gray = (int) (0.3 * r + 0.59 * g + 0.11 * b);\n    \t\t\tint newPixel = colorToRGB(255, gray, gray, gray);\n    \t\t\tgrayBufferedImage.setRGB(x, y, newPixel);\n    \t\t}\n    \t}\n    \treturn grayBufferedImage;\n    }\n\n    /**\n     * 颜色分量转换为RGB值\n     *\n     * @param alpha\n     * @param red\n     * @param green\n     * @param blue\n     * @return\n     */\n    private static int colorToRGB(int alpha, int red, int green, int blue) {\n    \tint newPixel = 0;\n    \tnewPixel += alpha;\n    \tnewPixel = newPixel << 8;\n    \tnewPixel += red;\n    \tnewPixel = newPixel << 8;\n    \tnewPixel += green;\n    \tnewPixel = newPixel << 8;\n    \tnewPixel += blue;\n    \treturn newPixel;\n    }\n    ```\n","slug":"java实现图片的灰度化处理","published":1,"updated":"2025-04-22T08:16:58.562Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745ir000xd8gk95fx95jn","content":"<pre><code>摘要:24位彩色图与8位灰度图\n\n在一个24位彩色图像中，每个像素由三个字节表示，通常表示为RGB。\n通常，许多24位彩色图像存储为32位图像，每个像素多余的字节存储为一个alpha值，表现有特殊影响的信息\n在RGB模型中，如果R=G=B时，则彩色表示一种灰度颜色，其中R=G=B的值叫灰度值，\n因此，灰度图像每个像素只需一个字节存放灰度值（又称强度值、亮度值），灰度范围为0-255.\n这样就得到一幅图片的灰度图\n</code></pre>\n<p>常见的几种灰度化的方法:</p>\n<pre><code>分量法：使用RGB三个分量中的一个作为灰度图的灰度值。\n最值法：使用RGB三个分量中最大值或最小值作为灰度图的灰度值。\n均值法：使用RGB三个分量的平均值作为灰度图的灰度值。\n加权法：由于人眼颜色敏感度不同，按下一定的权值对RGB三分量进行加权平均能得到较合理的灰度图像。\n一般情况按照：Y = 0.30R + 0.59G + 0.11B.加权法实际上是取一幅图片的亮度值\n人眼对绿色的敏感最高，对蓝色敏感最低 ）作为灰度值来计算，用到了YUV模型\n</code></pre>\n<p>java 编码实现图片灰度化</p>\n<p>1. 强制设置灰度化的方法（效果相对就差）</p>\n<pre><code><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * 图片灰化（效果不行，不建议。据说：搜索“Java实现灰度化”，十有八九都是一种方法）\n *\n * @param bufferedImage 待处理图片\n * @return\n * @throws Exception\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">BufferedImage</span> <span class=\"token function\">grayImage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BufferedImage</span> bufferedImage<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">int</span> width <span class=\"token operator\">=</span> bufferedImage<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token keyword\">int</span> height <span class=\"token operator\">=</span> bufferedImage<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\n    <span class=\"token class-name\">BufferedImage</span> grayBufferedImage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedImage</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span>\n                                    <span class=\"token class-name\">BufferedImage</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TYPE_BYTE_GRAY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> width<span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> height<span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n        \tgrayBufferedImage<span class=\"token punctuation\">.</span><span class=\"token function\">setRGB</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> bufferedImage<span class=\"token punctuation\">.</span><span class=\"token function\">getRGB</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token punctuation\">}</span>  \n    <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</code></pre>\n<p>2. 加权法灰度化（效果较好）</p>\n<pre><code><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * 图片灰化（参考：http://www.codeceo.com/article/java-image-gray.html）\n *\n * @param bufferedImage 待处理图片\n * @return\n * @throws Exception\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">BufferedImage</span> <span class=\"token function\">grayImage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BufferedImage</span> bufferedImage<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span>\n  <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> width <span class=\"token operator\">=</span> bufferedImage<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> height <span class=\"token operator\">=</span> bufferedImage<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">BufferedImage</span> grayBufferedImage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedImage</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span>\n                                    <span class=\"token class-name\">BufferedImage</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TYPE_BYTE_GRAY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> width<span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> height<span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\">// 计算灰度值</span>\n\t\t\t<span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> color <span class=\"token operator\">=</span> bufferedImage<span class=\"token punctuation\">.</span><span class=\"token function\">getRGB</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>color <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> g <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>color <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> color <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> gray <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.3</span> <span class=\"token operator\">*</span> r <span class=\"token operator\">+</span> <span class=\"token number\">0.59</span> <span class=\"token operator\">*</span> g <span class=\"token operator\">+</span> <span class=\"token number\">0.11</span> <span class=\"token operator\">*</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> newPixel <span class=\"token operator\">=</span> <span class=\"token function\">colorToRGB</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> gray<span class=\"token punctuation\">,</span> gray<span class=\"token punctuation\">,</span> gray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tgrayBufferedImage<span class=\"token punctuation\">.</span><span class=\"token function\">setRGB</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> newPixel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> grayBufferedImage<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * 颜色分量转换为RGB值\n *\n * @param alpha\n * @param red\n * @param green\n * @param blue\n * @return\n */</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">colorToRGB</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> alpha<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> red<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> green<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> blue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> newPixel <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tnewPixel <span class=\"token operator\">+=</span> alpha<span class=\"token punctuation\">;</span>\n\tnewPixel <span class=\"token operator\">=</span> newPixel <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\tnewPixel <span class=\"token operator\">+=</span> red<span class=\"token punctuation\">;</span>\n\tnewPixel <span class=\"token operator\">=</span> newPixel <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\tnewPixel <span class=\"token operator\">+=</span> green<span class=\"token punctuation\">;</span>\n\tnewPixel <span class=\"token operator\">=</span> newPixel <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\tnewPixel <span class=\"token operator\">+=</span> blue<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> newPixel<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</code></pre>\n","excerpt":"","more":"<pre><code>摘要:24位彩色图与8位灰度图\n\n在一个24位彩色图像中，每个像素由三个字节表示，通常表示为RGB。\n通常，许多24位彩色图像存储为32位图像，每个像素多余的字节存储为一个alpha值，表现有特殊影响的信息\n在RGB模型中，如果R=G=B时，则彩色表示一种灰度颜色，其中R=G=B的值叫灰度值，\n因此，灰度图像每个像素只需一个字节存放灰度值（又称强度值、亮度值），灰度范围为0-255.\n这样就得到一幅图片的灰度图\n</code></pre>\n<p>常见的几种灰度化的方法:</p>\n<pre><code>分量法：使用RGB三个分量中的一个作为灰度图的灰度值。\n最值法：使用RGB三个分量中最大值或最小值作为灰度图的灰度值。\n均值法：使用RGB三个分量的平均值作为灰度图的灰度值。\n加权法：由于人眼颜色敏感度不同，按下一定的权值对RGB三分量进行加权平均能得到较合理的灰度图像。\n一般情况按照：Y = 0.30R + 0.59G + 0.11B.加权法实际上是取一幅图片的亮度值\n人眼对绿色的敏感最高，对蓝色敏感最低 ）作为灰度值来计算，用到了YUV模型\n</code></pre>\n<p>java 编码实现图片灰度化</p>\n<p>1. 强制设置灰度化的方法（效果相对就差）</p>\n<pre><code><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * 图片灰化（效果不行，不建议。据说：搜索“Java实现灰度化”，十有八九都是一种方法）\n *\n * @param bufferedImage 待处理图片\n * @return\n * @throws Exception\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">BufferedImage</span> <span class=\"token function\">grayImage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BufferedImage</span> bufferedImage<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">int</span> width <span class=\"token operator\">=</span> bufferedImage<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token keyword\">int</span> height <span class=\"token operator\">=</span> bufferedImage<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\n    <span class=\"token class-name\">BufferedImage</span> grayBufferedImage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedImage</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span>\n                                    <span class=\"token class-name\">BufferedImage</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TYPE_BYTE_GRAY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> width<span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> height<span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n        \tgrayBufferedImage<span class=\"token punctuation\">.</span><span class=\"token function\">setRGB</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> bufferedImage<span class=\"token punctuation\">.</span><span class=\"token function\">getRGB</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token punctuation\">}</span>  \n    <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</code></pre>\n<p>2. 加权法灰度化（效果较好）</p>\n<pre><code><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * 图片灰化（参考：http://www.codeceo.com/article/java-image-gray.html）\n *\n * @param bufferedImage 待处理图片\n * @return\n * @throws Exception\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">BufferedImage</span> <span class=\"token function\">grayImage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BufferedImage</span> bufferedImage<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span>\n  <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> width <span class=\"token operator\">=</span> bufferedImage<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> height <span class=\"token operator\">=</span> bufferedImage<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">BufferedImage</span> grayBufferedImage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedImage</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span>\n                                    <span class=\"token class-name\">BufferedImage</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TYPE_BYTE_GRAY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> width<span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> height<span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\">// 计算灰度值</span>\n\t\t\t<span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> color <span class=\"token operator\">=</span> bufferedImage<span class=\"token punctuation\">.</span><span class=\"token function\">getRGB</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>color <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> g <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>color <span class=\"token operator\">&gt;&gt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> color <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> gray <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.3</span> <span class=\"token operator\">*</span> r <span class=\"token operator\">+</span> <span class=\"token number\">0.59</span> <span class=\"token operator\">*</span> g <span class=\"token operator\">+</span> <span class=\"token number\">0.11</span> <span class=\"token operator\">*</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> newPixel <span class=\"token operator\">=</span> <span class=\"token function\">colorToRGB</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> gray<span class=\"token punctuation\">,</span> gray<span class=\"token punctuation\">,</span> gray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tgrayBufferedImage<span class=\"token punctuation\">.</span><span class=\"token function\">setRGB</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> newPixel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> grayBufferedImage<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * 颜色分量转换为RGB值\n *\n * @param alpha\n * @param red\n * @param green\n * @param blue\n * @return\n */</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">colorToRGB</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> alpha<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> red<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> green<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> blue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> newPixel <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tnewPixel <span class=\"token operator\">+=</span> alpha<span class=\"token punctuation\">;</span>\n\tnewPixel <span class=\"token operator\">=</span> newPixel <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\tnewPixel <span class=\"token operator\">+=</span> red<span class=\"token punctuation\">;</span>\n\tnewPixel <span class=\"token operator\">=</span> newPixel <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\tnewPixel <span class=\"token operator\">+=</span> green<span class=\"token punctuation\">;</span>\n\tnewPixel <span class=\"token operator\">=</span> newPixel <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\tnewPixel <span class=\"token operator\">+=</span> blue<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> newPixel<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</code></pre>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:16:58 GMT+0800 (China Standard Time)","title":"java 实现图片的灰度化处理","path":"2018/06/12/java实现图片的灰度化处理/","eyeCatchImage":null,"excerpt":"24位彩色图与8位灰度图","date":{"_isAMomentObject":true,"_i":"2018-06-12T07:36:11.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-06-12T07:36:11.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["java"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":387},{"title":"linux 下 nginx 部署配置多站点","date":"2018-05-13T03:25:50.000Z","description":"在nginx上面配置部署多个站点","_content":"\n    摘要:\n      有时候你想在一台服务器上为不同的域名运行不同的站点。\n      比如www.siteA.com作为博客，www.siteB.com作为论坛。你可以把两个域名的IP都解析到你的服务器上，\n      但是没法在Nginx的根目录里同时运行两个不同的网站.\n      这时可以在nginx上面配置部署多个站点(使用nginx虚拟目录),为你节省服务器费用.\n      假设你把博客放在”/home/user/www/blog”下，论坛放在”/home/user/www/forum”下。下面我们就开始进行配置:\n\n1.在Nginx配置目录下，创建一个”vhost”目录。本例假设Nginx是默认安装，配置目录在”/etc/nginx”\n\n`sudo mkdir /etc/nginx/vhost #创建保存站点配置文件的目录`\n\n2.创建siteA的配置文件\n\n'sudo vim /etc/nginx/vhost/siteA.conf #打开该文件(没有的话保存后会自动新建)'\n\n在文件里面输入以下配置内容(具体的相关目录及location内容根据自己实际情况修改,下面只是nginx配置文件的基本结构,其实可以拷贝nginx自带的配置文件到vhost目录下,然后对文件内容进行修改):\n\n    server {\n      listen 80; # 监听端口\n      server_name www.siteA.com siteA.com; # 站点域名\n      root /home/user/www/blog; # 站点根目录\n      index index.html index.htm index.php; # 默认导航页\n\n      #rewrite ^(.*) https://$host$1 permanent; #重定向到https\n\n      location / {\n        # WordPress固定链接URL重写\n        if (!-e $request_filename) {\n          rewrite (.*) /index.php;\n        }\n      }\n      location / {\n        # WordPress固定链接URL重写\n        if (!-e $request_filename) {\n          rewrite (.*) /index.php;\n        }\n      }\n      location ^~ /device/ {\n    \t  proxy_pass http://127.0.0.1:8080;\n      }\n      location ^~ /upload/ {  \n        root  /aaa/bbb;\n        expires   7d;\n      }\n    }\n\n3.跟第二步一样,创建siteB的配置文件.(\"server_name”和\"root”目录的内容和siteA不同)\n\n'sudo vim /etc/nginx/vhost/siteB.conf #打开该文件(没有的话保存后会自动新建)'\n\n在文件里面输入以下配置内容(具体的相关目录及location内容根据自己实际情况修改,下面只是nginx配置文件的基本结构,其实可以拷贝nginx自带的配置文件到vhost目录下,然后对文件内容进行修改):\n\n    server {\n      listen 80; # 监听端口\n      server_name www.siteB.com siteB.com; # 站点域名\n      root /home/user/www/blog; # 站点根目录\n      index index.html index.htm index.php; # 默认导航页\n\n      #rewrite ^(.*) https://$host$1 permanent; #重定向到https\n\n      location / {\n        # WordPress固定链接URL重写\n        if (!-e $request_filename) {\n          rewrite (.*) /index.php;\n        }\n      }\n      location ^~ /device/ {\n    \t  proxy_pass http://127.0.0.1:8080;\n      }\n      location ^~ /upload/ {  \n        root  /aaa/bbb;\n        expires   7d;\n      }\n      # websocket地址\n      location ^~ /ws {\n\t\t    proxy_pass http://127.0.0.1:10002;\n\t    }\n    }\n\n4.打开编辑nginx的配置文件\n\n`sudo vim /etc/nginx/nginx.conf`\n\n将我们第一步创建的虚拟目录的路径增加到nginx.conf文件中去,将下面的内容加入到”http {}”部分的末尾\n\n    http {\n      ...\n      include /etc/nginx/vhost/*.conf;\n    }\n\n5.重启nginx服务(注意:所有的配置文件修改保存后,先不急重新加载配置,先使用`nginx -t`测试下文件内容是否有错在进行重新加载配置操作)\n\n`sudo service nginx restart`\n\n6.访问www.siteA.com和www.siteB.com，你将发现浏览器会打开不同的站点\n\nnginx禁止ip访问的小技巧:\n\n假如你的Nginx根目录设在”/home/user/www”，你想阻止别人通过”http://IP地址/blog”或”http://IP地址/forum”来访问你的站点，最简单的方法就是禁止IP地址访问。方法如下：\n\n打开Nginx网站默认配置文件，记得先备份\n\n`sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/default_bak #备份原来的默认文件`\n\n`sudo vim /etc/nginx/sites-available/default #编辑文件`\n\n将其所有内容删除，只留以下配置\n\n    server {\n      listen 80 default_server;\n      server_name _;\n      return 404;\n    }\n\n然后重启nginx或者`nginx -s reload`使配置文件生效,别人将无法通过IP地址访问网站了\n\n如果你不想禁止IP地址访问整个目录，只是要防止别人通过IP访问你的博客和论坛。那就需要禁止”/blog”和”/forum”的目录访问\n\n打开Nginx网站默认配置文件，同上面一样，记得先备份一下\n\n在\"server { }\"节点的部分加上以下配置,然后重启nginx或者reload nginx配置即可.\n\n    location ^~ /blog/ {\n      deny all;\n    }\n    location ^~ /forum/ {\n      deny all;\n    }\n\n7.nginx常用的配置选项模板\n    /etc/nginx/nginx.conf\n\n    http {\n      sendfile on;\n      tcp_nopush on;\n      tcp_nodelay on;\n      keepalive_timeout 65;\n      types_hash_max_size 2048;\n      server_tokens off; # 关闭nginx版本标识\n\n      underscores_in_headers on; #自定义Header中含有下划线的情况 必须定义\n      gzip  on;\n      gzip_min_length 1k;\n      gzip_buffers 16 64k;\n      gzip_http_version 1.1;\n      gzip_comp_level 6;\n      gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;\n      gzip_vary on;\n      gzip_disable \"MSIE [1-6]\\.\";\n\n      #proxy_connect_timeout 600;  #nginx跟后端服务器连接超时时间(代理连接超时)\n      \n      proxy_buffer_size     32k;  #设置代理服务器（nginx）保存用户头信息的缓冲区大小\n      proxy_buffers         4 32k;#proxy_buffers缓冲区，网页平均在32k以下的话，这样设置\n      proxy_busy_buffers_size  64k;           #高负荷下缓冲大小（proxy_buffers*2）\n      proxy_temp_file_write_size  1024m;       #设定缓存文件夹大小，大于这个值，将从upstream服务器传\n      client_max_body_size 100M;\n\n      # 给后端服务器暴露获取客户端真实IP地址的头\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header REMOTE-HOST $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n      # websocket 支持\n      proxy_http_version 1.1;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection \"upgrade\";\n      proxy_read_timeout    600;  #连接成功后，后端服务器响应时间(代理接收超时)\n      proxy_send_timeout    600;  #后端服务器数据回传时间(代理发送超时)\n    }\n\n8.站点配置文件样例,例如:/etc/nginx/vhost/a.conf\n\n    server {\n      listen          80;\n      server_name     www.aaa.com  aaa.com;\n      root            /opt/pages/;\n      index           index.html index.htm;\n\n      # Cookie的HttpOnly属性，指示浏览器不要在除HTTP（和HTTPS)请求之外暴露Cookie。一个有HttpOnly属性的Cookie，是不可以通过例如调用JavaScript(引用document.cookie)这种非HTTP方式来访问。因此，也不可能通过跨域脚本（一种非常普通的攻击技术）来偷走这种Cookie。\n      add_header                  Set-Cookie \"HttpOnly\";\n      # Cookie的Secure属性，意味着保持Cookie通信只限于加密传输，指示浏览器仅仅在通过安全/加密连接才能使用该Cookie。如果一个Web服务器从一个非安全连接里设置了一个带有secure属性的Cookie，当Cookie被发送到客户端时，它仍然能通过中间人攻击来拦截\n      add_header                  Set-Cookie \"Secure\";\n      # X-Frame-Options HTTP 响应头是用来给浏览器指示允许一个页面可否在 <frame>, <iframe> 或者 <object> 中展现的标记。网站可以使用此功能，来确保自己网站的内容没有被嵌到别人的网站中去，也从而避免了点击劫持 (clickjacking) 的攻击。它有三个可选择项：(DENY：表示该页面不允许在 frame 中展示，即便是在相同域名的页面中嵌套也不允许；SAMEORIGIN：表示该页面可以在相同域名页面的 frame 中展示；ALLOW-FROM uri地址：表示该页面可以在指定来源的 frame 中展示；)\n      add_header                  X-Frame-Options \"SAMEORIGIN\";\n\n      # 禁用OPTIONS TRACE不安全方法,屏蔽GET、POST、之外的HTTP方法\n      if ($request_method !~* GET|POST) {\n          return 403;\n      }\n\n      # 跨域配置\n      location / {\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';\n        add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';\n\n        if ($request_method = 'OPTIONS') {\n          return 204;\n        }\n      }\n\n      # 转发以/api/开头的请求\n      location ^~ /api/ {\n        proxy_pass http://127.0.0.1:8080;\n      }\n\n      # 以/upload开头的请求\n      location ^~ /upload/ {\n        root  /opt/dir/;\n        expires   7d;\n      }\n    }\n\n9.nginx负载均衡配置\n  \n  在http节点下配置服务器列表\n\n    http {\n      # upstream模块：配置反向代理服务器组，Nginx会根据配置，将请求分发给组里的某一台服务器。serverGroup是服务器组的名称.\n      upstream serverGroup {\n        server 192.168.0.100:8080;\n        server 192.168.0.101:8080;\n      }\n      # serverGroup内部的server指令：配置处理请求的服务器IP或域名，端口可选，不配置默认使用80端口。通过上面的配置(默认的是轮询策略,把每个请求逐一分配到不同的server，如果分配到的server不可用，则分配到下一个，直到可用)，Nginx默认将请求依次分配给100，101来处理，可以通过修改下面这些参数来改变默认的分配策略：\n\n      1.weight权重,默认为1，将请求平均分配给每台server.值越大，则被访问的概率越大.下面标示101访问数量是100的2倍\n      upstream serverGroup {\n        server 192.168.0.100:8080 weight=1;\n        server 192.168.0.101:8080 weight=2 max_fails=3 fail_timeout=15;\n        server 192.168.0.102:8080 down; #down 表示当前服务器不参与负载均衡，也就是说不会被访问到\n        server 192.168.0.103:8080 backup; #backup 表示备份机，所有服务器挂了之后才会生效\n      }\n      max_fails:默认为1。某台Server允许请求失败的次数，超过最大次数后，在fail_timeout时间内，新的请求将不会分配给这台机器。如果设置为0，Nginx会将这台Server置为永久无效状态，然后将请求发给定义了proxy_next_upstream fastcgi_next_upstream, uwsgi_next_upstream, scgi_next_upstream, and memcached_next_upstream指令来处理这次错误的请求\n      fail_timeout:默认为10秒。某台Server达到max_fails次失败请求后，在fail_timeout期间内，nginx会认为这台Server暂时不可用，不会将请求分配给它\n\n      2.最少连接,把请求分配到连接数最少的server\n      upstream serverGroup {\n        least_conn;\n        server 192.168.0.100:8080;\n        server 192.168.0.101:8080;\n      }\n\n      3.ip_hash,根据访问客户端ip的hash值分配，这样同一客户端的请求都会被分配到同一个server上，如果牵扯到session的问题，用这个是最好的选择\n      upstream serverGroup {\n        ip_hash;\n        server 192.168.0.100:8080;\n        server 192.168.0.101:8080;\n      }\n    }\n\n  在server节点下配置proxy_pass\n\n    server {\n        listen  80;\n        server_name serverGroup;\n        location / {\n          proxy_pass   http://serverGroup; # 表示将所有请求转发到tomcats服务器组中配置的某一台服务器上\n        }\n    }","source":"_posts/linux下nginx部署配置多站点.md","raw":"---\ntitle: linux下nginx部署配置多站点\ndate: 2018-05-13 11:25:50\ndescription: 在nginx上面配置部署多个站点\ntags:\n  - linux\n  - nginx\n---\n\n    摘要:\n      有时候你想在一台服务器上为不同的域名运行不同的站点。\n      比如www.siteA.com作为博客，www.siteB.com作为论坛。你可以把两个域名的IP都解析到你的服务器上，\n      但是没法在Nginx的根目录里同时运行两个不同的网站.\n      这时可以在nginx上面配置部署多个站点(使用nginx虚拟目录),为你节省服务器费用.\n      假设你把博客放在”/home/user/www/blog”下，论坛放在”/home/user/www/forum”下。下面我们就开始进行配置:\n\n1.在Nginx配置目录下，创建一个”vhost”目录。本例假设Nginx是默认安装，配置目录在”/etc/nginx”\n\n`sudo mkdir /etc/nginx/vhost #创建保存站点配置文件的目录`\n\n2.创建siteA的配置文件\n\n'sudo vim /etc/nginx/vhost/siteA.conf #打开该文件(没有的话保存后会自动新建)'\n\n在文件里面输入以下配置内容(具体的相关目录及location内容根据自己实际情况修改,下面只是nginx配置文件的基本结构,其实可以拷贝nginx自带的配置文件到vhost目录下,然后对文件内容进行修改):\n\n    server {\n      listen 80; # 监听端口\n      server_name www.siteA.com siteA.com; # 站点域名\n      root /home/user/www/blog; # 站点根目录\n      index index.html index.htm index.php; # 默认导航页\n\n      #rewrite ^(.*) https://$host$1 permanent; #重定向到https\n\n      location / {\n        # WordPress固定链接URL重写\n        if (!-e $request_filename) {\n          rewrite (.*) /index.php;\n        }\n      }\n      location / {\n        # WordPress固定链接URL重写\n        if (!-e $request_filename) {\n          rewrite (.*) /index.php;\n        }\n      }\n      location ^~ /device/ {\n    \t  proxy_pass http://127.0.0.1:8080;\n      }\n      location ^~ /upload/ {  \n        root  /aaa/bbb;\n        expires   7d;\n      }\n    }\n\n3.跟第二步一样,创建siteB的配置文件.(\"server_name”和\"root”目录的内容和siteA不同)\n\n'sudo vim /etc/nginx/vhost/siteB.conf #打开该文件(没有的话保存后会自动新建)'\n\n在文件里面输入以下配置内容(具体的相关目录及location内容根据自己实际情况修改,下面只是nginx配置文件的基本结构,其实可以拷贝nginx自带的配置文件到vhost目录下,然后对文件内容进行修改):\n\n    server {\n      listen 80; # 监听端口\n      server_name www.siteB.com siteB.com; # 站点域名\n      root /home/user/www/blog; # 站点根目录\n      index index.html index.htm index.php; # 默认导航页\n\n      #rewrite ^(.*) https://$host$1 permanent; #重定向到https\n\n      location / {\n        # WordPress固定链接URL重写\n        if (!-e $request_filename) {\n          rewrite (.*) /index.php;\n        }\n      }\n      location ^~ /device/ {\n    \t  proxy_pass http://127.0.0.1:8080;\n      }\n      location ^~ /upload/ {  \n        root  /aaa/bbb;\n        expires   7d;\n      }\n      # websocket地址\n      location ^~ /ws {\n\t\t    proxy_pass http://127.0.0.1:10002;\n\t    }\n    }\n\n4.打开编辑nginx的配置文件\n\n`sudo vim /etc/nginx/nginx.conf`\n\n将我们第一步创建的虚拟目录的路径增加到nginx.conf文件中去,将下面的内容加入到”http {}”部分的末尾\n\n    http {\n      ...\n      include /etc/nginx/vhost/*.conf;\n    }\n\n5.重启nginx服务(注意:所有的配置文件修改保存后,先不急重新加载配置,先使用`nginx -t`测试下文件内容是否有错在进行重新加载配置操作)\n\n`sudo service nginx restart`\n\n6.访问www.siteA.com和www.siteB.com，你将发现浏览器会打开不同的站点\n\nnginx禁止ip访问的小技巧:\n\n假如你的Nginx根目录设在”/home/user/www”，你想阻止别人通过”http://IP地址/blog”或”http://IP地址/forum”来访问你的站点，最简单的方法就是禁止IP地址访问。方法如下：\n\n打开Nginx网站默认配置文件，记得先备份\n\n`sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/default_bak #备份原来的默认文件`\n\n`sudo vim /etc/nginx/sites-available/default #编辑文件`\n\n将其所有内容删除，只留以下配置\n\n    server {\n      listen 80 default_server;\n      server_name _;\n      return 404;\n    }\n\n然后重启nginx或者`nginx -s reload`使配置文件生效,别人将无法通过IP地址访问网站了\n\n如果你不想禁止IP地址访问整个目录，只是要防止别人通过IP访问你的博客和论坛。那就需要禁止”/blog”和”/forum”的目录访问\n\n打开Nginx网站默认配置文件，同上面一样，记得先备份一下\n\n在\"server { }\"节点的部分加上以下配置,然后重启nginx或者reload nginx配置即可.\n\n    location ^~ /blog/ {\n      deny all;\n    }\n    location ^~ /forum/ {\n      deny all;\n    }\n\n7.nginx常用的配置选项模板\n    /etc/nginx/nginx.conf\n\n    http {\n      sendfile on;\n      tcp_nopush on;\n      tcp_nodelay on;\n      keepalive_timeout 65;\n      types_hash_max_size 2048;\n      server_tokens off; # 关闭nginx版本标识\n\n      underscores_in_headers on; #自定义Header中含有下划线的情况 必须定义\n      gzip  on;\n      gzip_min_length 1k;\n      gzip_buffers 16 64k;\n      gzip_http_version 1.1;\n      gzip_comp_level 6;\n      gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;\n      gzip_vary on;\n      gzip_disable \"MSIE [1-6]\\.\";\n\n      #proxy_connect_timeout 600;  #nginx跟后端服务器连接超时时间(代理连接超时)\n      \n      proxy_buffer_size     32k;  #设置代理服务器（nginx）保存用户头信息的缓冲区大小\n      proxy_buffers         4 32k;#proxy_buffers缓冲区，网页平均在32k以下的话，这样设置\n      proxy_busy_buffers_size  64k;           #高负荷下缓冲大小（proxy_buffers*2）\n      proxy_temp_file_write_size  1024m;       #设定缓存文件夹大小，大于这个值，将从upstream服务器传\n      client_max_body_size 100M;\n\n      # 给后端服务器暴露获取客户端真实IP地址的头\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header REMOTE-HOST $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n      # websocket 支持\n      proxy_http_version 1.1;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection \"upgrade\";\n      proxy_read_timeout    600;  #连接成功后，后端服务器响应时间(代理接收超时)\n      proxy_send_timeout    600;  #后端服务器数据回传时间(代理发送超时)\n    }\n\n8.站点配置文件样例,例如:/etc/nginx/vhost/a.conf\n\n    server {\n      listen          80;\n      server_name     www.aaa.com  aaa.com;\n      root            /opt/pages/;\n      index           index.html index.htm;\n\n      # Cookie的HttpOnly属性，指示浏览器不要在除HTTP（和HTTPS)请求之外暴露Cookie。一个有HttpOnly属性的Cookie，是不可以通过例如调用JavaScript(引用document.cookie)这种非HTTP方式来访问。因此，也不可能通过跨域脚本（一种非常普通的攻击技术）来偷走这种Cookie。\n      add_header                  Set-Cookie \"HttpOnly\";\n      # Cookie的Secure属性，意味着保持Cookie通信只限于加密传输，指示浏览器仅仅在通过安全/加密连接才能使用该Cookie。如果一个Web服务器从一个非安全连接里设置了一个带有secure属性的Cookie，当Cookie被发送到客户端时，它仍然能通过中间人攻击来拦截\n      add_header                  Set-Cookie \"Secure\";\n      # X-Frame-Options HTTP 响应头是用来给浏览器指示允许一个页面可否在 <frame>, <iframe> 或者 <object> 中展现的标记。网站可以使用此功能，来确保自己网站的内容没有被嵌到别人的网站中去，也从而避免了点击劫持 (clickjacking) 的攻击。它有三个可选择项：(DENY：表示该页面不允许在 frame 中展示，即便是在相同域名的页面中嵌套也不允许；SAMEORIGIN：表示该页面可以在相同域名页面的 frame 中展示；ALLOW-FROM uri地址：表示该页面可以在指定来源的 frame 中展示；)\n      add_header                  X-Frame-Options \"SAMEORIGIN\";\n\n      # 禁用OPTIONS TRACE不安全方法,屏蔽GET、POST、之外的HTTP方法\n      if ($request_method !~* GET|POST) {\n          return 403;\n      }\n\n      # 跨域配置\n      location / {\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';\n        add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';\n\n        if ($request_method = 'OPTIONS') {\n          return 204;\n        }\n      }\n\n      # 转发以/api/开头的请求\n      location ^~ /api/ {\n        proxy_pass http://127.0.0.1:8080;\n      }\n\n      # 以/upload开头的请求\n      location ^~ /upload/ {\n        root  /opt/dir/;\n        expires   7d;\n      }\n    }\n\n9.nginx负载均衡配置\n  \n  在http节点下配置服务器列表\n\n    http {\n      # upstream模块：配置反向代理服务器组，Nginx会根据配置，将请求分发给组里的某一台服务器。serverGroup是服务器组的名称.\n      upstream serverGroup {\n        server 192.168.0.100:8080;\n        server 192.168.0.101:8080;\n      }\n      # serverGroup内部的server指令：配置处理请求的服务器IP或域名，端口可选，不配置默认使用80端口。通过上面的配置(默认的是轮询策略,把每个请求逐一分配到不同的server，如果分配到的server不可用，则分配到下一个，直到可用)，Nginx默认将请求依次分配给100，101来处理，可以通过修改下面这些参数来改变默认的分配策略：\n\n      1.weight权重,默认为1，将请求平均分配给每台server.值越大，则被访问的概率越大.下面标示101访问数量是100的2倍\n      upstream serverGroup {\n        server 192.168.0.100:8080 weight=1;\n        server 192.168.0.101:8080 weight=2 max_fails=3 fail_timeout=15;\n        server 192.168.0.102:8080 down; #down 表示当前服务器不参与负载均衡，也就是说不会被访问到\n        server 192.168.0.103:8080 backup; #backup 表示备份机，所有服务器挂了之后才会生效\n      }\n      max_fails:默认为1。某台Server允许请求失败的次数，超过最大次数后，在fail_timeout时间内，新的请求将不会分配给这台机器。如果设置为0，Nginx会将这台Server置为永久无效状态，然后将请求发给定义了proxy_next_upstream fastcgi_next_upstream, uwsgi_next_upstream, scgi_next_upstream, and memcached_next_upstream指令来处理这次错误的请求\n      fail_timeout:默认为10秒。某台Server达到max_fails次失败请求后，在fail_timeout期间内，nginx会认为这台Server暂时不可用，不会将请求分配给它\n\n      2.最少连接,把请求分配到连接数最少的server\n      upstream serverGroup {\n        least_conn;\n        server 192.168.0.100:8080;\n        server 192.168.0.101:8080;\n      }\n\n      3.ip_hash,根据访问客户端ip的hash值分配，这样同一客户端的请求都会被分配到同一个server上，如果牵扯到session的问题，用这个是最好的选择\n      upstream serverGroup {\n        ip_hash;\n        server 192.168.0.100:8080;\n        server 192.168.0.101:8080;\n      }\n    }\n\n  在server节点下配置proxy_pass\n\n    server {\n        listen  80;\n        server_name serverGroup;\n        location / {\n          proxy_pass   http://serverGroup; # 表示将所有请求转发到tomcats服务器组中配置的某一台服务器上\n        }\n    }","slug":"linux下nginx部署配置多站点","published":1,"updated":"2025-04-22T08:17:18.548Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745is000zd8gk4p6m4fs9","content":"<pre><code>摘要:\n  有时候你想在一台服务器上为不同的域名运行不同的站点。\n  比如www.siteA.com作为博客，www.siteB.com作为论坛。你可以把两个域名的IP都解析到你的服务器上，\n  但是没法在Nginx的根目录里同时运行两个不同的网站.\n  这时可以在nginx上面配置部署多个站点(使用nginx虚拟目录),为你节省服务器费用.\n  假设你把博客放在”/home/user/www/blog”下，论坛放在”/home/user/www/forum”下。下面我们就开始进行配置:\n</code></pre>\n<p>1. 在 Nginx 配置目录下，创建一个”vhost” 目录。本例假设 Nginx 是默认安装，配置目录在”/etc/nginx”</p>\n<p><code>sudo mkdir /etc/nginx/vhost #创建保存站点配置文件的目录</code></p>\n<p>2. 创建 siteA 的配置文件</p>\n<p>‘sudo vim /etc/nginx/vhost/siteA.conf #打开该文件 (没有的话保存后会自动新建)’</p>\n<p>在文件里面输入以下配置内容 (具体的相关目录及 location 内容根据自己实际情况修改，下面只是 nginx 配置文件的基本结构，其实可以拷贝 nginx 自带的配置文件到 vhost 目录下，然后对文件内容进行修改):</p>\n<pre><code>server {\n  listen 80; # 监听端口\n  server_name www.siteA.com siteA.com; # 站点域名\n  root /home/user/www/blog; # 站点根目录\n  index index.html index.htm index.php; # 默认导航页\n\n  #rewrite ^(.*) https://$host$1 permanent; #重定向到https\n\n  location / {\n    # WordPress固定链接URL重写\n    if (!-e $request_filename) {\n      rewrite (.*) /index.php;\n    }\n  }\n  location / {\n    # WordPress固定链接URL重写\n    if (!-e $request_filename) {\n      rewrite (.*) /index.php;\n    }\n  }\n  location ^~ /device/ {\n\t  proxy_pass http://127.0.0.1:8080;\n  }\n  location ^~ /upload/ {  \n    root  /aaa/bbb;\n    expires   7d;\n  }\n}\n</code></pre>\n<p>3. 跟第二步一样，创建 siteB 的配置文件.(“server_name” 和”root” 目录的内容和 siteA 不同)</p>\n<p>‘sudo vim /etc/nginx/vhost/siteB.conf #打开该文件 (没有的话保存后会自动新建)’</p>\n<p>在文件里面输入以下配置内容 (具体的相关目录及 location 内容根据自己实际情况修改，下面只是 nginx 配置文件的基本结构，其实可以拷贝 nginx 自带的配置文件到 vhost 目录下，然后对文件内容进行修改):</p>\n<pre><code>server {\n  listen 80; # 监听端口\n  server_name www.siteB.com siteB.com; # 站点域名\n  root /home/user/www/blog; # 站点根目录\n  index index.html index.htm index.php; # 默认导航页\n\n  #rewrite ^(.*) https://$host$1 permanent; #重定向到https\n\n  location / {\n    # WordPress固定链接URL重写\n    if (!-e $request_filename) {\n      rewrite (.*) /index.php;\n    }\n  }\n  location ^~ /device/ {\n\t  proxy_pass http://127.0.0.1:8080;\n  }\n  location ^~ /upload/ {  \n    root  /aaa/bbb;\n    expires   7d;\n  }\n  # websocket地址\n  location ^~ /ws {\n\t    proxy_pass http://127.0.0.1:10002;\n    }\n}\n</code></pre>\n<p>4. 打开编辑 nginx 的配置文件</p>\n<p><code>sudo vim /etc/nginx/nginx.conf</code></p>\n<p>将我们第一步创建的虚拟目录的路径增加到 nginx.conf 文件中去，将下面的内容加入到”http {}” 部分的末尾</p>\n<pre><code>http {\n  ...\n  include /etc/nginx/vhost/*.conf;\n}\n</code></pre>\n<p>5. 重启 nginx 服务 (注意：所有的配置文件修改保存后，先不急重新加载配置，先使用 <code>nginx -t</code> 测试下文件内容是否有错在进行重新加载配置操作)</p>\n<p><code>sudo service nginx restart</code></p>\n<p>6. 访问 <a href=\"http://www.sitea.com和www.siteb.com,你将发现浏览器会打开不同的站点/\">www.siteA.com 和 www.siteB.com，你将发现浏览器会打开不同的站点</a></p>\n<p>nginx 禁止 ip 访问的小技巧:</p>\n<p>假如你的 Nginx 根目录设在”/home/user/www”，你想阻止别人通过”<a href=\"http://ip地址/blog%E2%80%9D%E6%88%96%E2%80%9Dhttp://IP%E5%9C%B0%E5%9D%80/forum%E2%80%9D%E6%9D%A5%E8%AE%BF%E9%97%AE%E4%BD%A0%E7%9A%84%E7%AB%99%E7%82%B9%EF%BC%8C%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E6%96%B9%E6%B3%95%E5%B0%B1%E6%98%AF%E7%A6%81%E6%AD%A2IP%E5%9C%B0%E5%9D%80%E8%AE%BF%E9%97%AE%E3%80%82%E6%96%B9%E6%B3%95%E5%A6%82%E4%B8%8B%EF%BC%9A\">http://IP 地址 /blog” 或”http://IP 地址 /forum” 来访问你的站点，最简单的方法就是禁止 IP 地址访问。方法如下：</a></p>\n<p>打开 Nginx 网站默认配置文件，记得先备份</p>\n<p><code>sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/default_bak #备份原来的默认文件</code></p>\n<p><code>sudo vim /etc/nginx/sites-available/default #编辑文件</code></p>\n<p>将其所有内容删除，只留以下配置</p>\n<pre><code>server {\n  listen 80 default_server;\n  server_name _;\n  return 404;\n}\n</code></pre>\n<p>然后重启 nginx 或者 <code>nginx -s reload</code> 使配置文件生效，别人将无法通过 IP 地址访问网站了</p>\n<p>如果你不想禁止 IP 地址访问整个目录，只是要防止别人通过 IP 访问你的博客和论坛。那就需要禁止”/blog” 和”/forum” 的目录访问</p>\n<p>打开 Nginx 网站默认配置文件，同上面一样，记得先备份一下</p>\n<p>在”server {}” 节点的部分加上以下配置，然后重启 nginx 或者 reload nginx 配置即可.</p>\n<pre><code>location ^~ /blog/ {\n  deny all;\n}\nlocation ^~ /forum/ {\n  deny all;\n}\n</code></pre>\n<p>7.nginx 常用的配置选项模板<br>    /etc/nginx/nginx.conf</p>\n<pre><code>http {\n  sendfile on;\n  tcp_nopush on;\n  tcp_nodelay on;\n  keepalive_timeout 65;\n  types_hash_max_size 2048;\n  server_tokens off; # 关闭nginx版本标识\n\n  underscores_in_headers on; #自定义Header中含有下划线的情况 必须定义\n  gzip  on;\n  gzip_min_length 1k;\n  gzip_buffers 16 64k;\n  gzip_http_version 1.1;\n  gzip_comp_level 6;\n  gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;\n  gzip_vary on;\n  gzip_disable \"MSIE [1-6]\\.\";\n\n  #proxy_connect_timeout 600;  #nginx跟后端服务器连接超时时间(代理连接超时)\n  \n  proxy_buffer_size     32k;  #设置代理服务器（nginx）保存用户头信息的缓冲区大小\n  proxy_buffers         4 32k;#proxy_buffers缓冲区，网页平均在32k以下的话，这样设置\n  proxy_busy_buffers_size  64k;           #高负荷下缓冲大小（proxy_buffers*2）\n  proxy_temp_file_write_size  1024m;       #设定缓存文件夹大小，大于这个值，将从upstream服务器传\n  client_max_body_size 100M;\n\n  # 给后端服务器暴露获取客户端真实IP地址的头\n  proxy_set_header X-Real-IP $remote_addr;\n  proxy_set_header REMOTE-HOST $remote_addr;\n  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n  # websocket 支持\n  proxy_http_version 1.1;\n  proxy_set_header Upgrade $http_upgrade;\n  proxy_set_header Connection \"upgrade\";\n  proxy_read_timeout    600;  #连接成功后，后端服务器响应时间(代理接收超时)\n  proxy_send_timeout    600;  #后端服务器数据回传时间(代理发送超时)\n}\n</code></pre>\n<p>8. 站点配置文件样例，例如:/etc/nginx/vhost/a.conf</p>\n<pre><code>server {\n  listen          80;\n  server_name     www.aaa.com  aaa.com;\n  root            /opt/pages/;\n  index           index.html index.htm;\n\n  # Cookie的HttpOnly属性，指示浏览器不要在除HTTP（和HTTPS)请求之外暴露Cookie。一个有HttpOnly属性的Cookie，是不可以通过例如调用JavaScript(引用document.cookie)这种非HTTP方式来访问。因此，也不可能通过跨域脚本（一种非常普通的攻击技术）来偷走这种Cookie。\n  add_header                  Set-Cookie \"HttpOnly\";\n  # Cookie的Secure属性，意味着保持Cookie通信只限于加密传输，指示浏览器仅仅在通过安全/加密连接才能使用该Cookie。如果一个Web服务器从一个非安全连接里设置了一个带有secure属性的Cookie，当Cookie被发送到客户端时，它仍然能通过中间人攻击来拦截\n  add_header                  Set-Cookie \"Secure\";\n  # X-Frame-Options HTTP 响应头是用来给浏览器指示允许一个页面可否在 &lt;frame&gt;, &lt;iframe&gt; 或者 &lt;object&gt; 中展现的标记。网站可以使用此功能，来确保自己网站的内容没有被嵌到别人的网站中去，也从而避免了点击劫持 (clickjacking) 的攻击。它有三个可选择项：(DENY：表示该页面不允许在 frame 中展示，即便是在相同域名的页面中嵌套也不允许；SAMEORIGIN：表示该页面可以在相同域名页面的 frame 中展示；ALLOW-FROM uri地址：表示该页面可以在指定来源的 frame 中展示；)\n  add_header                  X-Frame-Options \"SAMEORIGIN\";\n\n  # 禁用OPTIONS TRACE不安全方法,屏蔽GET、POST、之外的HTTP方法\n  if ($request_method !~* GET|POST) {\n      return 403;\n  }\n\n  # 跨域配置\n  location / {\n    add_header Access-Control-Allow-Origin *;\n    add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';\n    add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';\n\n    if ($request_method = 'OPTIONS') {\n      return 204;\n    }\n  }\n\n  # 转发以/api/开头的请求\n  location ^~ /api/ {\n    proxy_pass http://127.0.0.1:8080;\n  }\n\n  # 以/upload开头的请求\n  location ^~ /upload/ {\n    root  /opt/dir/;\n    expires   7d;\n  }\n}\n</code></pre>\n<p>9.nginx 负载均衡配置</p>\n<p>  在 http 节点下配置服务器列表</p>\n<pre><code>http {\n  # upstream模块：配置反向代理服务器组，Nginx会根据配置，将请求分发给组里的某一台服务器。serverGroup是服务器组的名称.\n  upstream serverGroup {\n    server 192.168.0.100:8080;\n    server 192.168.0.101:8080;\n  }\n  # serverGroup内部的server指令：配置处理请求的服务器IP或域名，端口可选，不配置默认使用80端口。通过上面的配置(默认的是轮询策略,把每个请求逐一分配到不同的server，如果分配到的server不可用，则分配到下一个，直到可用)，Nginx默认将请求依次分配给100，101来处理，可以通过修改下面这些参数来改变默认的分配策略：\n\n  1.weight权重,默认为1，将请求平均分配给每台server.值越大，则被访问的概率越大.下面标示101访问数量是100的2倍\n  upstream serverGroup {\n    server 192.168.0.100:8080 weight=1;\n    server 192.168.0.101:8080 weight=2 max_fails=3 fail_timeout=15;\n    server 192.168.0.102:8080 down; #down 表示当前服务器不参与负载均衡，也就是说不会被访问到\n    server 192.168.0.103:8080 backup; #backup 表示备份机，所有服务器挂了之后才会生效\n  }\n  max_fails:默认为1。某台Server允许请求失败的次数，超过最大次数后，在fail_timeout时间内，新的请求将不会分配给这台机器。如果设置为0，Nginx会将这台Server置为永久无效状态，然后将请求发给定义了proxy_next_upstream fastcgi_next_upstream, uwsgi_next_upstream, scgi_next_upstream, and memcached_next_upstream指令来处理这次错误的请求\n  fail_timeout:默认为10秒。某台Server达到max_fails次失败请求后，在fail_timeout期间内，nginx会认为这台Server暂时不可用，不会将请求分配给它\n\n  2.最少连接,把请求分配到连接数最少的server\n  upstream serverGroup {\n    least_conn;\n    server 192.168.0.100:8080;\n    server 192.168.0.101:8080;\n  }\n\n  3.ip_hash,根据访问客户端ip的hash值分配，这样同一客户端的请求都会被分配到同一个server上，如果牵扯到session的问题，用这个是最好的选择\n  upstream serverGroup {\n    ip_hash;\n    server 192.168.0.100:8080;\n    server 192.168.0.101:8080;\n  }\n}\n</code></pre>\n<p>  在 server 节点下配置 proxy_pass</p>\n<pre><code>server {\n    listen  80;\n    server_name serverGroup;\n    location / {\n      proxy_pass   http://serverGroup; # 表示将所有请求转发到tomcats服务器组中配置的某一台服务器上\n    }\n}\n</code></pre>\n","excerpt":"","more":"<pre><code>摘要:\n  有时候你想在一台服务器上为不同的域名运行不同的站点。\n  比如www.siteA.com作为博客，www.siteB.com作为论坛。你可以把两个域名的IP都解析到你的服务器上，\n  但是没法在Nginx的根目录里同时运行两个不同的网站.\n  这时可以在nginx上面配置部署多个站点(使用nginx虚拟目录),为你节省服务器费用.\n  假设你把博客放在”/home/user/www/blog”下，论坛放在”/home/user/www/forum”下。下面我们就开始进行配置:\n</code></pre>\n<p>1. 在 Nginx 配置目录下，创建一个”vhost” 目录。本例假设 Nginx 是默认安装，配置目录在”/etc/nginx”</p>\n<p><code>sudo mkdir /etc/nginx/vhost #创建保存站点配置文件的目录</code></p>\n<p>2. 创建 siteA 的配置文件</p>\n<p>‘sudo vim /etc/nginx/vhost/siteA.conf #打开该文件 (没有的话保存后会自动新建)’</p>\n<p>在文件里面输入以下配置内容 (具体的相关目录及 location 内容根据自己实际情况修改，下面只是 nginx 配置文件的基本结构，其实可以拷贝 nginx 自带的配置文件到 vhost 目录下，然后对文件内容进行修改):</p>\n<pre><code>server {\n  listen 80; # 监听端口\n  server_name www.siteA.com siteA.com; # 站点域名\n  root /home/user/www/blog; # 站点根目录\n  index index.html index.htm index.php; # 默认导航页\n\n  #rewrite ^(.*) https://$host$1 permanent; #重定向到https\n\n  location / {\n    # WordPress固定链接URL重写\n    if (!-e $request_filename) {\n      rewrite (.*) /index.php;\n    }\n  }\n  location / {\n    # WordPress固定链接URL重写\n    if (!-e $request_filename) {\n      rewrite (.*) /index.php;\n    }\n  }\n  location ^~ /device/ {\n\t  proxy_pass http://127.0.0.1:8080;\n  }\n  location ^~ /upload/ {  \n    root  /aaa/bbb;\n    expires   7d;\n  }\n}\n</code></pre>\n<p>3. 跟第二步一样，创建 siteB 的配置文件.(“server_name” 和”root” 目录的内容和 siteA 不同)</p>\n<p>‘sudo vim /etc/nginx/vhost/siteB.conf #打开该文件 (没有的话保存后会自动新建)’</p>\n<p>在文件里面输入以下配置内容 (具体的相关目录及 location 内容根据自己实际情况修改，下面只是 nginx 配置文件的基本结构，其实可以拷贝 nginx 自带的配置文件到 vhost 目录下，然后对文件内容进行修改):</p>\n<pre><code>server {\n  listen 80; # 监听端口\n  server_name www.siteB.com siteB.com; # 站点域名\n  root /home/user/www/blog; # 站点根目录\n  index index.html index.htm index.php; # 默认导航页\n\n  #rewrite ^(.*) https://$host$1 permanent; #重定向到https\n\n  location / {\n    # WordPress固定链接URL重写\n    if (!-e $request_filename) {\n      rewrite (.*) /index.php;\n    }\n  }\n  location ^~ /device/ {\n\t  proxy_pass http://127.0.0.1:8080;\n  }\n  location ^~ /upload/ {  \n    root  /aaa/bbb;\n    expires   7d;\n  }\n  # websocket地址\n  location ^~ /ws {\n\t    proxy_pass http://127.0.0.1:10002;\n    }\n}\n</code></pre>\n<p>4. 打开编辑 nginx 的配置文件</p>\n<p><code>sudo vim /etc/nginx/nginx.conf</code></p>\n<p>将我们第一步创建的虚拟目录的路径增加到 nginx.conf 文件中去，将下面的内容加入到”http {}” 部分的末尾</p>\n<pre><code>http {\n  ...\n  include /etc/nginx/vhost/*.conf;\n}\n</code></pre>\n<p>5. 重启 nginx 服务 (注意：所有的配置文件修改保存后，先不急重新加载配置，先使用 <code>nginx -t</code> 测试下文件内容是否有错在进行重新加载配置操作)</p>\n<p><code>sudo service nginx restart</code></p>\n<p>6. 访问 <a href=\"http://www.sitea.com和www.siteb.com,你将发现浏览器会打开不同的站点/\">www.siteA.com 和 www.siteB.com，你将发现浏览器会打开不同的站点</a></p>\n<p>nginx 禁止 ip 访问的小技巧:</p>\n<p>假如你的 Nginx 根目录设在”/home/user/www”，你想阻止别人通过”<a href=\"http://ip地址/blog%E2%80%9D%E6%88%96%E2%80%9Dhttp://IP%E5%9C%B0%E5%9D%80/forum%E2%80%9D%E6%9D%A5%E8%AE%BF%E9%97%AE%E4%BD%A0%E7%9A%84%E7%AB%99%E7%82%B9%EF%BC%8C%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E6%96%B9%E6%B3%95%E5%B0%B1%E6%98%AF%E7%A6%81%E6%AD%A2IP%E5%9C%B0%E5%9D%80%E8%AE%BF%E9%97%AE%E3%80%82%E6%96%B9%E6%B3%95%E5%A6%82%E4%B8%8B%EF%BC%9A\">http://IP 地址 /blog” 或”http://IP 地址 /forum” 来访问你的站点，最简单的方法就是禁止 IP 地址访问。方法如下：</a></p>\n<p>打开 Nginx 网站默认配置文件，记得先备份</p>\n<p><code>sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/default_bak #备份原来的默认文件</code></p>\n<p><code>sudo vim /etc/nginx/sites-available/default #编辑文件</code></p>\n<p>将其所有内容删除，只留以下配置</p>\n<pre><code>server {\n  listen 80 default_server;\n  server_name _;\n  return 404;\n}\n</code></pre>\n<p>然后重启 nginx 或者 <code>nginx -s reload</code> 使配置文件生效，别人将无法通过 IP 地址访问网站了</p>\n<p>如果你不想禁止 IP 地址访问整个目录，只是要防止别人通过 IP 访问你的博客和论坛。那就需要禁止”/blog” 和”/forum” 的目录访问</p>\n<p>打开 Nginx 网站默认配置文件，同上面一样，记得先备份一下</p>\n<p>在”server {}” 节点的部分加上以下配置，然后重启 nginx 或者 reload nginx 配置即可.</p>\n<pre><code>location ^~ /blog/ {\n  deny all;\n}\nlocation ^~ /forum/ {\n  deny all;\n}\n</code></pre>\n<p>7.nginx 常用的配置选项模板<br>    /etc/nginx/nginx.conf</p>\n<pre><code>http {\n  sendfile on;\n  tcp_nopush on;\n  tcp_nodelay on;\n  keepalive_timeout 65;\n  types_hash_max_size 2048;\n  server_tokens off; # 关闭nginx版本标识\n\n  underscores_in_headers on; #自定义Header中含有下划线的情况 必须定义\n  gzip  on;\n  gzip_min_length 1k;\n  gzip_buffers 16 64k;\n  gzip_http_version 1.1;\n  gzip_comp_level 6;\n  gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;\n  gzip_vary on;\n  gzip_disable \"MSIE [1-6]\\.\";\n\n  #proxy_connect_timeout 600;  #nginx跟后端服务器连接超时时间(代理连接超时)\n  \n  proxy_buffer_size     32k;  #设置代理服务器（nginx）保存用户头信息的缓冲区大小\n  proxy_buffers         4 32k;#proxy_buffers缓冲区，网页平均在32k以下的话，这样设置\n  proxy_busy_buffers_size  64k;           #高负荷下缓冲大小（proxy_buffers*2）\n  proxy_temp_file_write_size  1024m;       #设定缓存文件夹大小，大于这个值，将从upstream服务器传\n  client_max_body_size 100M;\n\n  # 给后端服务器暴露获取客户端真实IP地址的头\n  proxy_set_header X-Real-IP $remote_addr;\n  proxy_set_header REMOTE-HOST $remote_addr;\n  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n  # websocket 支持\n  proxy_http_version 1.1;\n  proxy_set_header Upgrade $http_upgrade;\n  proxy_set_header Connection \"upgrade\";\n  proxy_read_timeout    600;  #连接成功后，后端服务器响应时间(代理接收超时)\n  proxy_send_timeout    600;  #后端服务器数据回传时间(代理发送超时)\n}\n</code></pre>\n<p>8. 站点配置文件样例，例如:/etc/nginx/vhost/a.conf</p>\n<pre><code>server {\n  listen          80;\n  server_name     www.aaa.com  aaa.com;\n  root            /opt/pages/;\n  index           index.html index.htm;\n\n  # Cookie的HttpOnly属性，指示浏览器不要在除HTTP（和HTTPS)请求之外暴露Cookie。一个有HttpOnly属性的Cookie，是不可以通过例如调用JavaScript(引用document.cookie)这种非HTTP方式来访问。因此，也不可能通过跨域脚本（一种非常普通的攻击技术）来偷走这种Cookie。\n  add_header                  Set-Cookie \"HttpOnly\";\n  # Cookie的Secure属性，意味着保持Cookie通信只限于加密传输，指示浏览器仅仅在通过安全/加密连接才能使用该Cookie。如果一个Web服务器从一个非安全连接里设置了一个带有secure属性的Cookie，当Cookie被发送到客户端时，它仍然能通过中间人攻击来拦截\n  add_header                  Set-Cookie \"Secure\";\n  # X-Frame-Options HTTP 响应头是用来给浏览器指示允许一个页面可否在 &lt;frame&gt;, &lt;iframe&gt; 或者 &lt;object&gt; 中展现的标记。网站可以使用此功能，来确保自己网站的内容没有被嵌到别人的网站中去，也从而避免了点击劫持 (clickjacking) 的攻击。它有三个可选择项：(DENY：表示该页面不允许在 frame 中展示，即便是在相同域名的页面中嵌套也不允许；SAMEORIGIN：表示该页面可以在相同域名页面的 frame 中展示；ALLOW-FROM uri地址：表示该页面可以在指定来源的 frame 中展示；)\n  add_header                  X-Frame-Options \"SAMEORIGIN\";\n\n  # 禁用OPTIONS TRACE不安全方法,屏蔽GET、POST、之外的HTTP方法\n  if ($request_method !~* GET|POST) {\n      return 403;\n  }\n\n  # 跨域配置\n  location / {\n    add_header Access-Control-Allow-Origin *;\n    add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';\n    add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';\n\n    if ($request_method = 'OPTIONS') {\n      return 204;\n    }\n  }\n\n  # 转发以/api/开头的请求\n  location ^~ /api/ {\n    proxy_pass http://127.0.0.1:8080;\n  }\n\n  # 以/upload开头的请求\n  location ^~ /upload/ {\n    root  /opt/dir/;\n    expires   7d;\n  }\n}\n</code></pre>\n<p>9.nginx 负载均衡配置</p>\n<p>  在 http 节点下配置服务器列表</p>\n<pre><code>http {\n  # upstream模块：配置反向代理服务器组，Nginx会根据配置，将请求分发给组里的某一台服务器。serverGroup是服务器组的名称.\n  upstream serverGroup {\n    server 192.168.0.100:8080;\n    server 192.168.0.101:8080;\n  }\n  # serverGroup内部的server指令：配置处理请求的服务器IP或域名，端口可选，不配置默认使用80端口。通过上面的配置(默认的是轮询策略,把每个请求逐一分配到不同的server，如果分配到的server不可用，则分配到下一个，直到可用)，Nginx默认将请求依次分配给100，101来处理，可以通过修改下面这些参数来改变默认的分配策略：\n\n  1.weight权重,默认为1，将请求平均分配给每台server.值越大，则被访问的概率越大.下面标示101访问数量是100的2倍\n  upstream serverGroup {\n    server 192.168.0.100:8080 weight=1;\n    server 192.168.0.101:8080 weight=2 max_fails=3 fail_timeout=15;\n    server 192.168.0.102:8080 down; #down 表示当前服务器不参与负载均衡，也就是说不会被访问到\n    server 192.168.0.103:8080 backup; #backup 表示备份机，所有服务器挂了之后才会生效\n  }\n  max_fails:默认为1。某台Server允许请求失败的次数，超过最大次数后，在fail_timeout时间内，新的请求将不会分配给这台机器。如果设置为0，Nginx会将这台Server置为永久无效状态，然后将请求发给定义了proxy_next_upstream fastcgi_next_upstream, uwsgi_next_upstream, scgi_next_upstream, and memcached_next_upstream指令来处理这次错误的请求\n  fail_timeout:默认为10秒。某台Server达到max_fails次失败请求后，在fail_timeout期间内，nginx会认为这台Server暂时不可用，不会将请求分配给它\n\n  2.最少连接,把请求分配到连接数最少的server\n  upstream serverGroup {\n    least_conn;\n    server 192.168.0.100:8080;\n    server 192.168.0.101:8080;\n  }\n\n  3.ip_hash,根据访问客户端ip的hash值分配，这样同一客户端的请求都会被分配到同一个server上，如果牵扯到session的问题，用这个是最好的选择\n  upstream serverGroup {\n    ip_hash;\n    server 192.168.0.100:8080;\n    server 192.168.0.101:8080;\n  }\n}\n</code></pre>\n<p>  在 server 节点下配置 proxy_pass</p>\n<pre><code>server {\n    listen  80;\n    server_name serverGroup;\n    location / {\n      proxy_pass   http://serverGroup; # 表示将所有请求转发到tomcats服务器组中配置的某一台服务器上\n    }\n}\n</code></pre>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:17:18 GMT+0800 (China Standard Time)","title":"linux 下 nginx 部署配置多站点","path":"2018/05/13/linux下nginx部署配置多站点/","eyeCatchImage":null,"excerpt":"在nginx上面配置部署多个站点","date":{"_isAMomentObject":true,"_i":"2018-05-13T03:25:50.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-05-13T03:25:50.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["linux","nginx"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":2354},{"title":"jsp 訪問 API 報錯 PKIX path building failed，JAVA 添加信任 SSL 證書","date":"2025-04-10T07:17:19.000Z","description":"JAVA添加信任SSL證書","_content":"\n## jsp訪問API報錯PKIX path building failed，JAVA添加信任SSL證書\n\n### 問題\n\n```text\nJSP訪問API時，報錯PKIX path building failed\n```\n\n### 原因\n\n```text\nHTTPS域名的SSL Certification 不在 JDK/JRE 的證書庫中,被JAVA認為是不可信的HTTPS域名。\n```\n\n### 解決辦法\n\n#### 下載目標地址的證書\n\n```text\n    通過瀏覽器打開API,在地址欄 \"HTTPS\" 旁邊點擊按鈕,彈出相關證書信息窗口。\n\n    通過Export，得到後綴為 .crt 的 base64 證書文件。(如可選請選擇base64)\n```\n\n#### 找到JAVA安裝目錄（即JAVA_HOME）\n\ne.g. `C:\\Program Files\\Java\\jdk-21`\n\n##### 找到證書庫存放位置\n\n```text\n證書庫存放在 `%JAVA_HOME%\\lib\\security` 下，一個名為 `cacerts` 的文件\n\n記錄路徑：`\"C:\\Program Files\\Java\\jdk-21\\lib\\security\\cacerts\"`\n```\n\n##### 找到目標地址下載的證書位置\n\ne.g. `\"C:\\Users\\ArHay\\Downloads\\example.crt\"`\n\n##### 使用命令行註冊Certification到證書庫\n\n1. 進入 `\"C:\\Program Files\\Java\\jdk-21\\bin\"`文件夾\n\n   (若已經配置全局變量`%JAVA_HOME%`,可以忽略該步驟)\n2. 使用命令keytool註冊證書\n\n    ```bash\n    keytool -import -alias example -keystore \"C:\\Program Files\\Java\\jdk-21\\lib\\security\\cacerts\" -file \"C:\\Users\\ArHay\\Downloads\\example.crt\"\n    ```\n\n3. 輸入兩次密碼\n\n   ```text\n   changeit\n   ```\n\n##### 結果\n\n再次嘗試訪問API，無報錯，正常返回。問題解決。\n","source":"_posts/jsp訪問API報錯PKIX path building failed，JAVA添加信任SSL證書.md","raw":"---\ntitle: jsp訪問API報錯PKIX path building failed，JAVA添加信任SSL證書\ndate: 2025-04-10 15:17:19\ndescription: JAVA添加信任SSL證書\ntags:\n  - jsp\n  - SSL\n  - Certification\n  - JAVA\n---\n\n## jsp訪問API報錯PKIX path building failed，JAVA添加信任SSL證書\n\n### 問題\n\n```text\nJSP訪問API時，報錯PKIX path building failed\n```\n\n### 原因\n\n```text\nHTTPS域名的SSL Certification 不在 JDK/JRE 的證書庫中,被JAVA認為是不可信的HTTPS域名。\n```\n\n### 解決辦法\n\n#### 下載目標地址的證書\n\n```text\n    通過瀏覽器打開API,在地址欄 \"HTTPS\" 旁邊點擊按鈕,彈出相關證書信息窗口。\n\n    通過Export，得到後綴為 .crt 的 base64 證書文件。(如可選請選擇base64)\n```\n\n#### 找到JAVA安裝目錄（即JAVA_HOME）\n\ne.g. `C:\\Program Files\\Java\\jdk-21`\n\n##### 找到證書庫存放位置\n\n```text\n證書庫存放在 `%JAVA_HOME%\\lib\\security` 下，一個名為 `cacerts` 的文件\n\n記錄路徑：`\"C:\\Program Files\\Java\\jdk-21\\lib\\security\\cacerts\"`\n```\n\n##### 找到目標地址下載的證書位置\n\ne.g. `\"C:\\Users\\ArHay\\Downloads\\example.crt\"`\n\n##### 使用命令行註冊Certification到證書庫\n\n1. 進入 `\"C:\\Program Files\\Java\\jdk-21\\bin\"`文件夾\n\n   (若已經配置全局變量`%JAVA_HOME%`,可以忽略該步驟)\n2. 使用命令keytool註冊證書\n\n    ```bash\n    keytool -import -alias example -keystore \"C:\\Program Files\\Java\\jdk-21\\lib\\security\\cacerts\" -file \"C:\\Users\\ArHay\\Downloads\\example.crt\"\n    ```\n\n3. 輸入兩次密碼\n\n   ```text\n   changeit\n   ```\n\n##### 結果\n\n再次嘗試訪問API，無報錯，正常返回。問題解決。\n","slug":"jsp訪問API報錯PKIX path building failed，JAVA添加信任SSL證書","published":1,"updated":"2025-04-24T07:35:27.605Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745is0012d8gk0yqqfcqw","content":"<h2 id=\"jsp訪問API報錯PKIX-path-building-failed，JAVA添加信任SSL證書\"><a href=\"#jsp訪問API報錯PKIX-path-building-failed，JAVA添加信任SSL證書\" class=\"headerlink\" title=\"jsp訪問API報錯PKIX path building failed，JAVA添加信任SSL證書\"></a>jsp 訪問 API 報錯 PKIX path building failed，JAVA 添加信任 SSL 證書</h2><h3 id=\"問題\"><a href=\"#問題\" class=\"headerlink\" title=\"問題\"></a>問題</h3><pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">JSP訪問API時，報錯PKIX path building failed<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h3><pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">HTTPS域名的SSL Certification 不在 JDK/JRE 的證書庫中,被JAVA認為是不可信的HTTPS域名。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"解決辦法\"><a href=\"#解決辦法\" class=\"headerlink\" title=\"解決辦法\"></a>解決辦法</h3><h4 id=\"下載目標地址的證書\"><a href=\"#下載目標地址的證書\" class=\"headerlink\" title=\"下載目標地址的證書\"></a>下載目標地址的證書</h4><pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">通過瀏覽器打開API,在地址欄 \"HTTPS\" 旁邊點擊按鈕,彈出相關證書信息窗口。\n\n通過Export，得到後綴為 .crt 的 base64 證書文件。(如可選請選擇base64)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"找到JAVA安裝目錄（即JAVA-HOME）\"><a href=\"#找到JAVA安裝目錄（即JAVA-HOME）\" class=\"headerlink\" title=\"找到JAVA安裝目錄（即JAVA_HOME）\"></a>找到 JAVA 安裝目錄（即 JAVA_HOME）</h4><p>e.g. <code>C:\\Program Files\\Java\\jdk-21</code></p>\n<h5 id=\"找到證書庫存放位置\"><a href=\"#找到證書庫存放位置\" class=\"headerlink\" title=\"找到證書庫存放位置\"></a>找到證書庫存放位置</h5><pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">證書庫存放在 `%JAVA_HOME%\\lib\\security` 下，一個名為 `cacerts` 的文件\n\n記錄路徑：`\"C:\\Program Files\\Java\\jdk-21\\lib\\security\\cacerts\"`<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"找到目標地址下載的證書位置\"><a href=\"#找到目標地址下載的證書位置\" class=\"headerlink\" title=\"找到目標地址下載的證書位置\"></a>找到目標地址下載的證書位置</h5><p>e.g. <code>\"C:\\Users\\ArHay\\Downloads\\example.crt\"</code></p>\n<h5 id=\"使用命令行註冊Certification到證書庫\"><a href=\"#使用命令行註冊Certification到證書庫\" class=\"headerlink\" title=\"使用命令行註冊Certification到證書庫\"></a>使用命令行註冊 Certification 到證書庫</h5><ol>\n<li><p>進入 <code>\"C:\\Program Files\\Java\\jdk-21\\bin\"</code> 文件夾</p>\n<p>(若已經配置全局變量 <code>%JAVA_HOME%</code>, 可以忽略該步驟)</p>\n</li>\n<li><p>使用命令 keytool 註冊證書</p>\n <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">keytool <span class=\"token parameter variable\">-import</span> <span class=\"token parameter variable\">-alias</span> example <span class=\"token parameter variable\">-keystore</span> <span class=\"token string\">\"C:\\Program Files\\Java\\jdk-21\\lib\\security<span class=\"token entity\" title=\"\\c\">\\c</span>acerts\"</span> <span class=\"token parameter variable\">-file</span> <span class=\"token string\">\"C:\\Users\\ArHay\\Downloads<span class=\"token entity\" title=\"\\e\">\\e</span>xample.crt\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>輸入兩次密碼</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">changeit<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ol>\n<h5 id=\"結果\"><a href=\"#結果\" class=\"headerlink\" title=\"結果\"></a>結果</h5><p>再次嘗試訪問 API，無報錯，正常返回。問題解決。</p>\n","excerpt":"","more":"<h2 id=\"jsp訪問API報錯PKIX-path-building-failed，JAVA添加信任SSL證書\"><a href=\"#jsp訪問API報錯PKIX-path-building-failed，JAVA添加信任SSL證書\" class=\"headerlink\" title=\"jsp訪問API報錯PKIX path building failed，JAVA添加信任SSL證書\"></a>jsp 訪問 API 報錯 PKIX path building failed，JAVA 添加信任 SSL 證書</h2><h3 id=\"問題\"><a href=\"#問題\" class=\"headerlink\" title=\"問題\"></a>問題</h3><pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">JSP訪問API時，報錯PKIX path building failed<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h3><pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">HTTPS域名的SSL Certification 不在 JDK/JRE 的證書庫中,被JAVA認為是不可信的HTTPS域名。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"解決辦法\"><a href=\"#解決辦法\" class=\"headerlink\" title=\"解決辦法\"></a>解決辦法</h3><h4 id=\"下載目標地址的證書\"><a href=\"#下載目標地址的證書\" class=\"headerlink\" title=\"下載目標地址的證書\"></a>下載目標地址的證書</h4><pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">通過瀏覽器打開API,在地址欄 \"HTTPS\" 旁邊點擊按鈕,彈出相關證書信息窗口。\n\n通過Export，得到後綴為 .crt 的 base64 證書文件。(如可選請選擇base64)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"找到JAVA安裝目錄（即JAVA-HOME）\"><a href=\"#找到JAVA安裝目錄（即JAVA-HOME）\" class=\"headerlink\" title=\"找到JAVA安裝目錄（即JAVA_HOME）\"></a>找到 JAVA 安裝目錄（即 JAVA_HOME）</h4><p>e.g. <code>C:\\Program Files\\Java\\jdk-21</code></p>\n<h5 id=\"找到證書庫存放位置\"><a href=\"#找到證書庫存放位置\" class=\"headerlink\" title=\"找到證書庫存放位置\"></a>找到證書庫存放位置</h5><pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">證書庫存放在 `%JAVA_HOME%\\lib\\security` 下，一個名為 `cacerts` 的文件\n\n記錄路徑：`\"C:\\Program Files\\Java\\jdk-21\\lib\\security\\cacerts\"`<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"找到目標地址下載的證書位置\"><a href=\"#找到目標地址下載的證書位置\" class=\"headerlink\" title=\"找到目標地址下載的證書位置\"></a>找到目標地址下載的證書位置</h5><p>e.g. <code>\"C:\\Users\\ArHay\\Downloads\\example.crt\"</code></p>\n<h5 id=\"使用命令行註冊Certification到證書庫\"><a href=\"#使用命令行註冊Certification到證書庫\" class=\"headerlink\" title=\"使用命令行註冊Certification到證書庫\"></a>使用命令行註冊 Certification 到證書庫</h5><ol>\n<li><p>進入 <code>\"C:\\Program Files\\Java\\jdk-21\\bin\"</code> 文件夾</p>\n<p>(若已經配置全局變量 <code>%JAVA_HOME%</code>, 可以忽略該步驟)</p>\n</li>\n<li><p>使用命令 keytool 註冊證書</p>\n <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">keytool <span class=\"token parameter variable\">-import</span> <span class=\"token parameter variable\">-alias</span> example <span class=\"token parameter variable\">-keystore</span> <span class=\"token string\">\"C:\\Program Files\\Java\\jdk-21\\lib\\security<span class=\"token entity\" title=\"\\c\">\\c</span>acerts\"</span> <span class=\"token parameter variable\">-file</span> <span class=\"token string\">\"C:\\Users\\ArHay\\Downloads<span class=\"token entity\" title=\"\\e\">\\e</span>xample.crt\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>輸入兩次密碼</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">changeit<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ol>\n<h5 id=\"結果\"><a href=\"#結果\" class=\"headerlink\" title=\"結果\"></a>結果</h5><p>再次嘗試訪問 API，無報錯，正常返回。問題解決。</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Thu Apr 24 2025 15:35:27 GMT+0800 (China Standard Time)","title":"jsp 訪問 API 報錯 PKIX path building failed，JAVA 添加信任 SSL 證書","path":"2025/04/10/jsp訪問API報錯PKIX path building failed，JAVA添加信任SSL證書/","eyeCatchImage":null,"excerpt":"JAVA添加信任SSL證書","date":{"_isAMomentObject":true,"_i":"2025-04-10T07:17:19.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2025-04-10T07:17:19.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["jsp","SSL","Certification","JAVA"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":158},{"title":"linux 使用 systemd 方式添加开机自动执行脚本","date":"2019-06-26T02:31:19.000Z","description":"linux使用systemd方式添加开机自动执行脚本","_content":"  \n>前段时间在一台公网服务器上搭建了vpn服务用来映射内网一台gitlab服务器,实现跨网络也能进行代码提交等操作.过程中经过查找网络上的博客文档基本都没啥问题,但是后续使用过程中,发现客户端(pptp-linux)vpn连接会自动断开(大约是晚上的时候),后面写了一个脚本后台常驻,检测vpn是否连接,如果断开则自动重连.但是问题来了,如果服务器关机了然后开机,则不会自动去连接,需要手工执行连接的脚本.于是,查找相关的systemd方式实现开机启动执行相关脚本.由于内网服务器默认登录的账户不是root身份,所以使用其他小伙伴的建立/etc/rc.local文件的方式是未成功.以下是测试能够通过的方式(我的内网gitlab服务器是Ubuntu18.04.1-server版,理论上只要使用systemd的方式来管理系统服务启动的发行版都可以)\n\n### 准备好要执行的脚本文件(auto_conn.sh)\n\n```bash\n  #! /bin/sh\n  while true\n  pppdNum=`ifconfig | grep ppp0 | wc -l`\n  do echo \"pppdNum = $pppdNum\"\n  if [ $pppdNum -le 0 ]\n  then\n        # \n        echo \"vpn is down,waitting for connectting again...\"\n        sleep 10\n        pppdNum_1=`ifconfig | grep ppp0 | wc -l`\n        echo \"pppdNum = $pppdNum_1\"\n        #\n        if [ $pppdNum_1 -ge 1 ]\n        then\n            echo \"vpn has autolly connect success again!\"\n            # xxxxx是sudo执行的密码,每次连接后需要手工添加路由表,不然不能访问到服务器,ppp0是该网卡的名称.可通过ifconfig查看192.168.2.0/24是自己外网vpn服务器给内部电脑分配的内网ip网关前缀\n            echo 'xxxxx' | sudo -S route add -net 192.168.2.0/24 ppp0\n        else\n            echo \"connectting..\"\n            # xxxxx是sudo执行的密码,vpn_name是自定义vpn连接的名称,000.000.000.000是vpn服务器的ip(公网ip),username是vpn登录的用户名,passwd是vpn登录的密码\n            echo 'xxxxxx' | sudo -S pptpsetup --create vpn_name --server 000.000.000.000 --username username --password passwd vpn-only --encrypt --start\n            echo 'c vpn_client' > /var/run/xl2tpd/l2tp-control\n                sleep 10\n            # xxxxx是sudo执行的密码,每次连接后需要手工添加路由表,不然不能访问到服务器,ppp0是该网卡的名称.可通过ifconfig查看192.168.2.0/24是自己外网vpn服务器给内部电脑分配的内网ip网关前缀\n            echo 'xxxxxx' | sudo -S route add -net 192.168.2.0/24 ppp0\n        fi\n  fi\n  sleep 5\n\n  done\n```\n    注: 某条命令需要sudo执行的话,在脚本中可使用echo 'xxxxxx' | sudo -S 的方式,xxxxxx就是对应的密码\n\n然后给脚本添加执行权限.sudo chmod +x\n\n### 创建一个service文件\n\n`sudo vim /etc/systemd/system/auto_startVPN.service`\n\n详细内容如下:\n\n```bash\n[Unit]\nDescription=自动连接vpn #自定义的简介描述\nAfter=network-online.target.wants #脚本所需要的前置service，可在/etc/systemd/system/下查看\n\n[Service]\nExecStart=/home/xxx/xxx/auto_conn.sh #第一步中的脚本文件路径\n\n[Install]\nWantedBy=multi-user.target\n\n```\nservice文件一般正常的启动文件主要分成三部分\n\n[Unit] 段: 启动顺序与依赖关系\n\n[Service] 段: 启动行为,如何启动，启动类型\n\n[Install] 段: 定义如何安装这个配置文件，即怎样做到开机启动\n\n### 使用systemctl命令使能这个服务开机启动\n\n`sudo systemctl daemon-reload` //重新加载配置文件\n\n`sudo systemctl enable auto_startVPN.service` //设置开机启动刚刚新建的自动连接vpn的服务\n\n重启电脑,等待个大约10多秒,执行ifconfig,会发现连接中会有ppp0这个网卡设备和对应的ip地址等信息,说明脚本执行成功也成功的自动连接上了vpn服务器.","source":"_posts/linux使用systemd方式添加开机自动执行脚本.md","raw":"---\ntitle: linux使用systemd方式添加开机自动执行脚本\ndate: 2019-06-26 10:31:19\ndescription: linux使用systemd方式添加开机自动执行脚本\ntags:\n  - linux\n---\n  \n>前段时间在一台公网服务器上搭建了vpn服务用来映射内网一台gitlab服务器,实现跨网络也能进行代码提交等操作.过程中经过查找网络上的博客文档基本都没啥问题,但是后续使用过程中,发现客户端(pptp-linux)vpn连接会自动断开(大约是晚上的时候),后面写了一个脚本后台常驻,检测vpn是否连接,如果断开则自动重连.但是问题来了,如果服务器关机了然后开机,则不会自动去连接,需要手工执行连接的脚本.于是,查找相关的systemd方式实现开机启动执行相关脚本.由于内网服务器默认登录的账户不是root身份,所以使用其他小伙伴的建立/etc/rc.local文件的方式是未成功.以下是测试能够通过的方式(我的内网gitlab服务器是Ubuntu18.04.1-server版,理论上只要使用systemd的方式来管理系统服务启动的发行版都可以)\n\n### 准备好要执行的脚本文件(auto_conn.sh)\n\n```bash\n  #! /bin/sh\n  while true\n  pppdNum=`ifconfig | grep ppp0 | wc -l`\n  do echo \"pppdNum = $pppdNum\"\n  if [ $pppdNum -le 0 ]\n  then\n        # \n        echo \"vpn is down,waitting for connectting again...\"\n        sleep 10\n        pppdNum_1=`ifconfig | grep ppp0 | wc -l`\n        echo \"pppdNum = $pppdNum_1\"\n        #\n        if [ $pppdNum_1 -ge 1 ]\n        then\n            echo \"vpn has autolly connect success again!\"\n            # xxxxx是sudo执行的密码,每次连接后需要手工添加路由表,不然不能访问到服务器,ppp0是该网卡的名称.可通过ifconfig查看192.168.2.0/24是自己外网vpn服务器给内部电脑分配的内网ip网关前缀\n            echo 'xxxxx' | sudo -S route add -net 192.168.2.0/24 ppp0\n        else\n            echo \"connectting..\"\n            # xxxxx是sudo执行的密码,vpn_name是自定义vpn连接的名称,000.000.000.000是vpn服务器的ip(公网ip),username是vpn登录的用户名,passwd是vpn登录的密码\n            echo 'xxxxxx' | sudo -S pptpsetup --create vpn_name --server 000.000.000.000 --username username --password passwd vpn-only --encrypt --start\n            echo 'c vpn_client' > /var/run/xl2tpd/l2tp-control\n                sleep 10\n            # xxxxx是sudo执行的密码,每次连接后需要手工添加路由表,不然不能访问到服务器,ppp0是该网卡的名称.可通过ifconfig查看192.168.2.0/24是自己外网vpn服务器给内部电脑分配的内网ip网关前缀\n            echo 'xxxxxx' | sudo -S route add -net 192.168.2.0/24 ppp0\n        fi\n  fi\n  sleep 5\n\n  done\n```\n    注: 某条命令需要sudo执行的话,在脚本中可使用echo 'xxxxxx' | sudo -S 的方式,xxxxxx就是对应的密码\n\n然后给脚本添加执行权限.sudo chmod +x\n\n### 创建一个service文件\n\n`sudo vim /etc/systemd/system/auto_startVPN.service`\n\n详细内容如下:\n\n```bash\n[Unit]\nDescription=自动连接vpn #自定义的简介描述\nAfter=network-online.target.wants #脚本所需要的前置service，可在/etc/systemd/system/下查看\n\n[Service]\nExecStart=/home/xxx/xxx/auto_conn.sh #第一步中的脚本文件路径\n\n[Install]\nWantedBy=multi-user.target\n\n```\nservice文件一般正常的启动文件主要分成三部分\n\n[Unit] 段: 启动顺序与依赖关系\n\n[Service] 段: 启动行为,如何启动，启动类型\n\n[Install] 段: 定义如何安装这个配置文件，即怎样做到开机启动\n\n### 使用systemctl命令使能这个服务开机启动\n\n`sudo systemctl daemon-reload` //重新加载配置文件\n\n`sudo systemctl enable auto_startVPN.service` //设置开机启动刚刚新建的自动连接vpn的服务\n\n重启电脑,等待个大约10多秒,执行ifconfig,会发现连接中会有ppp0这个网卡设备和对应的ip地址等信息,说明脚本执行成功也成功的自动连接上了vpn服务器.","slug":"linux使用systemd方式添加开机自动执行脚本","published":1,"updated":"2025-04-22T08:18:02.315Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745is0014d8gkaibug4bt","content":"<blockquote>\n<p>前段时间在一台公网服务器上搭建了 vpn 服务用来映射内网一台 gitlab 服务器，实现跨网络也能进行代码提交等操作。过程中经过查找网络上的博客文档基本都没啥问题，但是后续使用过程中，发现客户端 (pptp-linux) vpn 连接会自动断开 (大约是晚上的时候), 后面写了一个脚本后台常驻，检测 vpn 是否连接，如果断开则自动重连。但是问题来了，如果服务器关机了然后开机，则不会自动去连接，需要手工执行连接的脚本。于是，查找相关的 systemd 方式实现开机启动执行相关脚本。由于内网服务器默认登录的账户不是 root 身份，所以使用其他小伙伴的建立 /etc/rc.local 文件的方式是未成功。以下是测试能够通过的方式 (我的内网 gitlab 服务器是 Ubuntu18.04.1-server 版，理论上只要使用 systemd 的方式来管理系统服务启动的发行版都可以)</p>\n</blockquote>\n<h3 id=\"准备好要执行的脚本文件-auto-conn-sh\"><a href=\"#准备好要执行的脚本文件-auto-conn-sh\" class=\"headerlink\" title=\"准备好要执行的脚本文件(auto_conn.sh)\"></a>准备好要执行的脚本文件 (auto_conn.sh)</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#! /bin/sh</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">true</span>\n<span class=\"token assign-left variable\">pppdNum</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">ifconfig</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> ppp0 <span class=\"token operator\">|</span> <span class=\"token function\">wc</span> <span class=\"token parameter variable\">-l</span><span class=\"token variable\">`</span></span>\n<span class=\"token keyword\">do</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"pppdNum = <span class=\"token variable\">$pppdNum</span>\"</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$pppdNum</span> <span class=\"token parameter variable\">-le</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n      <span class=\"token comment\"># </span>\n      <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"vpn is down,waitting for connectting again...\"</span>\n      <span class=\"token function\">sleep</span> <span class=\"token number\">10</span>\n      <span class=\"token assign-left variable\">pppdNum_1</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">ifconfig</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> ppp0 <span class=\"token operator\">|</span> <span class=\"token function\">wc</span> <span class=\"token parameter variable\">-l</span><span class=\"token variable\">`</span></span>\n      <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"pppdNum = <span class=\"token variable\">$pppdNum_1</span>\"</span>\n      <span class=\"token comment\">#</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$pppdNum_1</span> <span class=\"token parameter variable\">-ge</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">]</span>\n      <span class=\"token keyword\">then</span>\n          <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"vpn has autolly connect success again!\"</span>\n          <span class=\"token comment\"># xxxxx是sudo执行的密码,每次连接后需要手工添加路由表,不然不能访问到服务器,ppp0是该网卡的名称.可通过ifconfig查看192.168.2.0/24是自己外网vpn服务器给内部电脑分配的内网ip网关前缀</span>\n          <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'xxxxx'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token parameter variable\">-S</span> route <span class=\"token function\">add</span> <span class=\"token parameter variable\">-net</span> <span class=\"token number\">192.168</span>.2.0/24 ppp0\n      <span class=\"token keyword\">else</span>\n          <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"connectting..\"</span>\n          <span class=\"token comment\"># xxxxx是sudo执行的密码,vpn_name是自定义vpn连接的名称,000.000.000.000是vpn服务器的ip(公网ip),username是vpn登录的用户名,passwd是vpn登录的密码</span>\n          <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'xxxxxx'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token parameter variable\">-S</span> pptpsetup <span class=\"token parameter variable\">--create</span> vpn_name <span class=\"token parameter variable\">--server</span> 000.000.000.000 <span class=\"token parameter variable\">--username</span> username <span class=\"token parameter variable\">--password</span> <span class=\"token function\">passwd</span> vpn-only <span class=\"token parameter variable\">--encrypt</span> <span class=\"token parameter variable\">--start</span>\n          <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'c vpn_client'</span> <span class=\"token operator\">&gt;</span> /var/run/xl2tpd/l2tp-control\n              <span class=\"token function\">sleep</span> <span class=\"token number\">10</span>\n          <span class=\"token comment\"># xxxxx是sudo执行的密码,每次连接后需要手工添加路由表,不然不能访问到服务器,ppp0是该网卡的名称.可通过ifconfig查看192.168.2.0/24是自己外网vpn服务器给内部电脑分配的内网ip网关前缀</span>\n          <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'xxxxxx'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token parameter variable\">-S</span> route <span class=\"token function\">add</span> <span class=\"token parameter variable\">-net</span> <span class=\"token number\">192.168</span>.2.0/24 ppp0\n      <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">fi</span>\n<span class=\"token function\">sleep</span> <span class=\"token number\">5</span>\n\n<span class=\"token keyword\">done</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre><code>注: 某条命令需要sudo执行的话,在脚本中可使用echo 'xxxxxx' | sudo -S 的方式,xxxxxx就是对应的密码\n</code></pre>\n<p>然后给脚本添加执行权限.sudo chmod +x</p>\n<h3 id=\"创建一个service文件\"><a href=\"#创建一个service文件\" class=\"headerlink\" title=\"创建一个service文件\"></a>创建一个 service 文件</h3><p><code>sudo vim /etc/systemd/system/auto_startVPN.service</code></p>\n<p>详细内容如下:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span>自动连接vpn <span class=\"token comment\">#自定义的简介描述</span>\n<span class=\"token assign-left variable\">After</span><span class=\"token operator\">=</span>network-online.target.wants <span class=\"token comment\">#脚本所需要的前置service，可在/etc/systemd/system/下查看</span>\n\n<span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/home/xxx/xxx/auto_conn.sh <span class=\"token comment\">#第一步中的脚本文件路径</span>\n\n<span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>service 文件一般正常的启动文件主要分成三部分</p>\n<p>[Unit] 段：启动顺序与依赖关系</p>\n<p>[Service] 段：启动行为，如何启动，启动类型</p>\n<p>[Install] 段：定义如何安装这个配置文件，即怎样做到开机启动</p>\n<h3 id=\"使用systemctl命令使能这个服务开机启动\"><a href=\"#使用systemctl命令使能这个服务开机启动\" class=\"headerlink\" title=\"使用systemctl命令使能这个服务开机启动\"></a>使用 systemctl 命令使能这个服务开机启动</h3><p><code>sudo systemctl daemon-reload</code> // 重新加载配置文件</p>\n<p><code>sudo systemctl enable auto_startVPN.service</code> // 设置开机启动刚刚新建的自动连接 vpn 的服务</p>\n<p>重启电脑，等待个大约 10 多秒，执行 ifconfig, 会发现连接中会有 ppp0 这个网卡设备和对应的 ip 地址等信息，说明脚本执行成功也成功的自动连接上了 vpn 服务器.</p>\n","excerpt":"","more":"<blockquote>\n<p>前段时间在一台公网服务器上搭建了 vpn 服务用来映射内网一台 gitlab 服务器，实现跨网络也能进行代码提交等操作。过程中经过查找网络上的博客文档基本都没啥问题，但是后续使用过程中，发现客户端 (pptp-linux) vpn 连接会自动断开 (大约是晚上的时候), 后面写了一个脚本后台常驻，检测 vpn 是否连接，如果断开则自动重连。但是问题来了，如果服务器关机了然后开机，则不会自动去连接，需要手工执行连接的脚本。于是，查找相关的 systemd 方式实现开机启动执行相关脚本。由于内网服务器默认登录的账户不是 root 身份，所以使用其他小伙伴的建立 /etc/rc.local 文件的方式是未成功。以下是测试能够通过的方式 (我的内网 gitlab 服务器是 Ubuntu18.04.1-server 版，理论上只要使用 systemd 的方式来管理系统服务启动的发行版都可以)</p>\n</blockquote>\n<h3 id=\"准备好要执行的脚本文件-auto-conn-sh\"><a href=\"#准备好要执行的脚本文件-auto-conn-sh\" class=\"headerlink\" title=\"准备好要执行的脚本文件(auto_conn.sh)\"></a>准备好要执行的脚本文件 (auto_conn.sh)</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#! /bin/sh</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">true</span>\n<span class=\"token assign-left variable\">pppdNum</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">ifconfig</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> ppp0 <span class=\"token operator\">|</span> <span class=\"token function\">wc</span> <span class=\"token parameter variable\">-l</span><span class=\"token variable\">`</span></span>\n<span class=\"token keyword\">do</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"pppdNum = <span class=\"token variable\">$pppdNum</span>\"</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$pppdNum</span> <span class=\"token parameter variable\">-le</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n      <span class=\"token comment\"># </span>\n      <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"vpn is down,waitting for connectting again...\"</span>\n      <span class=\"token function\">sleep</span> <span class=\"token number\">10</span>\n      <span class=\"token assign-left variable\">pppdNum_1</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">ifconfig</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> ppp0 <span class=\"token operator\">|</span> <span class=\"token function\">wc</span> <span class=\"token parameter variable\">-l</span><span class=\"token variable\">`</span></span>\n      <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"pppdNum = <span class=\"token variable\">$pppdNum_1</span>\"</span>\n      <span class=\"token comment\">#</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$pppdNum_1</span> <span class=\"token parameter variable\">-ge</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">]</span>\n      <span class=\"token keyword\">then</span>\n          <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"vpn has autolly connect success again!\"</span>\n          <span class=\"token comment\"># xxxxx是sudo执行的密码,每次连接后需要手工添加路由表,不然不能访问到服务器,ppp0是该网卡的名称.可通过ifconfig查看192.168.2.0/24是自己外网vpn服务器给内部电脑分配的内网ip网关前缀</span>\n          <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'xxxxx'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token parameter variable\">-S</span> route <span class=\"token function\">add</span> <span class=\"token parameter variable\">-net</span> <span class=\"token number\">192.168</span>.2.0/24 ppp0\n      <span class=\"token keyword\">else</span>\n          <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"connectting..\"</span>\n          <span class=\"token comment\"># xxxxx是sudo执行的密码,vpn_name是自定义vpn连接的名称,000.000.000.000是vpn服务器的ip(公网ip),username是vpn登录的用户名,passwd是vpn登录的密码</span>\n          <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'xxxxxx'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token parameter variable\">-S</span> pptpsetup <span class=\"token parameter variable\">--create</span> vpn_name <span class=\"token parameter variable\">--server</span> 000.000.000.000 <span class=\"token parameter variable\">--username</span> username <span class=\"token parameter variable\">--password</span> <span class=\"token function\">passwd</span> vpn-only <span class=\"token parameter variable\">--encrypt</span> <span class=\"token parameter variable\">--start</span>\n          <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'c vpn_client'</span> <span class=\"token operator\">&gt;</span> /var/run/xl2tpd/l2tp-control\n              <span class=\"token function\">sleep</span> <span class=\"token number\">10</span>\n          <span class=\"token comment\"># xxxxx是sudo执行的密码,每次连接后需要手工添加路由表,不然不能访问到服务器,ppp0是该网卡的名称.可通过ifconfig查看192.168.2.0/24是自己外网vpn服务器给内部电脑分配的内网ip网关前缀</span>\n          <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'xxxxxx'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token parameter variable\">-S</span> route <span class=\"token function\">add</span> <span class=\"token parameter variable\">-net</span> <span class=\"token number\">192.168</span>.2.0/24 ppp0\n      <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">fi</span>\n<span class=\"token function\">sleep</span> <span class=\"token number\">5</span>\n\n<span class=\"token keyword\">done</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre><code>注: 某条命令需要sudo执行的话,在脚本中可使用echo 'xxxxxx' | sudo -S 的方式,xxxxxx就是对应的密码\n</code></pre>\n<p>然后给脚本添加执行权限.sudo chmod +x</p>\n<h3 id=\"创建一个service文件\"><a href=\"#创建一个service文件\" class=\"headerlink\" title=\"创建一个service文件\"></a>创建一个 service 文件</h3><p><code>sudo vim /etc/systemd/system/auto_startVPN.service</code></p>\n<p>详细内容如下:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span>自动连接vpn <span class=\"token comment\">#自定义的简介描述</span>\n<span class=\"token assign-left variable\">After</span><span class=\"token operator\">=</span>network-online.target.wants <span class=\"token comment\">#脚本所需要的前置service，可在/etc/systemd/system/下查看</span>\n\n<span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/home/xxx/xxx/auto_conn.sh <span class=\"token comment\">#第一步中的脚本文件路径</span>\n\n<span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>service 文件一般正常的启动文件主要分成三部分</p>\n<p>[Unit] 段：启动顺序与依赖关系</p>\n<p>[Service] 段：启动行为，如何启动，启动类型</p>\n<p>[Install] 段：定义如何安装这个配置文件，即怎样做到开机启动</p>\n<h3 id=\"使用systemctl命令使能这个服务开机启动\"><a href=\"#使用systemctl命令使能这个服务开机启动\" class=\"headerlink\" title=\"使用systemctl命令使能这个服务开机启动\"></a>使用 systemctl 命令使能这个服务开机启动</h3><p><code>sudo systemctl daemon-reload</code> // 重新加载配置文件</p>\n<p><code>sudo systemctl enable auto_startVPN.service</code> // 设置开机启动刚刚新建的自动连接 vpn 的服务</p>\n<p>重启电脑，等待个大约 10 多秒，执行 ifconfig, 会发现连接中会有 ppp0 这个网卡设备和对应的 ip 地址等信息，说明脚本执行成功也成功的自动连接上了 vpn 服务器.</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:18:02 GMT+0800 (China Standard Time)","title":"linux 使用 systemd 方式添加开机自动执行脚本","path":"2019/06/26/linux使用systemd方式添加开机自动执行脚本/","eyeCatchImage":null,"excerpt":"linux使用systemd方式添加开机自动执行脚本","date":{"_isAMomentObject":true,"_i":"2019-06-26T02:31:19.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2019-06-26T02:31:19.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["linux"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":539},{"title":"linux 系统之间远程连接和传输文件","date":"2018-08-07T02:06:41.000Z","description":"linux系统之间远程连接和传输文件","_content":"\n    >摘要: \n            \n    1.Windows与Windows系统之间可以开启远程桌面连接实现远程控制和传输文件,也可以搭建ftp服务器然后通过ftp客户端\n    (例如:fileZilla)来实现.\n    2.从Windows到Linux,可以使用xshell等工具来实现远程连接.然后使用winscp等工具实现文件传输.当然在Linux上\n    搭建ftp服务器,然后用ftp客户端连接也可\n    3.从Linux(桌面版,server版一般没必要)到Windows.可以使用remmina工具来远程连接Windows进行连接操作.\n    文件拷贝推荐在Windows上搭建ftpserver(fileZilla-server),然后使用fileZilla client连接传输文件.\n\n     注:fileZilla跨平台的.占用资源少,操作方便.简直神器~\n     \n    4.另外一种方式就是不分双方的操作系统.只要在对应的机器上安装对应的一些工具,比如teamviewer等.也可实现远程连接\n    和文件传输.\n    5.Linux到Linux之间通常是桌面端到server端的操作,有时候为了方便或者为了减少服务器资源占用,server端不需要安装\n    额外的一些工具等,这时推荐使用Linux下的ssh和scp命令进行操作(大力推荐~)\n\n## 1.ssh命令\n\n  简单说，SSH是一种网络协议，用于计算机之间的加密登录。如果一个用户从本地计算机，使用SSH协议登录另一台远程计算机，我们就可以认为，这种登录是安全的，即使被中途截获，密码也不会泄露.SSH只是一种协议，存在多种实现，既有商业实现，也有开源实现。本文针对的实现是OpenSSH(linux一般自带)，它是自由软件，应用非常广泛.注:ssh协议默认端口一般是22\n  \n    ssh -V 查看当前安装的ssh版本\n\n1.1 连接到远程主机方式1\n    \n    ssh username@serverAddress username是登录远程主机的用户名,serverAddress远程主机地址\n\n1.2 连接到远程主机方式2\n\n    ssh serverAddress -l username -p 22 serverAddress远程主机地址,可以是一个域名地址或者ip地址,\n    username是登录远程主机的用户名, -p 指定远程服务端ssh协议开放的端口.\n\n## 2.scp命令\n\n    scp用于实现在Linux server端和Linux客户端实现文件传输\n\n2.1 上传文件到服务器端,注:是文件,不是文件夹\n\n    scp ./test.js root@192.168.1.106:/var/www/ #将本地当前目录下的test.js文件上传到192.168.1.106的\n    /var/www/目录下.root登录远程及其的用户名.\n\n2.2 上传文件夹(目录)到服务器端\n\n    scp -r ./test/ root@192.168.1.106:/var/www/ #将本地当前目录下的test目录上传到192.168.1.106的/var/www/目录下.\n    -r参数代表上传目录\n\n2.3 从服务器上下载文件\n\n    scp root@192.168.1.106:/var/www/test.js /home/ #将服务器/var/www/目录下的test.js文件下载到本地的home目录下\n\n2.4 从服务器下载整个目录\n\n    scp -r root@192.168.1.106:/var/www/test/ /home/ #将服务器上的/var/www/test/目录下载到本地的home目录下\n    -r参数代表目录","source":"_posts/linux系统之间远程连接和传输文件.md","raw":"---\ntitle: linux系统之间远程连接和传输文件\ndate: 2018-08-07 10:06:41\ndescription: linux系统之间远程连接和传输文件\ntags: linux\n---\n\n    >摘要: \n            \n    1.Windows与Windows系统之间可以开启远程桌面连接实现远程控制和传输文件,也可以搭建ftp服务器然后通过ftp客户端\n    (例如:fileZilla)来实现.\n    2.从Windows到Linux,可以使用xshell等工具来实现远程连接.然后使用winscp等工具实现文件传输.当然在Linux上\n    搭建ftp服务器,然后用ftp客户端连接也可\n    3.从Linux(桌面版,server版一般没必要)到Windows.可以使用remmina工具来远程连接Windows进行连接操作.\n    文件拷贝推荐在Windows上搭建ftpserver(fileZilla-server),然后使用fileZilla client连接传输文件.\n\n     注:fileZilla跨平台的.占用资源少,操作方便.简直神器~\n     \n    4.另外一种方式就是不分双方的操作系统.只要在对应的机器上安装对应的一些工具,比如teamviewer等.也可实现远程连接\n    和文件传输.\n    5.Linux到Linux之间通常是桌面端到server端的操作,有时候为了方便或者为了减少服务器资源占用,server端不需要安装\n    额外的一些工具等,这时推荐使用Linux下的ssh和scp命令进行操作(大力推荐~)\n\n## 1.ssh命令\n\n  简单说，SSH是一种网络协议，用于计算机之间的加密登录。如果一个用户从本地计算机，使用SSH协议登录另一台远程计算机，我们就可以认为，这种登录是安全的，即使被中途截获，密码也不会泄露.SSH只是一种协议，存在多种实现，既有商业实现，也有开源实现。本文针对的实现是OpenSSH(linux一般自带)，它是自由软件，应用非常广泛.注:ssh协议默认端口一般是22\n  \n    ssh -V 查看当前安装的ssh版本\n\n1.1 连接到远程主机方式1\n    \n    ssh username@serverAddress username是登录远程主机的用户名,serverAddress远程主机地址\n\n1.2 连接到远程主机方式2\n\n    ssh serverAddress -l username -p 22 serverAddress远程主机地址,可以是一个域名地址或者ip地址,\n    username是登录远程主机的用户名, -p 指定远程服务端ssh协议开放的端口.\n\n## 2.scp命令\n\n    scp用于实现在Linux server端和Linux客户端实现文件传输\n\n2.1 上传文件到服务器端,注:是文件,不是文件夹\n\n    scp ./test.js root@192.168.1.106:/var/www/ #将本地当前目录下的test.js文件上传到192.168.1.106的\n    /var/www/目录下.root登录远程及其的用户名.\n\n2.2 上传文件夹(目录)到服务器端\n\n    scp -r ./test/ root@192.168.1.106:/var/www/ #将本地当前目录下的test目录上传到192.168.1.106的/var/www/目录下.\n    -r参数代表上传目录\n\n2.3 从服务器上下载文件\n\n    scp root@192.168.1.106:/var/www/test.js /home/ #将服务器/var/www/目录下的test.js文件下载到本地的home目录下\n\n2.4 从服务器下载整个目录\n\n    scp -r root@192.168.1.106:/var/www/test/ /home/ #将服务器上的/var/www/test/目录下载到本地的home目录下\n    -r参数代表目录","slug":"linux系统之间远程连接和传输文件","published":1,"updated":"2025-04-22T08:18:30.517Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745it0016d8gkb5krc7dw","content":"<pre><code>&gt;摘要: \n        \n1.Windows与Windows系统之间可以开启远程桌面连接实现远程控制和传输文件,也可以搭建ftp服务器然后通过ftp客户端\n(例如:fileZilla)来实现.\n2.从Windows到Linux,可以使用xshell等工具来实现远程连接.然后使用winscp等工具实现文件传输.当然在Linux上\n搭建ftp服务器,然后用ftp客户端连接也可\n3.从Linux(桌面版,server版一般没必要)到Windows.可以使用remmina工具来远程连接Windows进行连接操作.\n文件拷贝推荐在Windows上搭建ftpserver(fileZilla-server),然后使用fileZilla client连接传输文件.\n\n 注:fileZilla跨平台的.占用资源少,操作方便.简直神器~\n \n4.另外一种方式就是不分双方的操作系统.只要在对应的机器上安装对应的一些工具,比如teamviewer等.也可实现远程连接\n和文件传输.\n5.Linux到Linux之间通常是桌面端到server端的操作,有时候为了方便或者为了减少服务器资源占用,server端不需要安装\n额外的一些工具等,这时推荐使用Linux下的ssh和scp命令进行操作(大力推荐~)\n</code></pre>\n<h2 id=\"1-ssh命令\"><a href=\"#1-ssh命令\" class=\"headerlink\" title=\"1.ssh命令\"></a>1.ssh 命令</h2><p>  简单说，SSH 是一种网络协议，用于计算机之间的加密登录。如果一个用户从本地计算机，使用 SSH 协议登录另一台远程计算机，我们就可以认为，这种登录是安全的，即使被中途截获，密码也不会泄露.SSH 只是一种协议，存在多种实现，既有商业实现，也有开源实现。本文针对的实现是 OpenSSH (linux 一般自带)，它是自由软件，应用非常广泛。注:ssh 协议默认端口一般是 22</p>\n<pre><code>ssh -V 查看当前安装的ssh版本\n</code></pre>\n<p>1.1 连接到远程主机方式 1</p>\n<pre><code>ssh username@serverAddress username是登录远程主机的用户名,serverAddress远程主机地址\n</code></pre>\n<p>1.2 连接到远程主机方式 2</p>\n<pre><code>ssh serverAddress -l username -p 22 serverAddress远程主机地址,可以是一个域名地址或者ip地址,\nusername是登录远程主机的用户名, -p 指定远程服务端ssh协议开放的端口.\n</code></pre>\n<h2 id=\"2-scp命令\"><a href=\"#2-scp命令\" class=\"headerlink\" title=\"2.scp命令\"></a>2.scp 命令</h2><pre><code>scp用于实现在Linux server端和Linux客户端实现文件传输\n</code></pre>\n<p>2.1 上传文件到服务器端，注：是文件，不是文件夹</p>\n<pre><code>scp ./test.js root@192.168.1.106:/var/www/ #将本地当前目录下的test.js文件上传到192.168.1.106的\n/var/www/目录下.root登录远程及其的用户名.\n</code></pre>\n<p>2.2 上传文件夹 (目录) 到服务器端</p>\n<pre><code>scp -r ./test/ root@192.168.1.106:/var/www/ #将本地当前目录下的test目录上传到192.168.1.106的/var/www/目录下.\n-r参数代表上传目录\n</code></pre>\n<p>2.3 从服务器上下载文件</p>\n<pre><code>scp root@192.168.1.106:/var/www/test.js /home/ #将服务器/var/www/目录下的test.js文件下载到本地的home目录下\n</code></pre>\n<p>2.4 从服务器下载整个目录</p>\n<pre><code>scp -r root@192.168.1.106:/var/www/test/ /home/ #将服务器上的/var/www/test/目录下载到本地的home目录下\n-r参数代表目录\n</code></pre>\n","excerpt":"","more":"<pre><code>&gt;摘要: \n        \n1.Windows与Windows系统之间可以开启远程桌面连接实现远程控制和传输文件,也可以搭建ftp服务器然后通过ftp客户端\n(例如:fileZilla)来实现.\n2.从Windows到Linux,可以使用xshell等工具来实现远程连接.然后使用winscp等工具实现文件传输.当然在Linux上\n搭建ftp服务器,然后用ftp客户端连接也可\n3.从Linux(桌面版,server版一般没必要)到Windows.可以使用remmina工具来远程连接Windows进行连接操作.\n文件拷贝推荐在Windows上搭建ftpserver(fileZilla-server),然后使用fileZilla client连接传输文件.\n\n 注:fileZilla跨平台的.占用资源少,操作方便.简直神器~\n \n4.另外一种方式就是不分双方的操作系统.只要在对应的机器上安装对应的一些工具,比如teamviewer等.也可实现远程连接\n和文件传输.\n5.Linux到Linux之间通常是桌面端到server端的操作,有时候为了方便或者为了减少服务器资源占用,server端不需要安装\n额外的一些工具等,这时推荐使用Linux下的ssh和scp命令进行操作(大力推荐~)\n</code></pre>\n<h2 id=\"1-ssh命令\"><a href=\"#1-ssh命令\" class=\"headerlink\" title=\"1.ssh命令\"></a>1.ssh 命令</h2><p>  简单说，SSH 是一种网络协议，用于计算机之间的加密登录。如果一个用户从本地计算机，使用 SSH 协议登录另一台远程计算机，我们就可以认为，这种登录是安全的，即使被中途截获，密码也不会泄露.SSH 只是一种协议，存在多种实现，既有商业实现，也有开源实现。本文针对的实现是 OpenSSH (linux 一般自带)，它是自由软件，应用非常广泛。注:ssh 协议默认端口一般是 22</p>\n<pre><code>ssh -V 查看当前安装的ssh版本\n</code></pre>\n<p>1.1 连接到远程主机方式 1</p>\n<pre><code>ssh username@serverAddress username是登录远程主机的用户名,serverAddress远程主机地址\n</code></pre>\n<p>1.2 连接到远程主机方式 2</p>\n<pre><code>ssh serverAddress -l username -p 22 serverAddress远程主机地址,可以是一个域名地址或者ip地址,\nusername是登录远程主机的用户名, -p 指定远程服务端ssh协议开放的端口.\n</code></pre>\n<h2 id=\"2-scp命令\"><a href=\"#2-scp命令\" class=\"headerlink\" title=\"2.scp命令\"></a>2.scp 命令</h2><pre><code>scp用于实现在Linux server端和Linux客户端实现文件传输\n</code></pre>\n<p>2.1 上传文件到服务器端，注：是文件，不是文件夹</p>\n<pre><code>scp ./test.js root@192.168.1.106:/var/www/ #将本地当前目录下的test.js文件上传到192.168.1.106的\n/var/www/目录下.root登录远程及其的用户名.\n</code></pre>\n<p>2.2 上传文件夹 (目录) 到服务器端</p>\n<pre><code>scp -r ./test/ root@192.168.1.106:/var/www/ #将本地当前目录下的test目录上传到192.168.1.106的/var/www/目录下.\n-r参数代表上传目录\n</code></pre>\n<p>2.3 从服务器上下载文件</p>\n<pre><code>scp root@192.168.1.106:/var/www/test.js /home/ #将服务器/var/www/目录下的test.js文件下载到本地的home目录下\n</code></pre>\n<p>2.4 从服务器下载整个目录</p>\n<pre><code>scp -r root@192.168.1.106:/var/www/test/ /home/ #将服务器上的/var/www/test/目录下载到本地的home目录下\n-r参数代表目录\n</code></pre>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:18:30 GMT+0800 (China Standard Time)","title":"linux 系统之间远程连接和传输文件","path":"2018/08/07/linux系统之间远程连接和传输文件/","eyeCatchImage":null,"excerpt":"linux系统之间远程连接和传输文件","date":{"_isAMomentObject":true,"_i":"2018-08-07T02:06:41.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-08-07T02:06:41.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["linux"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":794},{"title":"nginx-rtmp-module-ffmpeg 视频推流和 rtsp 转 rtmp 及 hls","date":"2019-05-31T08:53:11.000Z","description":"视频推流和rtsp转rtmp及hls","_content":"\n### RTSP、RTMP、HTTP协议比较\n\n#### 共同点\n\n1.都是用在应用层的协议\n\n2.理论上这三种协议都可以做直播和点播，但直播一般用RTSP和RTMP点播用HTTP\n\n#### 不同点\n\n1.HTTP协议（HyperText Transfer Protocol，超文本传输协议)，是因特网上应用最为广泛的一种网络传输协议，所有的WWW文件都必须遵守这个标准,HTTP是一个基于TCP/IP通信协议来传递数据(HTML 文件, 图片文件, 查询结果等).所以HTTP不是流媒体协议，RTMP和RTSP是流媒体协议\n\n2.RTMP是Real Time Messaging Protocol（实时消息传输协议）的首字母缩写。该协议基于TCP，是一个协议族，包括RTMP基本协议及RTMPT/RTMPS/RTMPE等多种变种。RTMP是一种设计用来进行实时数据通信的网络协议，主要用来在Flash/AIR平台和支持RTMP协议的流媒体/交互服务器之间进行音视频和数据通信,RTMP一般传输flv,f4v格式流.\n\n3.RTSP（Real Time Streaming Protocol），RFC2326，实时流传输协议.RTSP以客户端方式工作，对流媒体提供播放、暂停、后退、前进等操作.RTSP传输的一般是TS、MP4格式的流，其传输一般需要2~3个通道，命令和数据通道分离。使用RTSP协议传输流媒体数据需要有专门的媒体播放器和媒体服务器，也就是需要支持RTSP协议的客户端和服务器。\n\n### ffmpeg简介\n\nFFmpeg是一套可以用来记录、转换数字音频、视频，并能将其转化为流的开源计算机程序。它包括了目前领先的音/视频编码库libavcodec.可以轻易地实现多种视频格式之间的相互转换，例如可以将摄录下的视频avi等转成现在视频网站所采用的flv格式\n\n### nginx+nginx-rtmp-moudle安装\n\n分别下载nginx和nginx-rtmp的源码然后进行编译即可.在此,为了方便我是直接使用的docker的tiangolo/nginx-rtmp镜像,docker安装参考上一篇初识docker文档\n\n`docker pull tiangolo/nginx-rtmp` // 拉取nginx-rtmp镜像\n\n`docker run -it --name nginx-rtmp tiangolo/nginx-rtmp -p 1935:1935` // 第一次运行容器,取个别名,后续可直接使用 `docker start nginx-rtmp`\n\n使用`netstat -tunlp | grep 1935` 检测1935端口是否正在监听,正常情况是正在监听中\n\n### ffmpeg安装\n\n`sudo apt install ffmpeg` // 安装ffmpeg(我当前环境deepin,仓库里面自带ffmpeg包)\n\n其他操作系统需要去官网下载对应的安装包即可或者按照官方文档添加对应系统的ppa进行安装即可.\n\nffmpeg参数:\n\n-re : 表示使用文件的原始帧率进行读取，因为ffmpeg读取视频帧的速度很快，如果不使用这个参数，ffmpeg可以在很短时间就把video.mp4中的视频帧全部读取完并进行推流，这样就无法体现出视频播放的效果了\n\n-i :这个参数表示输入 ，后面跟的路劲文件就是输入文件。\n\n-vcodec copy : -vcodec表示使用的视频编解码器 ，前缀v表示video。后面紧跟的copy 表示复制使用源文件的视频编解码器，比如原文件的编解码器(codec)是h264，则这里就使用h264\n\n-acodec copy : -acodec表示使用的音频编解码器，前缀a表示audio。后面的copy 表示使用源文件的音频编解码器\n\n-b:v 800k : -b:v表示视频的比特率(bitrate) ，为800k\n\n-b:a 32k : 表示音频的比特率为32k\n\n-f flv : -f表示format ，就是强制输出格式为flv，这一步其实也叫封装(mux)，封装要做的事就是把视频和音频混合在一起，进行同步。紧跟在后面的rtmp://xxx.xxx.xxx/xxx 表示输出的\"文件名\"，这个文件名可以是一个本地的文件，也可以指定为rtmp流媒体地址。指定为rtmp流媒体地址后，则ffmpeg就可以进行推流\n\n### ffmpeg将rtsp转码为rtmp\n\n使用ffmpeg命令,将rtsp转码为rtmp.ffmpeg参数项很多,未对其深究,直接参考网友的命令的.-i后面是rtsp流地址.\n\n`ffmpeg -re -rtsp_transport tcp -i \"rtsp://184.72.239.149/vod/mp4://BigBuckBunny_175k.mov\" -f flv -vcodec libx264 -vprofile baseline -acodec aac -ar 44100 -strict -2 -ac 1 -f flv -r 10 -s 1280x720 -q 10 \"rtmp://127.0.0.1:1935/live/demo\"`\n\n    在执行转码命令过程中,可能会报信息类似 Past duration 0.999992 too large 的警告错误,经查询资料,是在-r参数后面\n    指定的视频帧率参数导致的.rtsp://184.72.239.149/vod/mp4://BigBuckBunny_175k.mov这个地址是网络上的地址,\n    可使用vlc media player查看源的帧率而设置\n\n#### 使用VLC media player测试播放转换后的rtmp地址\n\n打开VLC media player播放器.在工具栏\"媒体->打开网络串流\"然后输入rtmp://127.0.0.1:1935/live/demo点击确定即可进行直播预览转换后的rtmp视频流\n\n![](/images/rtmp-result.png)\n\n### ffmpeg将rtsp转码为hls\n\n使用ffmpeg命令,将rtsp转码为hls.ffmpeg参数项很多,未对其深究,直接参考网友的命令的.-i后面是rtsp流地址.\n\n`ffmpeg -f rtsp -rtsp_transport tcp -i rtsp://192.168.100.2/longzhu/demo_2 -r 23 -f hls -hls_time 4 -hls_list_size 5 -hls_wrap 10 /home/bz/Desktop/h5live/longzhuchao.m3u8`\n\n    在执行转码命令过程中,可能会报信息类似 Past duration 0.999992 too large 的警告错误,经查询资料,是在-r参数后面\n    指定的视频帧率参数导致的.rtsp://184.72.239.149/vod/mp4://BigBuckBunny_175k.mov这个地址是网络上的地址,\n    可使用vlc media player查看源的帧率而设置\n\n#### 使用VLC media player测试播放转换后的hls地址(m3u8文件)\n\n打开VLC media player播放器.在工具栏\"媒体->打开网络串流\"然后输入http://192.168.100.31/hlsvideo/longzhuchao.m3u8点击确定即可进行直播预览转换后的rtmp视频流,该地址是在nginx中配置了的\n\n![](/images/hls-result.png)\n\n### ffmpeg推送视频文件到rtsp服务器\n\n`ffmpeg -re -i ./龙珠超.布罗利.mp4 -vcodec copy -codec copy -f rtsp rtsp://192.168.252.1/longzhu/demo_2`\n\n    注:使用了easydarwin,rtsp://192.168.252.1地址就是启动easydarwin成功后的rtsp server地址\n\n#### 使用VLC media player测试播放推流后rtsp地址\n\n![](/images/push_to_rtsp.png)\n\n### ffmpeg推送视频文件到rtmp服务器\n\n`ffmpeg -re -i ./龙珠超.布罗利.mp4 -vcodec copy -acodec copy -b:v 800k -b:a 32k -f flv rtmp://192.168.100.31:1935/rtmplive_demo/demo_3`\n\n    注:rtmp地址中的rtmplive_demo必须和nginx中配置的application名称一致才能推流成功,192.168.100.31是我的一台虚拟机\n\n#### 使用VLC media player测试播放推流后rtmp地址\n\n![](/images/push_to_rtmp.png)\n\n### ffmpeg转发rtsp流\n\n`ffmpeg -i rtsp://192.168.100.2:8554/longzhu/live -codec copy -f rtsp rtsp://192.168.252.1/longzhu/demo_1`\n\n    第一个rtsp是源地址,第二个是新地址.但是必须保证新地址是能够支持rtsp协议的才行.我试过使用nginx+rtsp是不能够\n    成功的.所以换成了easydarwin,rtsp://192.168.252.1地址就是启动easydarwin成功后的rtsp server地址.\n\n效果图如下:\n\n![](/images/rtsp_to_rtsp.png)\n\n**注:关于测试rtsp地址问题,上面的地址我测试的时候能够使用,但是不能保证以后能够一直正常使用,所以有网友图文讲解了使用VLC media player自制rtsp流.小伙伴的力量强大!其地址如下:https://blog.csdn.net/taoerit/article/details/51920018 \n为了防止地址失效,我将页面截了一张完整图.图片如下:**\n\n![](/images/build_push_rtsp.jpg)","source":"_posts/nginx-rtmp-module-ffmpeg视频推流和rtsp转rtmp及hls.md","raw":"---\ntitle: nginx-rtmp-module-ffmpeg视频推流和rtsp转rtmp及hls\ndate: 2019-05-31 16:53:11\ndescription: 视频推流和rtsp转rtmp及hls\ntags:\n  - nginx\n  - rtmp\n  - rtsp\n  - ffmpeg\n---\n\n### RTSP、RTMP、HTTP协议比较\n\n#### 共同点\n\n1.都是用在应用层的协议\n\n2.理论上这三种协议都可以做直播和点播，但直播一般用RTSP和RTMP点播用HTTP\n\n#### 不同点\n\n1.HTTP协议（HyperText Transfer Protocol，超文本传输协议)，是因特网上应用最为广泛的一种网络传输协议，所有的WWW文件都必须遵守这个标准,HTTP是一个基于TCP/IP通信协议来传递数据(HTML 文件, 图片文件, 查询结果等).所以HTTP不是流媒体协议，RTMP和RTSP是流媒体协议\n\n2.RTMP是Real Time Messaging Protocol（实时消息传输协议）的首字母缩写。该协议基于TCP，是一个协议族，包括RTMP基本协议及RTMPT/RTMPS/RTMPE等多种变种。RTMP是一种设计用来进行实时数据通信的网络协议，主要用来在Flash/AIR平台和支持RTMP协议的流媒体/交互服务器之间进行音视频和数据通信,RTMP一般传输flv,f4v格式流.\n\n3.RTSP（Real Time Streaming Protocol），RFC2326，实时流传输协议.RTSP以客户端方式工作，对流媒体提供播放、暂停、后退、前进等操作.RTSP传输的一般是TS、MP4格式的流，其传输一般需要2~3个通道，命令和数据通道分离。使用RTSP协议传输流媒体数据需要有专门的媒体播放器和媒体服务器，也就是需要支持RTSP协议的客户端和服务器。\n\n### ffmpeg简介\n\nFFmpeg是一套可以用来记录、转换数字音频、视频，并能将其转化为流的开源计算机程序。它包括了目前领先的音/视频编码库libavcodec.可以轻易地实现多种视频格式之间的相互转换，例如可以将摄录下的视频avi等转成现在视频网站所采用的flv格式\n\n### nginx+nginx-rtmp-moudle安装\n\n分别下载nginx和nginx-rtmp的源码然后进行编译即可.在此,为了方便我是直接使用的docker的tiangolo/nginx-rtmp镜像,docker安装参考上一篇初识docker文档\n\n`docker pull tiangolo/nginx-rtmp` // 拉取nginx-rtmp镜像\n\n`docker run -it --name nginx-rtmp tiangolo/nginx-rtmp -p 1935:1935` // 第一次运行容器,取个别名,后续可直接使用 `docker start nginx-rtmp`\n\n使用`netstat -tunlp | grep 1935` 检测1935端口是否正在监听,正常情况是正在监听中\n\n### ffmpeg安装\n\n`sudo apt install ffmpeg` // 安装ffmpeg(我当前环境deepin,仓库里面自带ffmpeg包)\n\n其他操作系统需要去官网下载对应的安装包即可或者按照官方文档添加对应系统的ppa进行安装即可.\n\nffmpeg参数:\n\n-re : 表示使用文件的原始帧率进行读取，因为ffmpeg读取视频帧的速度很快，如果不使用这个参数，ffmpeg可以在很短时间就把video.mp4中的视频帧全部读取完并进行推流，这样就无法体现出视频播放的效果了\n\n-i :这个参数表示输入 ，后面跟的路劲文件就是输入文件。\n\n-vcodec copy : -vcodec表示使用的视频编解码器 ，前缀v表示video。后面紧跟的copy 表示复制使用源文件的视频编解码器，比如原文件的编解码器(codec)是h264，则这里就使用h264\n\n-acodec copy : -acodec表示使用的音频编解码器，前缀a表示audio。后面的copy 表示使用源文件的音频编解码器\n\n-b:v 800k : -b:v表示视频的比特率(bitrate) ，为800k\n\n-b:a 32k : 表示音频的比特率为32k\n\n-f flv : -f表示format ，就是强制输出格式为flv，这一步其实也叫封装(mux)，封装要做的事就是把视频和音频混合在一起，进行同步。紧跟在后面的rtmp://xxx.xxx.xxx/xxx 表示输出的\"文件名\"，这个文件名可以是一个本地的文件，也可以指定为rtmp流媒体地址。指定为rtmp流媒体地址后，则ffmpeg就可以进行推流\n\n### ffmpeg将rtsp转码为rtmp\n\n使用ffmpeg命令,将rtsp转码为rtmp.ffmpeg参数项很多,未对其深究,直接参考网友的命令的.-i后面是rtsp流地址.\n\n`ffmpeg -re -rtsp_transport tcp -i \"rtsp://184.72.239.149/vod/mp4://BigBuckBunny_175k.mov\" -f flv -vcodec libx264 -vprofile baseline -acodec aac -ar 44100 -strict -2 -ac 1 -f flv -r 10 -s 1280x720 -q 10 \"rtmp://127.0.0.1:1935/live/demo\"`\n\n    在执行转码命令过程中,可能会报信息类似 Past duration 0.999992 too large 的警告错误,经查询资料,是在-r参数后面\n    指定的视频帧率参数导致的.rtsp://184.72.239.149/vod/mp4://BigBuckBunny_175k.mov这个地址是网络上的地址,\n    可使用vlc media player查看源的帧率而设置\n\n#### 使用VLC media player测试播放转换后的rtmp地址\n\n打开VLC media player播放器.在工具栏\"媒体->打开网络串流\"然后输入rtmp://127.0.0.1:1935/live/demo点击确定即可进行直播预览转换后的rtmp视频流\n\n![](/images/rtmp-result.png)\n\n### ffmpeg将rtsp转码为hls\n\n使用ffmpeg命令,将rtsp转码为hls.ffmpeg参数项很多,未对其深究,直接参考网友的命令的.-i后面是rtsp流地址.\n\n`ffmpeg -f rtsp -rtsp_transport tcp -i rtsp://192.168.100.2/longzhu/demo_2 -r 23 -f hls -hls_time 4 -hls_list_size 5 -hls_wrap 10 /home/bz/Desktop/h5live/longzhuchao.m3u8`\n\n    在执行转码命令过程中,可能会报信息类似 Past duration 0.999992 too large 的警告错误,经查询资料,是在-r参数后面\n    指定的视频帧率参数导致的.rtsp://184.72.239.149/vod/mp4://BigBuckBunny_175k.mov这个地址是网络上的地址,\n    可使用vlc media player查看源的帧率而设置\n\n#### 使用VLC media player测试播放转换后的hls地址(m3u8文件)\n\n打开VLC media player播放器.在工具栏\"媒体->打开网络串流\"然后输入http://192.168.100.31/hlsvideo/longzhuchao.m3u8点击确定即可进行直播预览转换后的rtmp视频流,该地址是在nginx中配置了的\n\n![](/images/hls-result.png)\n\n### ffmpeg推送视频文件到rtsp服务器\n\n`ffmpeg -re -i ./龙珠超.布罗利.mp4 -vcodec copy -codec copy -f rtsp rtsp://192.168.252.1/longzhu/demo_2`\n\n    注:使用了easydarwin,rtsp://192.168.252.1地址就是启动easydarwin成功后的rtsp server地址\n\n#### 使用VLC media player测试播放推流后rtsp地址\n\n![](/images/push_to_rtsp.png)\n\n### ffmpeg推送视频文件到rtmp服务器\n\n`ffmpeg -re -i ./龙珠超.布罗利.mp4 -vcodec copy -acodec copy -b:v 800k -b:a 32k -f flv rtmp://192.168.100.31:1935/rtmplive_demo/demo_3`\n\n    注:rtmp地址中的rtmplive_demo必须和nginx中配置的application名称一致才能推流成功,192.168.100.31是我的一台虚拟机\n\n#### 使用VLC media player测试播放推流后rtmp地址\n\n![](/images/push_to_rtmp.png)\n\n### ffmpeg转发rtsp流\n\n`ffmpeg -i rtsp://192.168.100.2:8554/longzhu/live -codec copy -f rtsp rtsp://192.168.252.1/longzhu/demo_1`\n\n    第一个rtsp是源地址,第二个是新地址.但是必须保证新地址是能够支持rtsp协议的才行.我试过使用nginx+rtsp是不能够\n    成功的.所以换成了easydarwin,rtsp://192.168.252.1地址就是启动easydarwin成功后的rtsp server地址.\n\n效果图如下:\n\n![](/images/rtsp_to_rtsp.png)\n\n**注:关于测试rtsp地址问题,上面的地址我测试的时候能够使用,但是不能保证以后能够一直正常使用,所以有网友图文讲解了使用VLC media player自制rtsp流.小伙伴的力量强大!其地址如下:https://blog.csdn.net/taoerit/article/details/51920018 \n为了防止地址失效,我将页面截了一张完整图.图片如下:**\n\n![](/images/build_push_rtsp.jpg)","slug":"nginx-rtmp-module-ffmpeg视频推流和rtsp转rtmp及hls","published":1,"updated":"2025-04-22T08:20:21.305Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745it0019d8gk39xq2ar1","content":"<h3 id=\"RTSP、RTMP、HTTP协议比较\"><a href=\"#RTSP、RTMP、HTTP协议比较\" class=\"headerlink\" title=\"RTSP、RTMP、HTTP协议比较\"></a>RTSP、RTMP、HTTP 协议比较</h3><h4 id=\"共同点\"><a href=\"#共同点\" class=\"headerlink\" title=\"共同点\"></a>共同点</h4><p>1. 都是用在应用层的协议</p>\n<p>2. 理论上这三种协议都可以做直播和点播，但直播一般用 RTSP 和 RTMP 点播用 HTTP</p>\n<h4 id=\"不同点\"><a href=\"#不同点\" class=\"headerlink\" title=\"不同点\"></a>不同点</h4><p>1.HTTP 协议（HyperText Transfer Protocol，超文本传输协议)，是因特网上应用最为广泛的一种网络传输协议，所有的 WWW 文件都必须遵守这个标准，HTTP 是一个基于 TCP/IP 通信协议来传递数据 (HTML 文件，图片文件，查询结果等). 所以 HTTP 不是流媒体协议，RTMP 和 RTSP 是流媒体协议</p>\n<p>2.RTMP 是 Real Time Messaging Protocol（实时消息传输协议）的首字母缩写。该协议基于 TCP，是一个协议族，包括 RTMP 基本协议及 RTMPT/RTMPS/RTMPE 等多种变种。RTMP 是一种设计用来进行实时数据通信的网络协议，主要用来在 Flash/AIR 平台和支持 RTMP 协议的流媒体 / 交互服务器之间进行音视频和数据通信，RTMP 一般传输 flv,f4v 格式流.</p>\n<p>3.RTSP（Real Time Streaming Protocol），RFC2326，实时流传输协议.RTSP 以客户端方式工作，对流媒体提供播放、暂停、后退、前进等操作.RTSP 传输的一般是 TS、MP4 格式的流，其传输一般需要 2~3 个通道，命令和数据通道分离。使用 RTSP 协议传输流媒体数据需要有专门的媒体播放器和媒体服务器，也就是需要支持 RTSP 协议的客户端和服务器。</p>\n<h3 id=\"ffmpeg简介\"><a href=\"#ffmpeg简介\" class=\"headerlink\" title=\"ffmpeg简介\"></a>ffmpeg 简介</h3><p>FFmpeg 是一套可以用来记录、转换数字音频、视频，并能将其转化为流的开源计算机程序。它包括了目前领先的音 / 视频编码库 libavcodec. 可以轻易地实现多种视频格式之间的相互转换，例如可以将摄录下的视频 avi 等转成现在视频网站所采用的 flv 格式</p>\n<h3 id=\"nginx-nginx-rtmp-moudle安装\"><a href=\"#nginx-nginx-rtmp-moudle安装\" class=\"headerlink\" title=\"nginx+nginx-rtmp-moudle安装\"></a>nginx+nginx-rtmp-moudle 安装</h3><p>分别下载 nginx 和 nginx-rtmp 的源码然后进行编译即可。在此，为了方便我是直接使用的 docker 的 tiangolo/nginx-rtmp 镜像，docker 安装参考上一篇初识 docker 文档</p>\n<p><code>docker pull tiangolo/nginx-rtmp</code> // 拉取 nginx-rtmp 镜像</p>\n<p><code>docker run -it --name nginx-rtmp tiangolo/nginx-rtmp -p 1935:1935</code> // 第一次运行容器，取个别名，后续可直接使用 <code>docker start nginx-rtmp</code></p>\n<p>使用 <code>netstat -tunlp | grep 1935</code> 检测 1935 端口是否正在监听，正常情况是正在监听中</p>\n<h3 id=\"ffmpeg安装\"><a href=\"#ffmpeg安装\" class=\"headerlink\" title=\"ffmpeg安装\"></a>ffmpeg 安装</h3><p><code>sudo apt install ffmpeg</code> // 安装 ffmpeg (我当前环境 deepin, 仓库里面自带 ffmpeg 包)</p>\n<p>其他操作系统需要去官网下载对应的安装包即可或者按照官方文档添加对应系统的 ppa 进行安装即可.</p>\n<p>ffmpeg 参数:</p>\n<p>-re : 表示使用文件的原始帧率进行读取，因为 ffmpeg 读取视频帧的速度很快，如果不使用这个参数，ffmpeg 可以在很短时间就把 video.mp4 中的视频帧全部读取完并进行推流，这样就无法体现出视频播放的效果了</p>\n<p>-i : 这个参数表示输入 ，后面跟的路劲文件就是输入文件。</p>\n<p>-vcodec copy : -vcodec 表示使用的视频编解码器 ，前缀 v 表示 video。后面紧跟的 copy 表示复制使用源文件的视频编解码器，比如原文件的编解码器 (codec) 是 h264，则这里就使用 h264</p>\n<p>-acodec copy : -acodec 表示使用的音频编解码器，前缀 a 表示 audio。后面的 copy 表示使用源文件的音频编解码器</p>\n<p>-b:v 800k : -b:v 表示视频的比特率 (bitrate) ，为 800k</p>\n<p>-b:a 32k : 表示音频的比特率为 32k</p>\n<p>-f flv : -f 表示 format ，就是强制输出格式为 flv，这一步其实也叫封装 (mux)，封装要做的事就是把视频和音频混合在一起，进行同步。紧跟在后面的 rtmp://xxx.xxx.xxx/xxx 表示输出的” 文件名”，这个文件名可以是一个本地的文件，也可以指定为 rtmp 流媒体地址。指定为 rtmp 流媒体地址后，则 ffmpeg 就可以进行推流</p>\n<h3 id=\"ffmpeg将rtsp转码为rtmp\"><a href=\"#ffmpeg将rtsp转码为rtmp\" class=\"headerlink\" title=\"ffmpeg将rtsp转码为rtmp\"></a>ffmpeg 将 rtsp 转码为 rtmp</h3><p>使用 ffmpeg 命令，将 rtsp 转码为 rtmp.ffmpeg 参数项很多，未对其深究，直接参考网友的命令的.-i 后面是 rtsp 流地址.</p>\n<p><code>ffmpeg -re -rtsp_transport tcp -i \"rtsp://184.72.239.149/vod/mp4://BigBuckBunny_175k.mov\" -f flv -vcodec libx264 -vprofile baseline -acodec aac -ar 44100 -strict -2 -ac 1 -f flv -r 10 -s 1280x720 -q 10 \"rtmp://127.0.0.1:1935/live/demo\"</code></p>\n<pre><code>在执行转码命令过程中,可能会报信息类似 Past duration 0.999992 too large 的警告错误,经查询资料,是在-r参数后面\n指定的视频帧率参数导致的.rtsp://184.72.239.149/vod/mp4://BigBuckBunny_175k.mov这个地址是网络上的地址,\n可使用vlc media player查看源的帧率而设置\n</code></pre>\n<h4 id=\"使用VLC-media-player测试播放转换后的rtmp地址\"><a href=\"#使用VLC-media-player测试播放转换后的rtmp地址\" class=\"headerlink\" title=\"使用VLC media player测试播放转换后的rtmp地址\"></a>使用 VLC media player 测试播放转换后的 rtmp 地址</h4><p>打开 VLC media player 播放器。在工具栏” 媒体 -&gt; 打开网络串流” 然后输入 rtmp://127.0.0.1:1935/live/demo 点击确定即可进行直播预览转换后的 rtmp 视频流</p>\n<p><img src=\"/images/rtmp-result.png\"></p>\n<h3 id=\"ffmpeg将rtsp转码为hls\"><a href=\"#ffmpeg将rtsp转码为hls\" class=\"headerlink\" title=\"ffmpeg将rtsp转码为hls\"></a>ffmpeg 将 rtsp 转码为 hls</h3><p>使用 ffmpeg 命令，将 rtsp 转码为 hls.ffmpeg 参数项很多，未对其深究，直接参考网友的命令的.-i 后面是 rtsp 流地址.</p>\n<p><code>ffmpeg -f rtsp -rtsp_transport tcp -i rtsp://192.168.100.2/longzhu/demo_2 -r 23 -f hls -hls_time 4 -hls_list_size 5 -hls_wrap 10 /home/bz/Desktop/h5live/longzhuchao.m3u8</code></p>\n<pre><code>在执行转码命令过程中,可能会报信息类似 Past duration 0.999992 too large 的警告错误,经查询资料,是在-r参数后面\n指定的视频帧率参数导致的.rtsp://184.72.239.149/vod/mp4://BigBuckBunny_175k.mov这个地址是网络上的地址,\n可使用vlc media player查看源的帧率而设置\n</code></pre>\n<h4 id=\"使用VLC-media-player测试播放转换后的hls地址-m3u8文件\"><a href=\"#使用VLC-media-player测试播放转换后的hls地址-m3u8文件\" class=\"headerlink\" title=\"使用VLC media player测试播放转换后的hls地址(m3u8文件)\"></a>使用 VLC media player 测试播放转换后的 hls 地址 (m3u8 文件)</h4><p>打开 VLC media player 播放器。在工具栏” 媒体 -&gt; 打开网络串流” 然后输入 <a href=\"http://192.168.100.31/hlsvideo/longzhuchao.m3u8%E7%82%B9%E5%87%BB%E7%A1%AE%E5%AE%9A%E5%8D%B3%E5%8F%AF%E8%BF%9B%E8%A1%8C%E7%9B%B4%E6%92%AD%E9%A2%84%E8%A7%88%E8%BD%AC%E6%8D%A2%E5%90%8E%E7%9A%84rtmp%E8%A7%86%E9%A2%91%E6%B5%81,%E8%AF%A5%E5%9C%B0%E5%9D%80%E6%98%AF%E5%9C%A8nginx%E4%B8%AD%E9%85%8D%E7%BD%AE%E4%BA%86%E7%9A%84\">http://192.168.100.31/hlsvideo/longzhuchao.m3u8 点击确定即可进行直播预览转换后的 rtmp 视频流，该地址是在 nginx 中配置了的</a></p>\n<p><img src=\"/images/hls-result.png\"></p>\n<h3 id=\"ffmpeg推送视频文件到rtsp服务器\"><a href=\"#ffmpeg推送视频文件到rtsp服务器\" class=\"headerlink\" title=\"ffmpeg推送视频文件到rtsp服务器\"></a>ffmpeg 推送视频文件到 rtsp 服务器</h3><p><code>ffmpeg -re -i ./龙珠超.布罗利.mp4 -vcodec copy -codec copy -f rtsp rtsp://192.168.252.1/longzhu/demo_2</code></p>\n<pre><code>注:使用了easydarwin,rtsp://192.168.252.1地址就是启动easydarwin成功后的rtsp server地址\n</code></pre>\n<h4 id=\"使用VLC-media-player测试播放推流后rtsp地址\"><a href=\"#使用VLC-media-player测试播放推流后rtsp地址\" class=\"headerlink\" title=\"使用VLC media player测试播放推流后rtsp地址\"></a>使用 VLC media player 测试播放推流后 rtsp 地址</h4><p><img src=\"/images/push_to_rtsp.png\"></p>\n<h3 id=\"ffmpeg推送视频文件到rtmp服务器\"><a href=\"#ffmpeg推送视频文件到rtmp服务器\" class=\"headerlink\" title=\"ffmpeg推送视频文件到rtmp服务器\"></a>ffmpeg 推送视频文件到 rtmp 服务器</h3><p><code>ffmpeg -re -i ./龙珠超.布罗利.mp4 -vcodec copy -acodec copy -b:v 800k -b:a 32k -f flv rtmp://192.168.100.31:1935/rtmplive_demo/demo_3</code></p>\n<pre><code>注:rtmp地址中的rtmplive_demo必须和nginx中配置的application名称一致才能推流成功,192.168.100.31是我的一台虚拟机\n</code></pre>\n<h4 id=\"使用VLC-media-player测试播放推流后rtmp地址\"><a href=\"#使用VLC-media-player测试播放推流后rtmp地址\" class=\"headerlink\" title=\"使用VLC media player测试播放推流后rtmp地址\"></a>使用 VLC media player 测试播放推流后 rtmp 地址</h4><p><img src=\"/images/push_to_rtmp.png\"></p>\n<h3 id=\"ffmpeg转发rtsp流\"><a href=\"#ffmpeg转发rtsp流\" class=\"headerlink\" title=\"ffmpeg转发rtsp流\"></a>ffmpeg 转发 rtsp 流</h3><p><code>ffmpeg -i rtsp://192.168.100.2:8554/longzhu/live -codec copy -f rtsp rtsp://192.168.252.1/longzhu/demo_1</code></p>\n<pre><code>第一个rtsp是源地址,第二个是新地址.但是必须保证新地址是能够支持rtsp协议的才行.我试过使用nginx+rtsp是不能够\n成功的.所以换成了easydarwin,rtsp://192.168.252.1地址就是启动easydarwin成功后的rtsp server地址.\n</code></pre>\n<p>效果图如下:</p>\n<p><img src=\"/images/rtsp_to_rtsp.png\"></p>\n<p><strong>注：关于测试 rtsp 地址问题，上面的地址我测试的时候能够使用，但是不能保证以后能够一直正常使用，所以有网友图文讲解了使用 VLC media player 自制 rtsp 流。小伙伴的力量强大！其地址如下:<a href=\"https://blog.csdn.net/taoerit/article/details/51920018\">https://blog.csdn.net/taoerit/article/details/51920018</a><br>为了防止地址失效，我将页面截了一张完整图。图片如下:</strong></p>\n<p><img src=\"/images/build_push_rtsp.jpg\"></p>\n","excerpt":"","more":"<h3 id=\"RTSP、RTMP、HTTP协议比较\"><a href=\"#RTSP、RTMP、HTTP协议比较\" class=\"headerlink\" title=\"RTSP、RTMP、HTTP协议比较\"></a>RTSP、RTMP、HTTP 协议比较</h3><h4 id=\"共同点\"><a href=\"#共同点\" class=\"headerlink\" title=\"共同点\"></a>共同点</h4><p>1. 都是用在应用层的协议</p>\n<p>2. 理论上这三种协议都可以做直播和点播，但直播一般用 RTSP 和 RTMP 点播用 HTTP</p>\n<h4 id=\"不同点\"><a href=\"#不同点\" class=\"headerlink\" title=\"不同点\"></a>不同点</h4><p>1.HTTP 协议（HyperText Transfer Protocol，超文本传输协议)，是因特网上应用最为广泛的一种网络传输协议，所有的 WWW 文件都必须遵守这个标准，HTTP 是一个基于 TCP/IP 通信协议来传递数据 (HTML 文件，图片文件，查询结果等). 所以 HTTP 不是流媒体协议，RTMP 和 RTSP 是流媒体协议</p>\n<p>2.RTMP 是 Real Time Messaging Protocol（实时消息传输协议）的首字母缩写。该协议基于 TCP，是一个协议族，包括 RTMP 基本协议及 RTMPT/RTMPS/RTMPE 等多种变种。RTMP 是一种设计用来进行实时数据通信的网络协议，主要用来在 Flash/AIR 平台和支持 RTMP 协议的流媒体 / 交互服务器之间进行音视频和数据通信，RTMP 一般传输 flv,f4v 格式流.</p>\n<p>3.RTSP（Real Time Streaming Protocol），RFC2326，实时流传输协议.RTSP 以客户端方式工作，对流媒体提供播放、暂停、后退、前进等操作.RTSP 传输的一般是 TS、MP4 格式的流，其传输一般需要 2~3 个通道，命令和数据通道分离。使用 RTSP 协议传输流媒体数据需要有专门的媒体播放器和媒体服务器，也就是需要支持 RTSP 协议的客户端和服务器。</p>\n<h3 id=\"ffmpeg简介\"><a href=\"#ffmpeg简介\" class=\"headerlink\" title=\"ffmpeg简介\"></a>ffmpeg 简介</h3><p>FFmpeg 是一套可以用来记录、转换数字音频、视频，并能将其转化为流的开源计算机程序。它包括了目前领先的音 / 视频编码库 libavcodec. 可以轻易地实现多种视频格式之间的相互转换，例如可以将摄录下的视频 avi 等转成现在视频网站所采用的 flv 格式</p>\n<h3 id=\"nginx-nginx-rtmp-moudle安装\"><a href=\"#nginx-nginx-rtmp-moudle安装\" class=\"headerlink\" title=\"nginx+nginx-rtmp-moudle安装\"></a>nginx+nginx-rtmp-moudle 安装</h3><p>分别下载 nginx 和 nginx-rtmp 的源码然后进行编译即可。在此，为了方便我是直接使用的 docker 的 tiangolo/nginx-rtmp 镜像，docker 安装参考上一篇初识 docker 文档</p>\n<p><code>docker pull tiangolo/nginx-rtmp</code> // 拉取 nginx-rtmp 镜像</p>\n<p><code>docker run -it --name nginx-rtmp tiangolo/nginx-rtmp -p 1935:1935</code> // 第一次运行容器，取个别名，后续可直接使用 <code>docker start nginx-rtmp</code></p>\n<p>使用 <code>netstat -tunlp | grep 1935</code> 检测 1935 端口是否正在监听，正常情况是正在监听中</p>\n<h3 id=\"ffmpeg安装\"><a href=\"#ffmpeg安装\" class=\"headerlink\" title=\"ffmpeg安装\"></a>ffmpeg 安装</h3><p><code>sudo apt install ffmpeg</code> // 安装 ffmpeg (我当前环境 deepin, 仓库里面自带 ffmpeg 包)</p>\n<p>其他操作系统需要去官网下载对应的安装包即可或者按照官方文档添加对应系统的 ppa 进行安装即可.</p>\n<p>ffmpeg 参数:</p>\n<p>-re : 表示使用文件的原始帧率进行读取，因为 ffmpeg 读取视频帧的速度很快，如果不使用这个参数，ffmpeg 可以在很短时间就把 video.mp4 中的视频帧全部读取完并进行推流，这样就无法体现出视频播放的效果了</p>\n<p>-i : 这个参数表示输入 ，后面跟的路劲文件就是输入文件。</p>\n<p>-vcodec copy : -vcodec 表示使用的视频编解码器 ，前缀 v 表示 video。后面紧跟的 copy 表示复制使用源文件的视频编解码器，比如原文件的编解码器 (codec) 是 h264，则这里就使用 h264</p>\n<p>-acodec copy : -acodec 表示使用的音频编解码器，前缀 a 表示 audio。后面的 copy 表示使用源文件的音频编解码器</p>\n<p>-b:v 800k : -b:v 表示视频的比特率 (bitrate) ，为 800k</p>\n<p>-b:a 32k : 表示音频的比特率为 32k</p>\n<p>-f flv : -f 表示 format ，就是强制输出格式为 flv，这一步其实也叫封装 (mux)，封装要做的事就是把视频和音频混合在一起，进行同步。紧跟在后面的 rtmp://xxx.xxx.xxx/xxx 表示输出的” 文件名”，这个文件名可以是一个本地的文件，也可以指定为 rtmp 流媒体地址。指定为 rtmp 流媒体地址后，则 ffmpeg 就可以进行推流</p>\n<h3 id=\"ffmpeg将rtsp转码为rtmp\"><a href=\"#ffmpeg将rtsp转码为rtmp\" class=\"headerlink\" title=\"ffmpeg将rtsp转码为rtmp\"></a>ffmpeg 将 rtsp 转码为 rtmp</h3><p>使用 ffmpeg 命令，将 rtsp 转码为 rtmp.ffmpeg 参数项很多，未对其深究，直接参考网友的命令的.-i 后面是 rtsp 流地址.</p>\n<p><code>ffmpeg -re -rtsp_transport tcp -i \"rtsp://184.72.239.149/vod/mp4://BigBuckBunny_175k.mov\" -f flv -vcodec libx264 -vprofile baseline -acodec aac -ar 44100 -strict -2 -ac 1 -f flv -r 10 -s 1280x720 -q 10 \"rtmp://127.0.0.1:1935/live/demo\"</code></p>\n<pre><code>在执行转码命令过程中,可能会报信息类似 Past duration 0.999992 too large 的警告错误,经查询资料,是在-r参数后面\n指定的视频帧率参数导致的.rtsp://184.72.239.149/vod/mp4://BigBuckBunny_175k.mov这个地址是网络上的地址,\n可使用vlc media player查看源的帧率而设置\n</code></pre>\n<h4 id=\"使用VLC-media-player测试播放转换后的rtmp地址\"><a href=\"#使用VLC-media-player测试播放转换后的rtmp地址\" class=\"headerlink\" title=\"使用VLC media player测试播放转换后的rtmp地址\"></a>使用 VLC media player 测试播放转换后的 rtmp 地址</h4><p>打开 VLC media player 播放器。在工具栏” 媒体 -&gt; 打开网络串流” 然后输入 rtmp://127.0.0.1:1935/live/demo 点击确定即可进行直播预览转换后的 rtmp 视频流</p>\n<p><img src=\"/images/rtmp-result.png\"></p>\n<h3 id=\"ffmpeg将rtsp转码为hls\"><a href=\"#ffmpeg将rtsp转码为hls\" class=\"headerlink\" title=\"ffmpeg将rtsp转码为hls\"></a>ffmpeg 将 rtsp 转码为 hls</h3><p>使用 ffmpeg 命令，将 rtsp 转码为 hls.ffmpeg 参数项很多，未对其深究，直接参考网友的命令的.-i 后面是 rtsp 流地址.</p>\n<p><code>ffmpeg -f rtsp -rtsp_transport tcp -i rtsp://192.168.100.2/longzhu/demo_2 -r 23 -f hls -hls_time 4 -hls_list_size 5 -hls_wrap 10 /home/bz/Desktop/h5live/longzhuchao.m3u8</code></p>\n<pre><code>在执行转码命令过程中,可能会报信息类似 Past duration 0.999992 too large 的警告错误,经查询资料,是在-r参数后面\n指定的视频帧率参数导致的.rtsp://184.72.239.149/vod/mp4://BigBuckBunny_175k.mov这个地址是网络上的地址,\n可使用vlc media player查看源的帧率而设置\n</code></pre>\n<h4 id=\"使用VLC-media-player测试播放转换后的hls地址-m3u8文件\"><a href=\"#使用VLC-media-player测试播放转换后的hls地址-m3u8文件\" class=\"headerlink\" title=\"使用VLC media player测试播放转换后的hls地址(m3u8文件)\"></a>使用 VLC media player 测试播放转换后的 hls 地址 (m3u8 文件)</h4><p>打开 VLC media player 播放器。在工具栏” 媒体 -&gt; 打开网络串流” 然后输入 <a href=\"http://192.168.100.31/hlsvideo/longzhuchao.m3u8%E7%82%B9%E5%87%BB%E7%A1%AE%E5%AE%9A%E5%8D%B3%E5%8F%AF%E8%BF%9B%E8%A1%8C%E7%9B%B4%E6%92%AD%E9%A2%84%E8%A7%88%E8%BD%AC%E6%8D%A2%E5%90%8E%E7%9A%84rtmp%E8%A7%86%E9%A2%91%E6%B5%81,%E8%AF%A5%E5%9C%B0%E5%9D%80%E6%98%AF%E5%9C%A8nginx%E4%B8%AD%E9%85%8D%E7%BD%AE%E4%BA%86%E7%9A%84\">http://192.168.100.31/hlsvideo/longzhuchao.m3u8 点击确定即可进行直播预览转换后的 rtmp 视频流，该地址是在 nginx 中配置了的</a></p>\n<p><img src=\"/images/hls-result.png\"></p>\n<h3 id=\"ffmpeg推送视频文件到rtsp服务器\"><a href=\"#ffmpeg推送视频文件到rtsp服务器\" class=\"headerlink\" title=\"ffmpeg推送视频文件到rtsp服务器\"></a>ffmpeg 推送视频文件到 rtsp 服务器</h3><p><code>ffmpeg -re -i ./龙珠超.布罗利.mp4 -vcodec copy -codec copy -f rtsp rtsp://192.168.252.1/longzhu/demo_2</code></p>\n<pre><code>注:使用了easydarwin,rtsp://192.168.252.1地址就是启动easydarwin成功后的rtsp server地址\n</code></pre>\n<h4 id=\"使用VLC-media-player测试播放推流后rtsp地址\"><a href=\"#使用VLC-media-player测试播放推流后rtsp地址\" class=\"headerlink\" title=\"使用VLC media player测试播放推流后rtsp地址\"></a>使用 VLC media player 测试播放推流后 rtsp 地址</h4><p><img src=\"/images/push_to_rtsp.png\"></p>\n<h3 id=\"ffmpeg推送视频文件到rtmp服务器\"><a href=\"#ffmpeg推送视频文件到rtmp服务器\" class=\"headerlink\" title=\"ffmpeg推送视频文件到rtmp服务器\"></a>ffmpeg 推送视频文件到 rtmp 服务器</h3><p><code>ffmpeg -re -i ./龙珠超.布罗利.mp4 -vcodec copy -acodec copy -b:v 800k -b:a 32k -f flv rtmp://192.168.100.31:1935/rtmplive_demo/demo_3</code></p>\n<pre><code>注:rtmp地址中的rtmplive_demo必须和nginx中配置的application名称一致才能推流成功,192.168.100.31是我的一台虚拟机\n</code></pre>\n<h4 id=\"使用VLC-media-player测试播放推流后rtmp地址\"><a href=\"#使用VLC-media-player测试播放推流后rtmp地址\" class=\"headerlink\" title=\"使用VLC media player测试播放推流后rtmp地址\"></a>使用 VLC media player 测试播放推流后 rtmp 地址</h4><p><img src=\"/images/push_to_rtmp.png\"></p>\n<h3 id=\"ffmpeg转发rtsp流\"><a href=\"#ffmpeg转发rtsp流\" class=\"headerlink\" title=\"ffmpeg转发rtsp流\"></a>ffmpeg 转发 rtsp 流</h3><p><code>ffmpeg -i rtsp://192.168.100.2:8554/longzhu/live -codec copy -f rtsp rtsp://192.168.252.1/longzhu/demo_1</code></p>\n<pre><code>第一个rtsp是源地址,第二个是新地址.但是必须保证新地址是能够支持rtsp协议的才行.我试过使用nginx+rtsp是不能够\n成功的.所以换成了easydarwin,rtsp://192.168.252.1地址就是启动easydarwin成功后的rtsp server地址.\n</code></pre>\n<p>效果图如下:</p>\n<p><img src=\"/images/rtsp_to_rtsp.png\"></p>\n<p><strong>注：关于测试 rtsp 地址问题，上面的地址我测试的时候能够使用，但是不能保证以后能够一直正常使用，所以有网友图文讲解了使用 VLC media player 自制 rtsp 流。小伙伴的力量强大！其地址如下:<a href=\"https://blog.csdn.net/taoerit/article/details/51920018\">https://blog.csdn.net/taoerit/article/details/51920018</a><br>为了防止地址失效，我将页面截了一张完整图。图片如下:</strong></p>\n<p><img src=\"/images/build_push_rtsp.jpg\"></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/rtmp-result.png","popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:20:21 GMT+0800 (China Standard Time)","title":"nginx-rtmp-module-ffmpeg 视频推流和 rtsp 转 rtmp 及 hls","path":"2019/05/31/nginx-rtmp-module-ffmpeg视频推流和rtsp转rtmp及hls/","eyeCatchImage":"/images/rtmp-result.png","excerpt":"视频推流和rtsp转rtmp及hls","date":{"_isAMomentObject":true,"_i":"2019-05-31T08:53:11.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2019-05-31T08:53:11.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["nginx","rtmp","rtsp","ffmpeg"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":1849},{"title":"nginx 限制某个 IP 同一时间段的访问次数","date":"2019-04-22T03:59:11.000Z","description":"nginx限制某个IP同一时间段的访问次数","_content":"  摘要:\n      \n    nginx可以通过HttpLimitReqModul和HttpLimitZoneModule配置来限制ip在同一时间段的访问次数来防cc攻击\n\n    HttpLimitReqModul用来限制连单位时间内连接数的模块，使用limit_req_zone和limit_req指令配合使用来达到限制。一旦并发连接超过指定数量，就会返回503错误。\n\n    HttpLimitConnModul用来限制单个ip的并发连接数，使用limit_zone和limit_conn指令\n\n    注:两个模块的区别前一个是对一段时间内的连接数限制，后者是对同一时刻的连接数限制\n\n### HttpLimitReqModul 限制某一段时间内同一ip访问数实例\n\n在http作用域下配置limit_req_zone指令,如下:\n  ```json\n    http{\n      ...\n      #定义一个名为allips的limit_req_zone用来存储session，大小是10M内存，\n      #以$binary_remote_addr 为key,限制平均每秒的请求为20个，\n      #1M能存储16000个状态，rete的值必须为整数，\n      #如果限制两秒钟一个请求，可以设置成30r/m\n      limit_req_zone $binary_remote_addr zone=allips:10m rate=20r/s;\n      ...\n      server{\n          ...\n          location {\n              ...\n  \n              #限制每ip每秒不超过20个请求，漏桶数burst为5\n              #brust的意思就是，如果第1秒、2,3,4秒请求为19个，\n              #第5秒的请求为25个是被允许的。\n              #但是如果你第1秒就25个请求，第2秒超过20的请求返回503错误。\n              #nodelay，如果不设置该选项，严格使用平均速率限制请求数，\n              #第1秒25个请求时，5个请求放到第2秒执行，\n              #设置nodelay，25个请求将在第1秒执行。\n  \n              limit_req zone=allips burst=5 nodelay;\n              ...\n          }\n          ...\n      }\n      ...\n}\n  ```\n\n### HttpLimitZoneModule 限制并发连接数实例\n\n在http作用域下配置limit_zone指令,limit_zone只能定义在http作用域，limit_conn可以定义在http server location作用域.如下\n\n```json\n  http{\n    ...\n \n    #定义一个名为one的limit_zone,大小10M内存来存储session，\n    #以$binary_remote_addr 为key\n    #nginx 1.18以后用limit_conn_zone替换了limit_conn\n    #且只能放在http作用域\n    limit_conn_zone   one  $binary_remote_addr  10m; \n    ...\n    server{\n        ...\n        location {\n            ...\n           limit_conn one 20;          #连接数限制\n \n           #带宽限制,对单个连接限数，如果一个ip两个连接，就是500x2k\n           limit_rate 500k;           \n \n            ...\n        }\n        ...\n    }\n    ...\n}\n```\n\n### nginx白名单设置\n\n上面默认配置对多有的ip都有限制,有些时候我们不希望对搜索引擎的蜘蛛或者自己测试ip进行限制，\n对于特定的白名单ip我们可以借助geo指令实现,如下:\n    \n    geo指令定义了一个白名单$limited变量，默认值为1，如果客户端ip在上面的范围内，$limited的值为0\n\n```json\n  http{\n     geo $limited{\n        default 1;\n        #google\n        64.233.160.0/19 0;\n        65.52.0.0/14 0;\n        66.102.0.0/20 0;\n        66.249.64.0/19 0;\n        72.14.192.0/18 0;\n        74.125.0.0/16 0;\n        209.85.128.0/17 0;\n        216.239.32.0/19 0;\n        #M$\n        64.4.0.0/18 0;\n        157.60.0.0/16 0;\n        157.54.0.0/15 0;\n        157.56.0.0/14 0;\n        207.46.0.0/16 0;\n        207.68.192.0/20 0;\n        207.68.128.0/18 0;\n        #yahoo\n        8.12.144.0/24 0;\n        66.196.64.0/18 0;\n        66.228.160.0/19 0;\n        67.195.0.0/16 0;\n        74.6.0.0/16 0;\n        68.142.192.0/18 0;\n        72.30.0.0/16 0;\n        209.191.64.0/18 0;\n        #My IPs\n        127.0.0.1/32 0;\n        123.456.0.0/28 0; #example for your server CIDR\n    }\n```","source":"_posts/nginx限制某个IP同一时间段的访问次数.md","raw":"---\ntitle: nginx限制某个IP同一时间段的访问次数\ndate: 2019-04-22 11:59:11\ndescription: nginx限制某个IP同一时间段的访问次数\ntags:\n  - nginx\n---\n  摘要:\n      \n    nginx可以通过HttpLimitReqModul和HttpLimitZoneModule配置来限制ip在同一时间段的访问次数来防cc攻击\n\n    HttpLimitReqModul用来限制连单位时间内连接数的模块，使用limit_req_zone和limit_req指令配合使用来达到限制。一旦并发连接超过指定数量，就会返回503错误。\n\n    HttpLimitConnModul用来限制单个ip的并发连接数，使用limit_zone和limit_conn指令\n\n    注:两个模块的区别前一个是对一段时间内的连接数限制，后者是对同一时刻的连接数限制\n\n### HttpLimitReqModul 限制某一段时间内同一ip访问数实例\n\n在http作用域下配置limit_req_zone指令,如下:\n  ```json\n    http{\n      ...\n      #定义一个名为allips的limit_req_zone用来存储session，大小是10M内存，\n      #以$binary_remote_addr 为key,限制平均每秒的请求为20个，\n      #1M能存储16000个状态，rete的值必须为整数，\n      #如果限制两秒钟一个请求，可以设置成30r/m\n      limit_req_zone $binary_remote_addr zone=allips:10m rate=20r/s;\n      ...\n      server{\n          ...\n          location {\n              ...\n  \n              #限制每ip每秒不超过20个请求，漏桶数burst为5\n              #brust的意思就是，如果第1秒、2,3,4秒请求为19个，\n              #第5秒的请求为25个是被允许的。\n              #但是如果你第1秒就25个请求，第2秒超过20的请求返回503错误。\n              #nodelay，如果不设置该选项，严格使用平均速率限制请求数，\n              #第1秒25个请求时，5个请求放到第2秒执行，\n              #设置nodelay，25个请求将在第1秒执行。\n  \n              limit_req zone=allips burst=5 nodelay;\n              ...\n          }\n          ...\n      }\n      ...\n}\n  ```\n\n### HttpLimitZoneModule 限制并发连接数实例\n\n在http作用域下配置limit_zone指令,limit_zone只能定义在http作用域，limit_conn可以定义在http server location作用域.如下\n\n```json\n  http{\n    ...\n \n    #定义一个名为one的limit_zone,大小10M内存来存储session，\n    #以$binary_remote_addr 为key\n    #nginx 1.18以后用limit_conn_zone替换了limit_conn\n    #且只能放在http作用域\n    limit_conn_zone   one  $binary_remote_addr  10m; \n    ...\n    server{\n        ...\n        location {\n            ...\n           limit_conn one 20;          #连接数限制\n \n           #带宽限制,对单个连接限数，如果一个ip两个连接，就是500x2k\n           limit_rate 500k;           \n \n            ...\n        }\n        ...\n    }\n    ...\n}\n```\n\n### nginx白名单设置\n\n上面默认配置对多有的ip都有限制,有些时候我们不希望对搜索引擎的蜘蛛或者自己测试ip进行限制，\n对于特定的白名单ip我们可以借助geo指令实现,如下:\n    \n    geo指令定义了一个白名单$limited变量，默认值为1，如果客户端ip在上面的范围内，$limited的值为0\n\n```json\n  http{\n     geo $limited{\n        default 1;\n        #google\n        64.233.160.0/19 0;\n        65.52.0.0/14 0;\n        66.102.0.0/20 0;\n        66.249.64.0/19 0;\n        72.14.192.0/18 0;\n        74.125.0.0/16 0;\n        209.85.128.0/17 0;\n        216.239.32.0/19 0;\n        #M$\n        64.4.0.0/18 0;\n        157.60.0.0/16 0;\n        157.54.0.0/15 0;\n        157.56.0.0/14 0;\n        207.46.0.0/16 0;\n        207.68.192.0/20 0;\n        207.68.128.0/18 0;\n        #yahoo\n        8.12.144.0/24 0;\n        66.196.64.0/18 0;\n        66.228.160.0/19 0;\n        67.195.0.0/16 0;\n        74.6.0.0/16 0;\n        68.142.192.0/18 0;\n        72.30.0.0/16 0;\n        209.191.64.0/18 0;\n        #My IPs\n        127.0.0.1/32 0;\n        123.456.0.0/28 0; #example for your server CIDR\n    }\n```","slug":"nginx限制某个IP同一时间段的访问次数","published":1,"updated":"2025-04-22T08:20:31.116Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745iz002ld8gkeunj30u4","content":"<p>  摘要:</p>\n<pre><code>nginx可以通过HttpLimitReqModul和HttpLimitZoneModule配置来限制ip在同一时间段的访问次数来防cc攻击\n\nHttpLimitReqModul用来限制连单位时间内连接数的模块，使用limit_req_zone和limit_req指令配合使用来达到限制。一旦并发连接超过指定数量，就会返回503错误。\n\nHttpLimitConnModul用来限制单个ip的并发连接数，使用limit_zone和limit_conn指令\n\n注:两个模块的区别前一个是对一段时间内的连接数限制，后者是对同一时刻的连接数限制\n</code></pre>\n<h3 id=\"HttpLimitReqModul-限制某一段时间内同一ip访问数实例\"><a href=\"#HttpLimitReqModul-限制某一段时间内同一ip访问数实例\" class=\"headerlink\" title=\"HttpLimitReqModul 限制某一段时间内同一ip访问数实例\"></a>HttpLimitReqModul 限制某一段时间内同一 ip 访问数实例</h3><p>在 http 作用域下配置 limit_req_zone 指令，如下:<br>  </p><pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">    http<span class=\"token punctuation\">{</span>\n      ...\n      #定义一个名为allips的limit_req_zone用来存储session，大小是10M内存，\n      #以$binary_remote_addr 为key<span class=\"token punctuation\">,</span>限制平均每秒的请求为<span class=\"token number\">20</span>个，\n      #1M能存储<span class=\"token number\">16000</span>个状态，rete的值必须为整数，\n      #如果限制两秒钟一个请求，可以设置成30r/m\n      limit_req_zone $binary_remote_addr zone=allips<span class=\"token operator\">:</span>10m rate=20r/s;\n      ...\n      server<span class=\"token punctuation\">{</span>\n          ...\n          location <span class=\"token punctuation\">{</span>\n              ...\n  \n              #限制每ip每秒不超过<span class=\"token number\">20</span>个请求，漏桶数burst为<span class=\"token number\">5</span>\n              #brust的意思就是，如果第<span class=\"token number\">1</span>秒、<span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span>秒请求为<span class=\"token number\">19</span>个，\n              #第<span class=\"token number\">5</span>秒的请求为<span class=\"token number\">25</span>个是被允许的。\n              #但是如果你第<span class=\"token number\">1</span>秒就<span class=\"token number\">25</span>个请求，第<span class=\"token number\">2</span>秒超过<span class=\"token number\">20</span>的请求返回<span class=\"token number\">503</span>错误。\n              #nodelay，如果不设置该选项，严格使用平均速率限制请求数，\n              #第<span class=\"token number\">1</span>秒<span class=\"token number\">25</span>个请求时，<span class=\"token number\">5</span>个请求放到第<span class=\"token number\">2</span>秒执行，\n              #设置nodelay，<span class=\"token number\">25</span>个请求将在第<span class=\"token number\">1</span>秒执行。\n  \n              limit_req zone=allips burst=<span class=\"token number\">5</span> nodelay;\n              ...\n          <span class=\"token punctuation\">}</span>\n          ...\n      <span class=\"token punctuation\">}</span>\n      ...\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p></p>\n<h3 id=\"HttpLimitZoneModule-限制并发连接数实例\"><a href=\"#HttpLimitZoneModule-限制并发连接数实例\" class=\"headerlink\" title=\"HttpLimitZoneModule 限制并发连接数实例\"></a>HttpLimitZoneModule 限制并发连接数实例</h3><p>在 http 作用域下配置 limit_zone 指令，limit_zone 只能定义在 http 作用域，limit_conn 可以定义在 http server location 作用域。如下</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">  http<span class=\"token punctuation\">{</span>\n    ...\n \n    #定义一个名为one的limit_zone<span class=\"token punctuation\">,</span>大小10M内存来存储session，\n    #以$binary_remote_addr 为key\n    #nginx <span class=\"token number\">1.18</span>以后用limit_conn_zone替换了limit_conn\n    #且只能放在http作用域\n    limit_conn_zone   one  $binary_remote_addr  10m; \n    ...\n    server<span class=\"token punctuation\">{</span>\n        ...\n        location <span class=\"token punctuation\">{</span>\n            ...\n           limit_conn one <span class=\"token number\">20</span>;          #连接数限制\n \n           #带宽限制<span class=\"token punctuation\">,</span>对单个连接限数，如果一个ip两个连接，就是500x2k\n           limit_rate 500k;           \n \n            ...\n        <span class=\"token punctuation\">}</span>\n        ...\n    <span class=\"token punctuation\">}</span>\n    ...\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"nginx白名单设置\"><a href=\"#nginx白名单设置\" class=\"headerlink\" title=\"nginx白名单设置\"></a>nginx 白名单设置</h3><p>上面默认配置对多有的 ip 都有限制，有些时候我们不希望对搜索引擎的蜘蛛或者自己测试 ip 进行限制，<br>对于特定的白名单 ip 我们可以借助 geo 指令实现，如下:</p>\n<pre><code>geo指令定义了一个白名单$limited变量，默认值为1，如果客户端ip在上面的范围内，$limited的值为0\n</code></pre>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">http<span class=\"token punctuation\">{</span>\n   geo $limited<span class=\"token punctuation\">{</span>\n      default <span class=\"token number\">1</span>;\n      #google\n      <span class=\"token number\">64.233</span>.<span class=\"token number\">160.0</span>/<span class=\"token number\">19</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">65.52</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">14</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">66.102</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">20</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">66.249</span>.<span class=\"token number\">64.0</span>/<span class=\"token number\">19</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">72.14</span>.<span class=\"token number\">192.0</span>/<span class=\"token number\">18</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">74.125</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">16</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">209.85</span>.<span class=\"token number\">128.0</span>/<span class=\"token number\">17</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">216.239</span>.<span class=\"token number\">32.0</span>/<span class=\"token number\">19</span> <span class=\"token number\">0</span>;\n      #M$\n      <span class=\"token number\">64.4</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">18</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">157.60</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">16</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">157.54</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">15</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">157.56</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">14</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">207.46</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">16</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">207.68</span>.<span class=\"token number\">192.0</span>/<span class=\"token number\">20</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">207.68</span>.<span class=\"token number\">128.0</span>/<span class=\"token number\">18</span> <span class=\"token number\">0</span>;\n      #yahoo\n      <span class=\"token number\">8.12</span>.<span class=\"token number\">144.0</span>/<span class=\"token number\">24</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">66.196</span>.<span class=\"token number\">64.0</span>/<span class=\"token number\">18</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">66.228</span>.<span class=\"token number\">160.0</span>/<span class=\"token number\">19</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">67.195</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">16</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">74.6</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">16</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">68.142</span>.<span class=\"token number\">192.0</span>/<span class=\"token number\">18</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">72.30</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">16</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">209.191</span>.<span class=\"token number\">64.0</span>/<span class=\"token number\">18</span> <span class=\"token number\">0</span>;\n      #My IPs\n      <span class=\"token number\">127.0</span>.<span class=\"token number\">0.1</span>/<span class=\"token number\">32</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">123.456</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">28</span> <span class=\"token number\">0</span>; #example for your server CIDR\n  <span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","excerpt":"","more":"<p>  摘要:</p>\n<pre><code>nginx可以通过HttpLimitReqModul和HttpLimitZoneModule配置来限制ip在同一时间段的访问次数来防cc攻击\n\nHttpLimitReqModul用来限制连单位时间内连接数的模块，使用limit_req_zone和limit_req指令配合使用来达到限制。一旦并发连接超过指定数量，就会返回503错误。\n\nHttpLimitConnModul用来限制单个ip的并发连接数，使用limit_zone和limit_conn指令\n\n注:两个模块的区别前一个是对一段时间内的连接数限制，后者是对同一时刻的连接数限制\n</code></pre>\n<h3 id=\"HttpLimitReqModul-限制某一段时间内同一ip访问数实例\"><a href=\"#HttpLimitReqModul-限制某一段时间内同一ip访问数实例\" class=\"headerlink\" title=\"HttpLimitReqModul 限制某一段时间内同一ip访问数实例\"></a>HttpLimitReqModul 限制某一段时间内同一 ip 访问数实例</h3><p>在 http 作用域下配置 limit_req_zone 指令，如下:<br>  </p><pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">    http<span class=\"token punctuation\">{</span>\n      ...\n      #定义一个名为allips的limit_req_zone用来存储session，大小是10M内存，\n      #以$binary_remote_addr 为key<span class=\"token punctuation\">,</span>限制平均每秒的请求为<span class=\"token number\">20</span>个，\n      #1M能存储<span class=\"token number\">16000</span>个状态，rete的值必须为整数，\n      #如果限制两秒钟一个请求，可以设置成30r/m\n      limit_req_zone $binary_remote_addr zone=allips<span class=\"token operator\">:</span>10m rate=20r/s;\n      ...\n      server<span class=\"token punctuation\">{</span>\n          ...\n          location <span class=\"token punctuation\">{</span>\n              ...\n  \n              #限制每ip每秒不超过<span class=\"token number\">20</span>个请求，漏桶数burst为<span class=\"token number\">5</span>\n              #brust的意思就是，如果第<span class=\"token number\">1</span>秒、<span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span>秒请求为<span class=\"token number\">19</span>个，\n              #第<span class=\"token number\">5</span>秒的请求为<span class=\"token number\">25</span>个是被允许的。\n              #但是如果你第<span class=\"token number\">1</span>秒就<span class=\"token number\">25</span>个请求，第<span class=\"token number\">2</span>秒超过<span class=\"token number\">20</span>的请求返回<span class=\"token number\">503</span>错误。\n              #nodelay，如果不设置该选项，严格使用平均速率限制请求数，\n              #第<span class=\"token number\">1</span>秒<span class=\"token number\">25</span>个请求时，<span class=\"token number\">5</span>个请求放到第<span class=\"token number\">2</span>秒执行，\n              #设置nodelay，<span class=\"token number\">25</span>个请求将在第<span class=\"token number\">1</span>秒执行。\n  \n              limit_req zone=allips burst=<span class=\"token number\">5</span> nodelay;\n              ...\n          <span class=\"token punctuation\">}</span>\n          ...\n      <span class=\"token punctuation\">}</span>\n      ...\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p></p>\n<h3 id=\"HttpLimitZoneModule-限制并发连接数实例\"><a href=\"#HttpLimitZoneModule-限制并发连接数实例\" class=\"headerlink\" title=\"HttpLimitZoneModule 限制并发连接数实例\"></a>HttpLimitZoneModule 限制并发连接数实例</h3><p>在 http 作用域下配置 limit_zone 指令，limit_zone 只能定义在 http 作用域，limit_conn 可以定义在 http server location 作用域。如下</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">  http<span class=\"token punctuation\">{</span>\n    ...\n \n    #定义一个名为one的limit_zone<span class=\"token punctuation\">,</span>大小10M内存来存储session，\n    #以$binary_remote_addr 为key\n    #nginx <span class=\"token number\">1.18</span>以后用limit_conn_zone替换了limit_conn\n    #且只能放在http作用域\n    limit_conn_zone   one  $binary_remote_addr  10m; \n    ...\n    server<span class=\"token punctuation\">{</span>\n        ...\n        location <span class=\"token punctuation\">{</span>\n            ...\n           limit_conn one <span class=\"token number\">20</span>;          #连接数限制\n \n           #带宽限制<span class=\"token punctuation\">,</span>对单个连接限数，如果一个ip两个连接，就是500x2k\n           limit_rate 500k;           \n \n            ...\n        <span class=\"token punctuation\">}</span>\n        ...\n    <span class=\"token punctuation\">}</span>\n    ...\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"nginx白名单设置\"><a href=\"#nginx白名单设置\" class=\"headerlink\" title=\"nginx白名单设置\"></a>nginx 白名单设置</h3><p>上面默认配置对多有的 ip 都有限制，有些时候我们不希望对搜索引擎的蜘蛛或者自己测试 ip 进行限制，<br>对于特定的白名单 ip 我们可以借助 geo 指令实现，如下:</p>\n<pre><code>geo指令定义了一个白名单$limited变量，默认值为1，如果客户端ip在上面的范围内，$limited的值为0\n</code></pre>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">http<span class=\"token punctuation\">{</span>\n   geo $limited<span class=\"token punctuation\">{</span>\n      default <span class=\"token number\">1</span>;\n      #google\n      <span class=\"token number\">64.233</span>.<span class=\"token number\">160.0</span>/<span class=\"token number\">19</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">65.52</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">14</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">66.102</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">20</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">66.249</span>.<span class=\"token number\">64.0</span>/<span class=\"token number\">19</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">72.14</span>.<span class=\"token number\">192.0</span>/<span class=\"token number\">18</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">74.125</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">16</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">209.85</span>.<span class=\"token number\">128.0</span>/<span class=\"token number\">17</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">216.239</span>.<span class=\"token number\">32.0</span>/<span class=\"token number\">19</span> <span class=\"token number\">0</span>;\n      #M$\n      <span class=\"token number\">64.4</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">18</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">157.60</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">16</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">157.54</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">15</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">157.56</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">14</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">207.46</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">16</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">207.68</span>.<span class=\"token number\">192.0</span>/<span class=\"token number\">20</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">207.68</span>.<span class=\"token number\">128.0</span>/<span class=\"token number\">18</span> <span class=\"token number\">0</span>;\n      #yahoo\n      <span class=\"token number\">8.12</span>.<span class=\"token number\">144.0</span>/<span class=\"token number\">24</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">66.196</span>.<span class=\"token number\">64.0</span>/<span class=\"token number\">18</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">66.228</span>.<span class=\"token number\">160.0</span>/<span class=\"token number\">19</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">67.195</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">16</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">74.6</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">16</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">68.142</span>.<span class=\"token number\">192.0</span>/<span class=\"token number\">18</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">72.30</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">16</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">209.191</span>.<span class=\"token number\">64.0</span>/<span class=\"token number\">18</span> <span class=\"token number\">0</span>;\n      #My IPs\n      <span class=\"token number\">127.0</span>.<span class=\"token number\">0.1</span>/<span class=\"token number\">32</span> <span class=\"token number\">0</span>;\n      <span class=\"token number\">123.456</span>.<span class=\"token number\">0.0</span>/<span class=\"token number\">28</span> <span class=\"token number\">0</span>; #example for your server CIDR\n  <span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:20:31 GMT+0800 (China Standard Time)","title":"nginx 限制某个 IP 同一时间段的访问次数","path":"2019/04/22/nginx限制某个IP同一时间段的访问次数/","eyeCatchImage":null,"excerpt":"nginx限制某个IP同一时间段的访问次数","date":{"_isAMomentObject":true,"_i":"2019-04-22T03:59:11.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2019-04-22T03:59:11.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["nginx"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":326},{"title":"pdfbox 解析 PDF 文件","date":"2019-05-14T02:11:34.000Z","description":"pdfbox解析PDF文件","_content":"\n    摘要:\n      最近需要使用到对PDF文件内容进行解析,然后对文件的部分内容进行索引查询.在解析的PDF的时候Java语言有2个\n      开源的PDF工具:PDFbox和Itext.\n    \nPDFbox和Itext都能读取、解析pdf文件，并且可对文件进行修改.有小伙伴将2个工具对比总结出以下结论:  \n**在读取和解析PDF的时候使用PDFBox，较为简单，示例较为详细;修改PDF的时候使用Itext，支持粒度较细，比如控制文字字体等**\n\n### Itext\n\n  iText是著名的开放项目，是用于生成PDF文档的一个java类库。通过iText不仅可以生成PDF或rtf的文档，而且可以将XML、Html文件转化为PDF文件等.目前只是用到对PDF文档的解析,所以对于Itext具体使用暂未查看,\n\n    官网:https://itextpdf.com/\n    插入文字可以自定义字体，使用字库文件(ttf)\n\n### PDFBox\n\n#### 引入PDFBox工具库jar\n\n    <dependency>\n        <groupId>org.apache.pdfbox</groupId>\n        <artifactId>pdfbox</artifactId>\n        <version>2.0.15</version> <!--当前使用2.0.15的版本-->\n    </dependency>\n\n#### 编写PDFUtils类\n\n```java\nimport org.apache.pdfbox.cos.COSName;\nimport org.apache.pdfbox.io.RandomAccessBuffer;\nimport org.apache.pdfbox.pdfparser.PDFParser;\nimport org.apache.pdfbox.pdmodel.PDDocument;\nimport org.apache.pdfbox.pdmodel.PDPage;\nimport org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject;\nimport org.apache.pdfbox.text.PDFTextStripper;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.nio.file.Paths;\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * pdf文档解析工具类\n *\n * @author bz\n */\npublic class PDFUtils {\n\n    private static final Logger logger = LoggerFactory.getLogger(PDFUtils.class);\n\n    /**\n     * @param pdfPath pdf文件路径\n     * @return\n     */\n    public static PDDocument initPDDocument(String pdfPath) throws Exception {\n        File pdfFile = Paths.get(pdfPath).toFile();\n        if (!pdfFile.exists()) {\n            logger.error(\"pdf文件不存在\");\n            return null;\n        }\n        // 新建一个PDF解析器对象\n        PDFParser pdfParser = new PDFParser(new RandomAccessBuffer(new FileInputStream(pdfFile)));\n        // 对PDF文件进行解析\n        pdfParser.parse();\n        // 获取解析后得到的PDF文档对象\n        PDDocument pdfdocument = pdfParser.getPDDocument();\n        return pdfdocument;\n    }\n\n    /**\n     * @param inputStream 输入流\n     * @return\n     */\n    public static PDDocument initPDDocument(InputStream inputStream) throws Exception {\n        // 新建一个PDF解析器对象\n        PDFParser pdfParser = new PDFParser(new RandomAccessBuffer(inputStream));\n        // 对PDF文件进行解析\n        pdfParser.parse();\n        // 获取解析后得到的PDF文档对象\n        PDDocument pdfdocument = pdfParser.getPDDocument();\n        return pdfdocument;\n    }\n\n    /**\n     * 解析pdf文档中的字符内容\n     *\n     * @param pdDocument\n     * @param startPage  开始页码\n     * @param endPage    结束页码\n     * @return\n     */\n    public static String getContent(PDDocument pdDocument, int startPage, int endPage) throws IOException {\n        if (endPage <= startPage) {\n            logger.error(\"页码参数不正确\");\n            return null;\n        }\n        // 新建一个PDF文本剥离器\n        PDFTextStripper stripper = new PDFTextStripper();\n        stripper.setStartPage(startPage); // 开始提取页数\n        stripper.setEndPage(endPage); // 结束提取页数\n        // 从PDF文档对象中剥离文本\n        String result = stripper.getText(pdDocument);\n        return result;\n    }\n\n    /**\n     * 解析pdf文档中的所有图片列表\n     *\n     * @param pdDocument\n     * @param startPage  开始页码\n     * @param endPage    结束页码\n     * @return\n     */\n    public static List<PDImageXObject> getImageList(PDDocument pdDocument, int startPage, int endPage) throws IOException {\n        if (endPage <= startPage) {\n            logger.error(\"页码参数不正确\");\n            return null;\n        }\n        List<PDImageXObject> imageList = new ArrayList<PDImageXObject>();\n        for (int i = startPage; i < endPage; i++) {\n            PDPage page = pdDocument.getPage(i);\n            Iterable<COSName> objectNames = page.getResources().getXObjectNames();\n            for (COSName imageObjectName : objectNames) {\n                if (page.getResources().isImageXObject(imageObjectName)) {\n                    PDImageXObject imageXObject = (PDImageXObject) page.getResources()\n                            .getXObject(imageObjectName);\n                    imageList.add(imageXObject);\n                }\n            }\n        }\n        return imageList;\n    }\n\n}\n```\n\n#### 调用PDFUtils类方法\n\n```java\n@Test\npublic void test4() throws Exception {\n    PDDocument pdDocument = PDFUtils.initPDDocument(\"/home/bz/Desktop/1.pdf\");\n    if (pdDocument != null) {\n        // 获取文档文本内容\n        String result = PDFUtils.getContent(pdDocument, 0, pdDocument.getNumberOfPages());\n        System.out.println(\"PDF文件的文本内容如下：\");\n        System.out.println(result);\n        // 获取文档中的所有图片\n        List<PDImageXObject> imageList = PDFUtils.getImageList(pdDocument, 0,pdDocument.getNumberOfPages());\n        for (int i = 0; i < imageList.size(); i++) {\n            PDImageXObject imageXObject = imageList.get(i);\n            BufferedImage bufferedImage = imageXObject.getImage();\n            ImageIO.write(bufferedImage, imageXObject.getSuffix(),\n                    new FileOutputStream(Paths\n                            .get(\"/home/bz/Desktop/\" + i + \".\" + imageXObject.getSuffix()).toFile()));\n        }\n    }\n}\n```\n","source":"_posts/pdfbox解析PDF文件.md","raw":"---\ntitle: pdfbox解析PDF文件\ndate: 2019-05-14 10:11:34\ndescription: pdfbox解析PDF文件\ntags:\n  - java\n  - pdfbox\n  - pdf\n---\n\n    摘要:\n      最近需要使用到对PDF文件内容进行解析,然后对文件的部分内容进行索引查询.在解析的PDF的时候Java语言有2个\n      开源的PDF工具:PDFbox和Itext.\n    \nPDFbox和Itext都能读取、解析pdf文件，并且可对文件进行修改.有小伙伴将2个工具对比总结出以下结论:  \n**在读取和解析PDF的时候使用PDFBox，较为简单，示例较为详细;修改PDF的时候使用Itext，支持粒度较细，比如控制文字字体等**\n\n### Itext\n\n  iText是著名的开放项目，是用于生成PDF文档的一个java类库。通过iText不仅可以生成PDF或rtf的文档，而且可以将XML、Html文件转化为PDF文件等.目前只是用到对PDF文档的解析,所以对于Itext具体使用暂未查看,\n\n    官网:https://itextpdf.com/\n    插入文字可以自定义字体，使用字库文件(ttf)\n\n### PDFBox\n\n#### 引入PDFBox工具库jar\n\n    <dependency>\n        <groupId>org.apache.pdfbox</groupId>\n        <artifactId>pdfbox</artifactId>\n        <version>2.0.15</version> <!--当前使用2.0.15的版本-->\n    </dependency>\n\n#### 编写PDFUtils类\n\n```java\nimport org.apache.pdfbox.cos.COSName;\nimport org.apache.pdfbox.io.RandomAccessBuffer;\nimport org.apache.pdfbox.pdfparser.PDFParser;\nimport org.apache.pdfbox.pdmodel.PDDocument;\nimport org.apache.pdfbox.pdmodel.PDPage;\nimport org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject;\nimport org.apache.pdfbox.text.PDFTextStripper;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.nio.file.Paths;\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * pdf文档解析工具类\n *\n * @author bz\n */\npublic class PDFUtils {\n\n    private static final Logger logger = LoggerFactory.getLogger(PDFUtils.class);\n\n    /**\n     * @param pdfPath pdf文件路径\n     * @return\n     */\n    public static PDDocument initPDDocument(String pdfPath) throws Exception {\n        File pdfFile = Paths.get(pdfPath).toFile();\n        if (!pdfFile.exists()) {\n            logger.error(\"pdf文件不存在\");\n            return null;\n        }\n        // 新建一个PDF解析器对象\n        PDFParser pdfParser = new PDFParser(new RandomAccessBuffer(new FileInputStream(pdfFile)));\n        // 对PDF文件进行解析\n        pdfParser.parse();\n        // 获取解析后得到的PDF文档对象\n        PDDocument pdfdocument = pdfParser.getPDDocument();\n        return pdfdocument;\n    }\n\n    /**\n     * @param inputStream 输入流\n     * @return\n     */\n    public static PDDocument initPDDocument(InputStream inputStream) throws Exception {\n        // 新建一个PDF解析器对象\n        PDFParser pdfParser = new PDFParser(new RandomAccessBuffer(inputStream));\n        // 对PDF文件进行解析\n        pdfParser.parse();\n        // 获取解析后得到的PDF文档对象\n        PDDocument pdfdocument = pdfParser.getPDDocument();\n        return pdfdocument;\n    }\n\n    /**\n     * 解析pdf文档中的字符内容\n     *\n     * @param pdDocument\n     * @param startPage  开始页码\n     * @param endPage    结束页码\n     * @return\n     */\n    public static String getContent(PDDocument pdDocument, int startPage, int endPage) throws IOException {\n        if (endPage <= startPage) {\n            logger.error(\"页码参数不正确\");\n            return null;\n        }\n        // 新建一个PDF文本剥离器\n        PDFTextStripper stripper = new PDFTextStripper();\n        stripper.setStartPage(startPage); // 开始提取页数\n        stripper.setEndPage(endPage); // 结束提取页数\n        // 从PDF文档对象中剥离文本\n        String result = stripper.getText(pdDocument);\n        return result;\n    }\n\n    /**\n     * 解析pdf文档中的所有图片列表\n     *\n     * @param pdDocument\n     * @param startPage  开始页码\n     * @param endPage    结束页码\n     * @return\n     */\n    public static List<PDImageXObject> getImageList(PDDocument pdDocument, int startPage, int endPage) throws IOException {\n        if (endPage <= startPage) {\n            logger.error(\"页码参数不正确\");\n            return null;\n        }\n        List<PDImageXObject> imageList = new ArrayList<PDImageXObject>();\n        for (int i = startPage; i < endPage; i++) {\n            PDPage page = pdDocument.getPage(i);\n            Iterable<COSName> objectNames = page.getResources().getXObjectNames();\n            for (COSName imageObjectName : objectNames) {\n                if (page.getResources().isImageXObject(imageObjectName)) {\n                    PDImageXObject imageXObject = (PDImageXObject) page.getResources()\n                            .getXObject(imageObjectName);\n                    imageList.add(imageXObject);\n                }\n            }\n        }\n        return imageList;\n    }\n\n}\n```\n\n#### 调用PDFUtils类方法\n\n```java\n@Test\npublic void test4() throws Exception {\n    PDDocument pdDocument = PDFUtils.initPDDocument(\"/home/bz/Desktop/1.pdf\");\n    if (pdDocument != null) {\n        // 获取文档文本内容\n        String result = PDFUtils.getContent(pdDocument, 0, pdDocument.getNumberOfPages());\n        System.out.println(\"PDF文件的文本内容如下：\");\n        System.out.println(result);\n        // 获取文档中的所有图片\n        List<PDImageXObject> imageList = PDFUtils.getImageList(pdDocument, 0,pdDocument.getNumberOfPages());\n        for (int i = 0; i < imageList.size(); i++) {\n            PDImageXObject imageXObject = imageList.get(i);\n            BufferedImage bufferedImage = imageXObject.getImage();\n            ImageIO.write(bufferedImage, imageXObject.getSuffix(),\n                    new FileOutputStream(Paths\n                            .get(\"/home/bz/Desktop/\" + i + \".\" + imageXObject.getSuffix()).toFile()));\n        }\n    }\n}\n```\n","slug":"pdfbox解析PDF文件","published":1,"updated":"2025-04-22T08:20:34.220Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745iz002md8gk5erq93xk","content":"<pre><code>摘要:\n  最近需要使用到对PDF文件内容进行解析,然后对文件的部分内容进行索引查询.在解析的PDF的时候Java语言有2个\n  开源的PDF工具:PDFbox和Itext.\n</code></pre>\n<p>PDFbox 和 Itext 都能读取、解析 pdf 文件，并且可对文件进行修改。有小伙伴将 2 个工具对比总结出以下结论:<br><strong>在读取和解析 PDF 的时候使用 PDFBox，较为简单，示例较为详细；修改 PDF 的时候使用 Itext，支持粒度较细，比如控制文字字体等</strong></p>\n<h3 id=\"Itext\"><a href=\"#Itext\" class=\"headerlink\" title=\"Itext\"></a>Itext</h3><p>  iText 是著名的开放项目，是用于生成 PDF 文档的一个 java 类库。通过 iText 不仅可以生成 PDF 或 rtf 的文档，而且可以将 XML、Html 文件转化为 PDF 文件等。目前只是用到对 PDF 文档的解析，所以对于 Itext 具体使用暂未查看，</p>\n<pre><code>官网:https://itextpdf.com/\n插入文字可以自定义字体，使用字库文件(ttf)\n</code></pre>\n<h3 id=\"PDFBox\"><a href=\"#PDFBox\" class=\"headerlink\" title=\"PDFBox\"></a>PDFBox</h3><h4 id=\"引入PDFBox工具库jar\"><a href=\"#引入PDFBox工具库jar\" class=\"headerlink\" title=\"引入PDFBox工具库jar\"></a>引入 PDFBox 工具库 jar</h4><pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.apache.pdfbox&lt;/groupId&gt;\n    &lt;artifactId&gt;pdfbox&lt;/artifactId&gt;\n    &lt;version&gt;2.0.15&lt;/version&gt; &lt;!--当前使用2.0.15的版本--&gt;\n&lt;/dependency&gt;\n</code></pre>\n<h4 id=\"编写PDFUtils类\"><a href=\"#编写PDFUtils类\" class=\"headerlink\" title=\"编写PDFUtils类\"></a>编写 PDFUtils 类</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>pdfbox<span class=\"token punctuation\">.</span>cos<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">COSName</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>pdfbox<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RandomAccessBuffer</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>pdfbox<span class=\"token punctuation\">.</span>pdfparser<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PDFParser</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>pdfbox<span class=\"token punctuation\">.</span>pdmodel<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PDDocument</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>pdfbox<span class=\"token punctuation\">.</span>pdmodel<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PDPage</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>pdfbox<span class=\"token punctuation\">.</span>pdmodel<span class=\"token punctuation\">.</span>graphics<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PDImageXObject</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>pdfbox<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PDFTextStripper</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Logger</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LoggerFactory</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">File</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileInputStream</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InputStream</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Paths</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * pdf文档解析工具类\n *\n * @author bz\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PDFUtils</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Logger</span> logger <span class=\"token operator\">=</span> <span class=\"token class-name\">LoggerFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PDFUtils</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * @param pdfPath pdf文件路径\n     * @return\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">PDDocument</span> <span class=\"token function\">initPDDocument</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> pdfPath<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">File</span> pdfFile <span class=\"token operator\">=</span> <span class=\"token class-name\">Paths</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>pdfPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pdfFile<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pdf文件不存在\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 新建一个PDF解析器对象</span>\n        <span class=\"token class-name\">PDFParser</span> pdfParser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PDFParser</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RandomAccessBuffer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span>pdfFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 对PDF文件进行解析</span>\n        pdfParser<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 获取解析后得到的PDF文档对象</span>\n        <span class=\"token class-name\">PDDocument</span> pdfdocument <span class=\"token operator\">=</span> pdfParser<span class=\"token punctuation\">.</span><span class=\"token function\">getPDDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> pdfdocument<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * @param inputStream 输入流\n     * @return\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">PDDocument</span> <span class=\"token function\">initPDDocument</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InputStream</span> inputStream<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 新建一个PDF解析器对象</span>\n        <span class=\"token class-name\">PDFParser</span> pdfParser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PDFParser</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RandomAccessBuffer</span><span class=\"token punctuation\">(</span>inputStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 对PDF文件进行解析</span>\n        pdfParser<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 获取解析后得到的PDF文档对象</span>\n        <span class=\"token class-name\">PDDocument</span> pdfdocument <span class=\"token operator\">=</span> pdfParser<span class=\"token punctuation\">.</span><span class=\"token function\">getPDDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> pdfdocument<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 解析pdf文档中的字符内容\n     *\n     * @param pdDocument\n     * @param startPage  开始页码\n     * @param endPage    结束页码\n     * @return\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PDDocument</span> pdDocument<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> startPage<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> endPage<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>endPage <span class=\"token operator\">&lt;=</span> startPage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"页码参数不正确\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 新建一个PDF文本剥离器</span>\n        <span class=\"token class-name\">PDFTextStripper</span> stripper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PDFTextStripper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        stripper<span class=\"token punctuation\">.</span><span class=\"token function\">setStartPage</span><span class=\"token punctuation\">(</span>startPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 开始提取页数</span>\n        stripper<span class=\"token punctuation\">.</span><span class=\"token function\">setEndPage</span><span class=\"token punctuation\">(</span>endPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 结束提取页数</span>\n        <span class=\"token comment\">// 从PDF文档对象中剥离文本</span>\n        <span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> stripper<span class=\"token punctuation\">.</span><span class=\"token function\">getText</span><span class=\"token punctuation\">(</span>pdDocument<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 解析pdf文档中的所有图片列表\n     *\n     * @param pdDocument\n     * @param startPage  开始页码\n     * @param endPage    结束页码\n     * @return\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PDImageXObject</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getImageList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PDDocument</span> pdDocument<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> startPage<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> endPage<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>endPage <span class=\"token operator\">&lt;=</span> startPage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"页码参数不正确\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PDImageXObject</span><span class=\"token punctuation\">&gt;</span></span> imageList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PDImageXObject</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> startPage<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> endPage<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">PDPage</span> page <span class=\"token operator\">=</span> pdDocument<span class=\"token punctuation\">.</span><span class=\"token function\">getPage</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Iterable</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">COSName</span><span class=\"token punctuation\">&gt;</span></span> objectNames <span class=\"token operator\">=</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">getResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXObjectNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">COSName</span> imageObjectName <span class=\"token operator\">:</span> objectNames<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">.</span><span class=\"token function\">getResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isImageXObject</span><span class=\"token punctuation\">(</span>imageObjectName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token class-name\">PDImageXObject</span> imageXObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PDImageXObject</span><span class=\"token punctuation\">)</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">getResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                            <span class=\"token punctuation\">.</span><span class=\"token function\">getXObject</span><span class=\"token punctuation\">(</span>imageObjectName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    imageList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>imageXObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> imageList<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"调用PDFUtils类方法\"><a href=\"#调用PDFUtils类方法\" class=\"headerlink\" title=\"调用PDFUtils类方法\"></a>调用 PDFUtils 类方法</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">PDDocument</span> pdDocument <span class=\"token operator\">=</span> <span class=\"token class-name\">PDFUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">initPDDocument</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/home/bz/Desktop/1.pdf\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pdDocument <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 获取文档文本内容</span>\n        <span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> <span class=\"token class-name\">PDFUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span>pdDocument<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> pdDocument<span class=\"token punctuation\">.</span><span class=\"token function\">getNumberOfPages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PDF文件的文本内容如下：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 获取文档中的所有图片</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PDImageXObject</span><span class=\"token punctuation\">&gt;</span></span> imageList <span class=\"token operator\">=</span> <span class=\"token class-name\">PDFUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getImageList</span><span class=\"token punctuation\">(</span>pdDocument<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>pdDocument<span class=\"token punctuation\">.</span><span class=\"token function\">getNumberOfPages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> imageList<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">PDImageXObject</span> imageXObject <span class=\"token operator\">=</span> imageList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">BufferedImage</span> bufferedImage <span class=\"token operator\">=</span> imageXObject<span class=\"token punctuation\">.</span><span class=\"token function\">getImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">ImageIO</span><span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>bufferedImage<span class=\"token punctuation\">,</span> imageXObject<span class=\"token punctuation\">.</span><span class=\"token function\">getSuffix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Paths</span>\n                            <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/home/bz/Desktop/\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">+</span> imageXObject<span class=\"token punctuation\">.</span><span class=\"token function\">getSuffix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","excerpt":"","more":"<pre><code>摘要:\n  最近需要使用到对PDF文件内容进行解析,然后对文件的部分内容进行索引查询.在解析的PDF的时候Java语言有2个\n  开源的PDF工具:PDFbox和Itext.\n</code></pre>\n<p>PDFbox 和 Itext 都能读取、解析 pdf 文件，并且可对文件进行修改。有小伙伴将 2 个工具对比总结出以下结论:<br><strong>在读取和解析 PDF 的时候使用 PDFBox，较为简单，示例较为详细；修改 PDF 的时候使用 Itext，支持粒度较细，比如控制文字字体等</strong></p>\n<h3 id=\"Itext\"><a href=\"#Itext\" class=\"headerlink\" title=\"Itext\"></a>Itext</h3><p>  iText 是著名的开放项目，是用于生成 PDF 文档的一个 java 类库。通过 iText 不仅可以生成 PDF 或 rtf 的文档，而且可以将 XML、Html 文件转化为 PDF 文件等。目前只是用到对 PDF 文档的解析，所以对于 Itext 具体使用暂未查看，</p>\n<pre><code>官网:https://itextpdf.com/\n插入文字可以自定义字体，使用字库文件(ttf)\n</code></pre>\n<h3 id=\"PDFBox\"><a href=\"#PDFBox\" class=\"headerlink\" title=\"PDFBox\"></a>PDFBox</h3><h4 id=\"引入PDFBox工具库jar\"><a href=\"#引入PDFBox工具库jar\" class=\"headerlink\" title=\"引入PDFBox工具库jar\"></a>引入 PDFBox 工具库 jar</h4><pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.apache.pdfbox&lt;/groupId&gt;\n    &lt;artifactId&gt;pdfbox&lt;/artifactId&gt;\n    &lt;version&gt;2.0.15&lt;/version&gt; &lt;!--当前使用2.0.15的版本--&gt;\n&lt;/dependency&gt;\n</code></pre>\n<h4 id=\"编写PDFUtils类\"><a href=\"#编写PDFUtils类\" class=\"headerlink\" title=\"编写PDFUtils类\"></a>编写 PDFUtils 类</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>pdfbox<span class=\"token punctuation\">.</span>cos<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">COSName</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>pdfbox<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RandomAccessBuffer</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>pdfbox<span class=\"token punctuation\">.</span>pdfparser<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PDFParser</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>pdfbox<span class=\"token punctuation\">.</span>pdmodel<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PDDocument</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>pdfbox<span class=\"token punctuation\">.</span>pdmodel<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PDPage</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>pdfbox<span class=\"token punctuation\">.</span>pdmodel<span class=\"token punctuation\">.</span>graphics<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PDImageXObject</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>pdfbox<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PDFTextStripper</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Logger</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LoggerFactory</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">File</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileInputStream</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InputStream</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Paths</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * pdf文档解析工具类\n *\n * @author bz\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PDFUtils</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Logger</span> logger <span class=\"token operator\">=</span> <span class=\"token class-name\">LoggerFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PDFUtils</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * @param pdfPath pdf文件路径\n     * @return\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">PDDocument</span> <span class=\"token function\">initPDDocument</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> pdfPath<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">File</span> pdfFile <span class=\"token operator\">=</span> <span class=\"token class-name\">Paths</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>pdfPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pdfFile<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pdf文件不存在\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 新建一个PDF解析器对象</span>\n        <span class=\"token class-name\">PDFParser</span> pdfParser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PDFParser</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RandomAccessBuffer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span>pdfFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 对PDF文件进行解析</span>\n        pdfParser<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 获取解析后得到的PDF文档对象</span>\n        <span class=\"token class-name\">PDDocument</span> pdfdocument <span class=\"token operator\">=</span> pdfParser<span class=\"token punctuation\">.</span><span class=\"token function\">getPDDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> pdfdocument<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * @param inputStream 输入流\n     * @return\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">PDDocument</span> <span class=\"token function\">initPDDocument</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InputStream</span> inputStream<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 新建一个PDF解析器对象</span>\n        <span class=\"token class-name\">PDFParser</span> pdfParser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PDFParser</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RandomAccessBuffer</span><span class=\"token punctuation\">(</span>inputStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 对PDF文件进行解析</span>\n        pdfParser<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 获取解析后得到的PDF文档对象</span>\n        <span class=\"token class-name\">PDDocument</span> pdfdocument <span class=\"token operator\">=</span> pdfParser<span class=\"token punctuation\">.</span><span class=\"token function\">getPDDocument</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> pdfdocument<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 解析pdf文档中的字符内容\n     *\n     * @param pdDocument\n     * @param startPage  开始页码\n     * @param endPage    结束页码\n     * @return\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PDDocument</span> pdDocument<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> startPage<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> endPage<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>endPage <span class=\"token operator\">&lt;=</span> startPage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"页码参数不正确\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 新建一个PDF文本剥离器</span>\n        <span class=\"token class-name\">PDFTextStripper</span> stripper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PDFTextStripper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        stripper<span class=\"token punctuation\">.</span><span class=\"token function\">setStartPage</span><span class=\"token punctuation\">(</span>startPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 开始提取页数</span>\n        stripper<span class=\"token punctuation\">.</span><span class=\"token function\">setEndPage</span><span class=\"token punctuation\">(</span>endPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 结束提取页数</span>\n        <span class=\"token comment\">// 从PDF文档对象中剥离文本</span>\n        <span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> stripper<span class=\"token punctuation\">.</span><span class=\"token function\">getText</span><span class=\"token punctuation\">(</span>pdDocument<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 解析pdf文档中的所有图片列表\n     *\n     * @param pdDocument\n     * @param startPage  开始页码\n     * @param endPage    结束页码\n     * @return\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PDImageXObject</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getImageList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PDDocument</span> pdDocument<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> startPage<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> endPage<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>endPage <span class=\"token operator\">&lt;=</span> startPage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            logger<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"页码参数不正确\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PDImageXObject</span><span class=\"token punctuation\">&gt;</span></span> imageList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PDImageXObject</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> startPage<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> endPage<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">PDPage</span> page <span class=\"token operator\">=</span> pdDocument<span class=\"token punctuation\">.</span><span class=\"token function\">getPage</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Iterable</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">COSName</span><span class=\"token punctuation\">&gt;</span></span> objectNames <span class=\"token operator\">=</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">getResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getXObjectNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">COSName</span> imageObjectName <span class=\"token operator\">:</span> objectNames<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">.</span><span class=\"token function\">getResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isImageXObject</span><span class=\"token punctuation\">(</span>imageObjectName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token class-name\">PDImageXObject</span> imageXObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PDImageXObject</span><span class=\"token punctuation\">)</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">getResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                            <span class=\"token punctuation\">.</span><span class=\"token function\">getXObject</span><span class=\"token punctuation\">(</span>imageObjectName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    imageList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>imageXObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> imageList<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"调用PDFUtils类方法\"><a href=\"#调用PDFUtils类方法\" class=\"headerlink\" title=\"调用PDFUtils类方法\"></a>调用 PDFUtils 类方法</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">PDDocument</span> pdDocument <span class=\"token operator\">=</span> <span class=\"token class-name\">PDFUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">initPDDocument</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/home/bz/Desktop/1.pdf\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pdDocument <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 获取文档文本内容</span>\n        <span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> <span class=\"token class-name\">PDFUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span>pdDocument<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> pdDocument<span class=\"token punctuation\">.</span><span class=\"token function\">getNumberOfPages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PDF文件的文本内容如下：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 获取文档中的所有图片</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PDImageXObject</span><span class=\"token punctuation\">&gt;</span></span> imageList <span class=\"token operator\">=</span> <span class=\"token class-name\">PDFUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getImageList</span><span class=\"token punctuation\">(</span>pdDocument<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>pdDocument<span class=\"token punctuation\">.</span><span class=\"token function\">getNumberOfPages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> imageList<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">PDImageXObject</span> imageXObject <span class=\"token operator\">=</span> imageList<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">BufferedImage</span> bufferedImage <span class=\"token operator\">=</span> imageXObject<span class=\"token punctuation\">.</span><span class=\"token function\">getImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">ImageIO</span><span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>bufferedImage<span class=\"token punctuation\">,</span> imageXObject<span class=\"token punctuation\">.</span><span class=\"token function\">getSuffix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Paths</span>\n                            <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/home/bz/Desktop/\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">+</span> imageXObject<span class=\"token punctuation\">.</span><span class=\"token function\">getSuffix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:20:34 GMT+0800 (China Standard Time)","title":"pdfbox 解析 PDF 文件","path":"2019/05/14/pdfbox解析PDF文件/","eyeCatchImage":null,"excerpt":"pdfbox解析PDF文件","date":{"_isAMomentObject":true,"_i":"2019-05-14T02:11:34.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2019-05-14T02:11:34.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["java","pdfbox","pdf"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":285},{"title":"tomcat 解决 java.lang.IllegalArgumentException: Invalid character 异常","date":"2019-02-21T03:06:41.000Z","description":"IllegalArgumentException","_content":"\n>tomcat新版添加了对于http头的验证。出现java.lang.IllegalArgumentException: Invalid character found in the request target. The valid char... 异常\n\n网上查找了几种方法归类\n\n1.更换tomcat版本,但是7,8,9的版本都更换过,问题依然.但是有网友确实可以解决,但是更换到具体什么版本未知.\n\n2.前端http请求的时候对参数进行URL编码处理,理论上是绝对可行的,但是已有的http请求数很多,一个一个修改工作量大.未试\n\n3.配置tomcat的catalina.properties 添加或者修改： tomcat.util.http.parser.HttpParser.requestTargetAllow=|{}\n\n4.使用Connector中relaxedPathChars和relaxedQueryChars属性可以解决问题.找到tomcat/conf/server.xml,在Connector中增加这两个配置.\n`<Connector port=\"8080\" protocol=\"HTTP/1.1\"    relaxedPathChars=\"[]{}|\\^\" relaxedQueryChars=\"[]{}|\\^\" />`","source":"_posts/tomcat解决java-lang-IllegalArgumentException-Invalid-character异常.md","raw":"---\ntitle: 'tomcat解决java.lang.IllegalArgumentException: Invalid character异常'\ndate: 2019-02-21 11:06:41\ndescription: IllegalArgumentException\ntags: tomcat\n---\n\n>tomcat新版添加了对于http头的验证。出现java.lang.IllegalArgumentException: Invalid character found in the request target. The valid char... 异常\n\n网上查找了几种方法归类\n\n1.更换tomcat版本,但是7,8,9的版本都更换过,问题依然.但是有网友确实可以解决,但是更换到具体什么版本未知.\n\n2.前端http请求的时候对参数进行URL编码处理,理论上是绝对可行的,但是已有的http请求数很多,一个一个修改工作量大.未试\n\n3.配置tomcat的catalina.properties 添加或者修改： tomcat.util.http.parser.HttpParser.requestTargetAllow=|{}\n\n4.使用Connector中relaxedPathChars和relaxedQueryChars属性可以解决问题.找到tomcat/conf/server.xml,在Connector中增加这两个配置.\n`<Connector port=\"8080\" protocol=\"HTTP/1.1\"    relaxedPathChars=\"[]{}|\\^\" relaxedQueryChars=\"[]{}|\\^\" />`","slug":"tomcat解决java-lang-IllegalArgumentException-Invalid-character异常","published":1,"updated":"2025-04-22T08:20:47.488Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745iz002od8gkewvqbct5","content":"<blockquote>\n<p>tomcat 新版添加了对于 http 头的验证。出现 java.lang.IllegalArgumentException: Invalid character found in the request target. The valid char… 异常</p>\n</blockquote>\n<p>网上查找了几种方法归类</p>\n<p>1. 更换 tomcat 版本，但是 7,8,9 的版本都更换过，问题依然。但是有网友确实可以解决，但是更换到具体什么版本未知.</p>\n<p>2. 前端 http 请求的时候对参数进行 URL 编码处理，理论上是绝对可行的，但是已有的 http 请求数很多，一个一个修改工作量大。未试</p>\n<p>3. 配置 tomcat 的 catalina.properties 添加或者修改： tomcat.util.http.parser.HttpParser.requestTargetAllow=|{}</p>\n<p>4. 使用 Connector 中 relaxedPathChars 和 relaxedQueryChars 属性可以解决问题。找到 tomcat/conf/server.xml, 在 Connector 中增加这两个配置.<br><code>&lt;Connector port=\"8080\" protocol=\"HTTP/1.1\"    relaxedPathChars=\"[]{}|\\^\" relaxedQueryChars=\"[]{}|\\^\" /&gt;</code></p>\n","excerpt":"","more":"<blockquote>\n<p>tomcat 新版添加了对于 http 头的验证。出现 java.lang.IllegalArgumentException: Invalid character found in the request target. The valid char… 异常</p>\n</blockquote>\n<p>网上查找了几种方法归类</p>\n<p>1. 更换 tomcat 版本，但是 7,8,9 的版本都更换过，问题依然。但是有网友确实可以解决，但是更换到具体什么版本未知.</p>\n<p>2. 前端 http 请求的时候对参数进行 URL 编码处理，理论上是绝对可行的，但是已有的 http 请求数很多，一个一个修改工作量大。未试</p>\n<p>3. 配置 tomcat 的 catalina.properties 添加或者修改： tomcat.util.http.parser.HttpParser.requestTargetAllow=|{}</p>\n<p>4. 使用 Connector 中 relaxedPathChars 和 relaxedQueryChars 属性可以解决问题。找到 tomcat/conf/server.xml, 在 Connector 中增加这两个配置.<br><code>&lt;Connector port=\"8080\" protocol=\"HTTP/1.1\"    relaxedPathChars=\"[]{}|\\^\" relaxedQueryChars=\"[]{}|\\^\" /&gt;</code></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:20:47 GMT+0800 (China Standard Time)","title":"tomcat 解决 java.lang.IllegalArgumentException: Invalid character 异常","path":"2019/02/21/tomcat解决java-lang-IllegalArgumentException-Invalid-character异常/","eyeCatchImage":null,"excerpt":"IllegalArgumentException","date":{"_isAMomentObject":true,"_i":"2019-02-21T03:06:41.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2019-02-21T03:06:41.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["tomcat"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":186},{"title":"vscode 配置前端 vue 开发环境","date":"2018-12-13T06:05:39.000Z","description":"vscode配置前端vue开发环境","_content":"\n    摘要:\n      使用vscode配置前端vue开发环境\n\n1.安装好vscode后,安装常用的几个插件\n\n    Auto Close Tag : 自动闭合标签插件\n\n    Beautify : 格式化js,json,css,sass,html等文件\n\n    ESLint : 使用eslint规范对代码进行处理\n\n    file-icons : 文件图标,便利区分不同类型的文件\n\n    Monokai Theme : 一款类似sublime text主流的主题设置,使界面美观,享受美好的编码心情\n\n    Path Intellisense : 自动提示文件路径插件\n\n    Prettier : 因为vscode默认的格式化是不能通过eslint校验规范的,需要改为此插件\n\n    Vetur : vscode的vue工具插件\n\n    HTML CSS Support : 在标签中class属性的时候,提示class的名称\n\n    px2rem : 将像素值转为rem插件\n\n    下面是markdown相关的插件\n\n    Markdown-TOC : 对markdown文档生成目录的插件,有2个,请选择作者为AlanWalk的\n\n2.安装好上述插件后,对其进行配置设置(2018-12-15更 v.1.30.0)\n\n    在文件->首选项->设置->用户设置里面写入以下配置\n\n  ```json\n  {\n    \"workbench.startupEditor\": \"newUntitledFile\",\n    \"window.title\": \"${dirty}${activeEditorLong}${separator}${rootName}${separator}${appName}\",\n    \"extensions.ignoreRecommendations\": false,\n    \"workbench.iconTheme\": \"file-icons\",\n    \"workbench.colorTheme\": \"Monokai\",\n    \"vetur.format.defaultFormatter.js\": \"vscode-typescript\",\n    \"extensions.autoUpdate\": false,\n    \"update.channel\": \"none\",\n    \"eslint.autoFixOnSave\": false,\n    \"files.autoSave\": \"off\",\n    \"eslint.validate\": [\n        \"javascript\",\n        \"javascriptreact\",\n        {\n            \"language\": \"vue\",\n            \"autoFix\": true\n        },\n        {\n            \"language\": \"html\",\n            \"autoFix\": true\n        },\n        \"vue\"\n    ],\n    \"eslint.options\": {\n        \"plugins\": [\n            \"html\"\n        ]\n    },\n    \"editor.tabSize\": 2,\n    \"prettier.eslintIntegration\": true,\n    \"vetur.format.defaultFormatterOptions\": {\n        \"html\": \"prettier\",\n        \"css\": \"prettier\",\n        \"postcss\": \"prettier\",\n        \"scss\": \"prettier\",\n        \"less\": \"prettier\",\n        \"js\": \"prettier\",\n        \"ts\": \"prettier\",\n        \"stylus\": \"stylus-supremacy\",\n        \"wrap_attributes\": \"force-aligned\",\n        \"prettier\": {\n            \"semi\": false,\n            \"singleQuote\": true\n        }\n    },\n    \"eslint.alwaysShowStatus\": true,\n    \"window.titleBarStyle\": \"custom\",\n    \"files.eol\": \"\\n\"\n}\n  ```\n3.vscode 1.29版本以上markdown-toc生成目录默认是有问题的,1.29版本以下能够直接正常使用\n\n        1.29版本以上,请在file->preferences->setting->text editor中找到Eol配置的地方,设置为\\n即可.\n        详细情况见 https://github.com/AlanWalk/markdown-toc/issues/65\n\n4.vscode 1.30版本在file->preferences->setting下找不到打开setting.json文件的入口了.如下图,可以在系统路径下找到该文件编辑即可.\n\n        文件路径\n        Windows: %APPDATA%\\Code\\User\\settings.json\n        macOS: $HOME/Library/Application Support/Code/User/settings.json\n        Linux: $HOME/.config/Code/User/settings.json\n\n![](/images/vscode.1.30.png)","source":"_posts/vscode配置前端vue开发环境.md","raw":"---\ntitle: vscode配置前端vue开发环境\ndate: 2018-12-13 14:05:39\ndescription: vscode配置前端vue开发环境\ntags:\n  - vscode\n---\n\n    摘要:\n      使用vscode配置前端vue开发环境\n\n1.安装好vscode后,安装常用的几个插件\n\n    Auto Close Tag : 自动闭合标签插件\n\n    Beautify : 格式化js,json,css,sass,html等文件\n\n    ESLint : 使用eslint规范对代码进行处理\n\n    file-icons : 文件图标,便利区分不同类型的文件\n\n    Monokai Theme : 一款类似sublime text主流的主题设置,使界面美观,享受美好的编码心情\n\n    Path Intellisense : 自动提示文件路径插件\n\n    Prettier : 因为vscode默认的格式化是不能通过eslint校验规范的,需要改为此插件\n\n    Vetur : vscode的vue工具插件\n\n    HTML CSS Support : 在标签中class属性的时候,提示class的名称\n\n    px2rem : 将像素值转为rem插件\n\n    下面是markdown相关的插件\n\n    Markdown-TOC : 对markdown文档生成目录的插件,有2个,请选择作者为AlanWalk的\n\n2.安装好上述插件后,对其进行配置设置(2018-12-15更 v.1.30.0)\n\n    在文件->首选项->设置->用户设置里面写入以下配置\n\n  ```json\n  {\n    \"workbench.startupEditor\": \"newUntitledFile\",\n    \"window.title\": \"${dirty}${activeEditorLong}${separator}${rootName}${separator}${appName}\",\n    \"extensions.ignoreRecommendations\": false,\n    \"workbench.iconTheme\": \"file-icons\",\n    \"workbench.colorTheme\": \"Monokai\",\n    \"vetur.format.defaultFormatter.js\": \"vscode-typescript\",\n    \"extensions.autoUpdate\": false,\n    \"update.channel\": \"none\",\n    \"eslint.autoFixOnSave\": false,\n    \"files.autoSave\": \"off\",\n    \"eslint.validate\": [\n        \"javascript\",\n        \"javascriptreact\",\n        {\n            \"language\": \"vue\",\n            \"autoFix\": true\n        },\n        {\n            \"language\": \"html\",\n            \"autoFix\": true\n        },\n        \"vue\"\n    ],\n    \"eslint.options\": {\n        \"plugins\": [\n            \"html\"\n        ]\n    },\n    \"editor.tabSize\": 2,\n    \"prettier.eslintIntegration\": true,\n    \"vetur.format.defaultFormatterOptions\": {\n        \"html\": \"prettier\",\n        \"css\": \"prettier\",\n        \"postcss\": \"prettier\",\n        \"scss\": \"prettier\",\n        \"less\": \"prettier\",\n        \"js\": \"prettier\",\n        \"ts\": \"prettier\",\n        \"stylus\": \"stylus-supremacy\",\n        \"wrap_attributes\": \"force-aligned\",\n        \"prettier\": {\n            \"semi\": false,\n            \"singleQuote\": true\n        }\n    },\n    \"eslint.alwaysShowStatus\": true,\n    \"window.titleBarStyle\": \"custom\",\n    \"files.eol\": \"\\n\"\n}\n  ```\n3.vscode 1.29版本以上markdown-toc生成目录默认是有问题的,1.29版本以下能够直接正常使用\n\n        1.29版本以上,请在file->preferences->setting->text editor中找到Eol配置的地方,设置为\\n即可.\n        详细情况见 https://github.com/AlanWalk/markdown-toc/issues/65\n\n4.vscode 1.30版本在file->preferences->setting下找不到打开setting.json文件的入口了.如下图,可以在系统路径下找到该文件编辑即可.\n\n        文件路径\n        Windows: %APPDATA%\\Code\\User\\settings.json\n        macOS: $HOME/Library/Application Support/Code/User/settings.json\n        Linux: $HOME/.config/Code/User/settings.json\n\n![](/images/vscode.1.30.png)","slug":"vscode配置前端vue开发环境","published":1,"updated":"2025-04-22T08:20:51.348Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745j0002qd8gk9u8tfyiy","content":"<pre><code>摘要:\n  使用vscode配置前端vue开发环境\n</code></pre>\n<p>1. 安装好 vscode 后，安装常用的几个插件</p>\n<pre><code>Auto Close Tag : 自动闭合标签插件\n\nBeautify : 格式化js,json,css,sass,html等文件\n\nESLint : 使用eslint规范对代码进行处理\n\nfile-icons : 文件图标,便利区分不同类型的文件\n\nMonokai Theme : 一款类似sublime text主流的主题设置,使界面美观,享受美好的编码心情\n\nPath Intellisense : 自动提示文件路径插件\n\nPrettier : 因为vscode默认的格式化是不能通过eslint校验规范的,需要改为此插件\n\nVetur : vscode的vue工具插件\n\nHTML CSS Support : 在标签中class属性的时候,提示class的名称\n\npx2rem : 将像素值转为rem插件\n\n下面是markdown相关的插件\n\nMarkdown-TOC : 对markdown文档生成目录的插件,有2个,请选择作者为AlanWalk的\n</code></pre>\n<p>2. 安装好上述插件后，对其进行配置设置 (2018-12-15 更 v.1.30.0)</p>\n<pre><code>在文件-&gt;首选项-&gt;设置-&gt;用户设置里面写入以下配置\n</code></pre>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"workbench.startupEditor\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"newUntitledFile\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"window.title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"${dirty}${activeEditorLong}${separator}${rootName}${separator}${appName}\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"extensions.ignoreRecommendations\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"workbench.iconTheme\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"file-icons\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"workbench.colorTheme\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Monokai\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"vetur.format.defaultFormatter.js\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vscode-typescript\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"extensions.autoUpdate\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"update.channel\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"eslint.autoFixOnSave\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"files.autoSave\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"eslint.validate\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"javascript\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"javascriptreact\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"language\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"autoFix\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"language\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"html\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"autoFix\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"vue\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"eslint.options\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"html\"</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"editor.tabSize\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"prettier.eslintIntegration\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"vetur.format.defaultFormatterOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"html\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"prettier\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"css\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"prettier\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"postcss\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"prettier\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"scss\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"prettier\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"less\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"prettier\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"js\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"prettier\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"ts\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"prettier\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"stylus\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"stylus-supremacy\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"wrap_attributes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"force-aligned\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"prettier\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"semi\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"singleQuote\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"eslint.alwaysShowStatus\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"window.titleBarStyle\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"custom\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"files.eol\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\\n\"</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>3.vscode 1.29 版本以上 markdown-toc 生成目录默认是有问题的，1.29 版本以下能够直接正常使用</p>\n<pre><code>    1.29版本以上,请在file-&gt;preferences-&gt;setting-&gt;text editor中找到Eol配置的地方,设置为\\n即可.\n    详细情况见 https://github.com/AlanWalk/markdown-toc/issues/65\n</code></pre>\n<p>4.vscode 1.30 版本在 file-&gt;preferences-&gt;setting 下找不到打开 setting.json 文件的入口了。如下图，可以在系统路径下找到该文件编辑即可.</p>\n<pre><code>    文件路径\n    Windows: %APPDATA%\\Code\\User\\settings.json\n    macOS: $HOME/Library/Application Support/Code/User/settings.json\n    Linux: $HOME/.config/Code/User/settings.json\n</code></pre>\n<p><img src=\"/images/vscode.1.30.png\"></p>\n","excerpt":"","more":"<pre><code>摘要:\n  使用vscode配置前端vue开发环境\n</code></pre>\n<p>1. 安装好 vscode 后，安装常用的几个插件</p>\n<pre><code>Auto Close Tag : 自动闭合标签插件\n\nBeautify : 格式化js,json,css,sass,html等文件\n\nESLint : 使用eslint规范对代码进行处理\n\nfile-icons : 文件图标,便利区分不同类型的文件\n\nMonokai Theme : 一款类似sublime text主流的主题设置,使界面美观,享受美好的编码心情\n\nPath Intellisense : 自动提示文件路径插件\n\nPrettier : 因为vscode默认的格式化是不能通过eslint校验规范的,需要改为此插件\n\nVetur : vscode的vue工具插件\n\nHTML CSS Support : 在标签中class属性的时候,提示class的名称\n\npx2rem : 将像素值转为rem插件\n\n下面是markdown相关的插件\n\nMarkdown-TOC : 对markdown文档生成目录的插件,有2个,请选择作者为AlanWalk的\n</code></pre>\n<p>2. 安装好上述插件后，对其进行配置设置 (2018-12-15 更 v.1.30.0)</p>\n<pre><code>在文件-&gt;首选项-&gt;设置-&gt;用户设置里面写入以下配置\n</code></pre>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"workbench.startupEditor\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"newUntitledFile\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"window.title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"${dirty}${activeEditorLong}${separator}${rootName}${separator}${appName}\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"extensions.ignoreRecommendations\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"workbench.iconTheme\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"file-icons\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"workbench.colorTheme\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Monokai\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"vetur.format.defaultFormatter.js\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vscode-typescript\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"extensions.autoUpdate\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"update.channel\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"eslint.autoFixOnSave\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"files.autoSave\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"eslint.validate\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"javascript\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"javascriptreact\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"language\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"autoFix\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"language\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"html\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"autoFix\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"vue\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"eslint.options\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"html\"</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"editor.tabSize\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"prettier.eslintIntegration\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"vetur.format.defaultFormatterOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"html\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"prettier\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"css\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"prettier\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"postcss\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"prettier\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"scss\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"prettier\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"less\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"prettier\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"js\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"prettier\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"ts\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"prettier\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"stylus\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"stylus-supremacy\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"wrap_attributes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"force-aligned\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"prettier\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"semi\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"singleQuote\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"eslint.alwaysShowStatus\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"window.titleBarStyle\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"custom\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"files.eol\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\\n\"</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>3.vscode 1.29 版本以上 markdown-toc 生成目录默认是有问题的，1.29 版本以下能够直接正常使用</p>\n<pre><code>    1.29版本以上,请在file-&gt;preferences-&gt;setting-&gt;text editor中找到Eol配置的地方,设置为\\n即可.\n    详细情况见 https://github.com/AlanWalk/markdown-toc/issues/65\n</code></pre>\n<p>4.vscode 1.30 版本在 file-&gt;preferences-&gt;setting 下找不到打开 setting.json 文件的入口了。如下图，可以在系统路径下找到该文件编辑即可.</p>\n<pre><code>    文件路径\n    Windows: %APPDATA%\\Code\\User\\settings.json\n    macOS: $HOME/Library/Application Support/Code/User/settings.json\n    Linux: $HOME/.config/Code/User/settings.json\n</code></pre>\n<p><img src=\"/images/vscode.1.30.png\"></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/vscode.1.30.png","popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:20:51 GMT+0800 (China Standard Time)","title":"vscode 配置前端 vue 开发环境","path":"2018/12/13/vscode配置前端vue开发环境/","eyeCatchImage":"/images/vscode.1.30.png","excerpt":"vscode配置前端vue开发环境","date":{"_isAMomentObject":true,"_i":"2018-12-13T06:05:39.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-12-13T06:05:39.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["vscode"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":401},{"title":"基于 vue 组件实现 web 端页面调用摄像头拍照","date":"2019-01-17T02:25:11.000Z","description":"基于vue组件化方式实现PC web端页面调用摄像头拍照功能,测试是在chrome浏览器的环境下.","_content":"\n    摘要:\n      基于vue组件化方式实现PC web端页面调用摄像头拍照功能,测试是在chrome浏览器的环境下.\n\n1.封装TakePhoto 组件,组件里面暴露出始化摄像头,拍照并且返回拍照后图片的base64码的方法\n\nTakePhoto 组件的全部代码如下:\n\n\n```html\n<template>\n  <div class=\"wrapper\">\n    <video\n      ref=\"video\"\n      :width=\"width\"\n      :height=\"height\"\n      autoplay\n      style=\"width= 100%; height=100%; object-fit: fill\"\n    ></video>\n    <canvas ref=\"canvas\" width=\"300\" height=\"400\" v-show=\"taked\"></canvas>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'TakePhoto',\n  props: {\n    width: {\n      default: 300 // 不传默认300\n    },\n    height: {\n      default: 400 // 不传默认400\n    }\n  },\n  data() {\n    return {\n      video: null,\n      track: '',\n      taked: false\n    }\n  },\n  methods: {\n    init(call) {\n      this.taked = false\n      this.video = this.$refs.video\n      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia\n      if (navigator.getUserMedia) {\n        navigator.getUserMedia({ video: true },\n          (stream) => {\n            this.track = stream.getTracks()[0]  // 通过这个关闭摄像头\n            try {\n              this.video.src = window.URL.createObjectURL(stream) // chrome版本<=70\n            } catch (e) {\n              this.video.srcObject = stream // chrome版本>70\n            }\n            this.video.onloadedmetadata = (e) => {\n              console.log(e)\n              this.video.play()\n              call(true)\n            }\n          }, (err) => {\n            console.log(err)\n            call(false)\n          }\n        )\n      } else {\n        call(false)\n      }\n    },\n    takePhoto(call) {\n      let canvas = this.$refs.canvas\n      let context2D = canvas.getContext('2d')\n      context2D.fillStyle = '#ffffff'\n      context2D.fillRect(0, 0, this.width, this.height)\n      context2D.drawImage(this.video, 0, 0, this.width, this.height)\n      let image_code = canvas.toDataURL('image/png')//图片的base64\n      this.taked = true\n      call(true, image_code)\n      if (null != this.track) {\n        this.track.stop()//关闭摄像头\n      }\n    }\n  },\n  destroyed() {\n    if (null != this.track) {\n      this.track.stop()//关闭摄像头\n    }\n  }\n}\n</script>\n<style scoped>\ncanvas {\nposition: absolute;\nleft: 0;\ntop: 0;\nz-index: 1000;\n}\n.wrapper {\nposition: relative;\n}\n</style>\n```\n\n    说明: 摄像区域的宽高由外部传入,不传采用默认的值.init()初始化摄像头,takePhoto()进行拍照操作\n\n2.调用TakePhoto组件里面的方法进行拍照\n\n调用TakePhoto组件的关键代码如下:\n\n```html\n<div>\n  <TakePhoto class=\"photo\" ref=\"photo\"></TakePhoto>\n  <div class=\"takePhoto-btn\" @click=\"handleTakePhoto\" {{statusMsg}}</div>\n</div>\n```\n\n```js\nhandleTakePhoto() {\n  if (this.status === 1) { // 初始化摄像头\n    this.statusMsg = '查找设备中...'\n    this.$refs.photo.init((res) => {\n      if (res) {\n        this.status = 2\n        this.statusMsg = '拍照'\n      } else {\n        alert('未发现设备')\n      }\n    }) // 初始化摄像头\n  } else if (this.status === 2) { // 拍照\n    this.$refs.photo.takePhoto((res, img) => {\n      if (res) {\n        this.status = 3\n        console.log(img)\n        this.statusMsg = '重新拍'\n      }\n    })\n  } else if (this.status === 3) { // 重新拍\n    this.$refs.photo.init((res) => {\n      if (res) {\n        this.status = 2\n        this.statusMsg = '拍照'\n      } else {\n        alert('未发现设备')\n      }\n    }) // 初始化摄像头\n  }\n}\n```\n\n    说明:组件中定义statusMsg和status两个变量,statusMsg主要是改变整个流程中状态信息的提示,status是对应的状态码.\n\n3.实际效果图\n\n![](/images/photo.gif)","source":"_posts/基于vue组件实现web端页面调用摄像头拍照.md","raw":"---\ntitle: 基于vue组件实现web端页面调用摄像头拍照\ndate: 2019-01-17 10:25:11\ndescription: 基于vue组件化方式实现PC web端页面调用摄像头拍照功能,测试是在chrome浏览器的环境下.\ntags: \n  - vue\n  - web\n---\n\n    摘要:\n      基于vue组件化方式实现PC web端页面调用摄像头拍照功能,测试是在chrome浏览器的环境下.\n\n1.封装TakePhoto 组件,组件里面暴露出始化摄像头,拍照并且返回拍照后图片的base64码的方法\n\nTakePhoto 组件的全部代码如下:\n\n\n```html\n<template>\n  <div class=\"wrapper\">\n    <video\n      ref=\"video\"\n      :width=\"width\"\n      :height=\"height\"\n      autoplay\n      style=\"width= 100%; height=100%; object-fit: fill\"\n    ></video>\n    <canvas ref=\"canvas\" width=\"300\" height=\"400\" v-show=\"taked\"></canvas>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'TakePhoto',\n  props: {\n    width: {\n      default: 300 // 不传默认300\n    },\n    height: {\n      default: 400 // 不传默认400\n    }\n  },\n  data() {\n    return {\n      video: null,\n      track: '',\n      taked: false\n    }\n  },\n  methods: {\n    init(call) {\n      this.taked = false\n      this.video = this.$refs.video\n      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia\n      if (navigator.getUserMedia) {\n        navigator.getUserMedia({ video: true },\n          (stream) => {\n            this.track = stream.getTracks()[0]  // 通过这个关闭摄像头\n            try {\n              this.video.src = window.URL.createObjectURL(stream) // chrome版本<=70\n            } catch (e) {\n              this.video.srcObject = stream // chrome版本>70\n            }\n            this.video.onloadedmetadata = (e) => {\n              console.log(e)\n              this.video.play()\n              call(true)\n            }\n          }, (err) => {\n            console.log(err)\n            call(false)\n          }\n        )\n      } else {\n        call(false)\n      }\n    },\n    takePhoto(call) {\n      let canvas = this.$refs.canvas\n      let context2D = canvas.getContext('2d')\n      context2D.fillStyle = '#ffffff'\n      context2D.fillRect(0, 0, this.width, this.height)\n      context2D.drawImage(this.video, 0, 0, this.width, this.height)\n      let image_code = canvas.toDataURL('image/png')//图片的base64\n      this.taked = true\n      call(true, image_code)\n      if (null != this.track) {\n        this.track.stop()//关闭摄像头\n      }\n    }\n  },\n  destroyed() {\n    if (null != this.track) {\n      this.track.stop()//关闭摄像头\n    }\n  }\n}\n</script>\n<style scoped>\ncanvas {\nposition: absolute;\nleft: 0;\ntop: 0;\nz-index: 1000;\n}\n.wrapper {\nposition: relative;\n}\n</style>\n```\n\n    说明: 摄像区域的宽高由外部传入,不传采用默认的值.init()初始化摄像头,takePhoto()进行拍照操作\n\n2.调用TakePhoto组件里面的方法进行拍照\n\n调用TakePhoto组件的关键代码如下:\n\n```html\n<div>\n  <TakePhoto class=\"photo\" ref=\"photo\"></TakePhoto>\n  <div class=\"takePhoto-btn\" @click=\"handleTakePhoto\" {{statusMsg}}</div>\n</div>\n```\n\n```js\nhandleTakePhoto() {\n  if (this.status === 1) { // 初始化摄像头\n    this.statusMsg = '查找设备中...'\n    this.$refs.photo.init((res) => {\n      if (res) {\n        this.status = 2\n        this.statusMsg = '拍照'\n      } else {\n        alert('未发现设备')\n      }\n    }) // 初始化摄像头\n  } else if (this.status === 2) { // 拍照\n    this.$refs.photo.takePhoto((res, img) => {\n      if (res) {\n        this.status = 3\n        console.log(img)\n        this.statusMsg = '重新拍'\n      }\n    })\n  } else if (this.status === 3) { // 重新拍\n    this.$refs.photo.init((res) => {\n      if (res) {\n        this.status = 2\n        this.statusMsg = '拍照'\n      } else {\n        alert('未发现设备')\n      }\n    }) // 初始化摄像头\n  }\n}\n```\n\n    说明:组件中定义statusMsg和status两个变量,statusMsg主要是改变整个流程中状态信息的提示,status是对应的状态码.\n\n3.实际效果图\n\n![](/images/photo.gif)","slug":"基于vue组件实现web端页面调用摄像头拍照","published":1,"updated":"2025-04-24T07:49:27.371Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745j0002rd8gk39wfdxy6","content":"<pre><code>摘要:\n  基于vue组件化方式实现PC web端页面调用摄像头拍照功能,测试是在chrome浏览器的环境下.\n</code></pre>\n<p>1. 封装 TakePhoto 组件，组件里面暴露出始化摄像头，拍照并且返回拍照后图片的 base64 码的方法</p>\n<p>TakePhoto 组件的全部代码如下:</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span>\n      <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>video<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">:width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">:height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>height<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">autoplay</span>\n      <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\">width= 100%<span class=\"token punctuation\">;</span> height=100%<span class=\"token punctuation\">;</span> <span class=\"token property\">object-fit</span><span class=\"token punctuation\">:</span> fill</span><span class=\"token punctuation\">\"</span></span></span>\n    <span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>canvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>300<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>400<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-show</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>taked<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'TakePhoto'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token number\">300</span> <span class=\"token comment\">// 不传默认300</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token number\">400</span> <span class=\"token comment\">// 不传默认400</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">track</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">taked</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">call</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>taked <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>video\n      navigator<span class=\"token punctuation\">.</span>getUserMedia <span class=\"token operator\">=</span> navigator<span class=\"token punctuation\">.</span>getUserMedia <span class=\"token operator\">||</span> navigator<span class=\"token punctuation\">.</span>webkitGetUserMedia <span class=\"token operator\">||</span> navigator<span class=\"token punctuation\">.</span>mozGetUserMedia\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>getUserMedia<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        navigator<span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">(</span><span class=\"token parameter\">stream</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>track <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">.</span><span class=\"token function\">getTracks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">// 通过这个关闭摄像头</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span> <span class=\"token comment\">// chrome版本&lt;=70</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span>srcObject <span class=\"token operator\">=</span> stream <span class=\"token comment\">// chrome版本&gt;70</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onloadedmetadata</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n              console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n              <span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n            <span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">takePhoto</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">call</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> canvas <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>canvas\n      <span class=\"token keyword\">let</span> context2D <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span>\n      context2D<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#ffffff'</span>\n      context2D<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span>\n      context2D<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">let</span> image_code <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">toDataURL</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image/png'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//图片的base64</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>taked <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n      <span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> image_code<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>track<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>track<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//关闭摄像头</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">destroyed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>track<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>track<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//关闭摄像头</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">scoped</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n<span class=\"token selector\">canvas</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n<span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> 1000<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.wrapper</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre><code>说明: 摄像区域的宽高由外部传入,不传采用默认的值.init()初始化摄像头,takePhoto()进行拍照操作\n</code></pre>\n<p>2. 调用 TakePhoto 组件里面的方法进行拍照</p>\n<p>调用 TakePhoto 组件的关键代码如下:</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TakePhoto</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>photo<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>photo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>TakePhoto</span><span class=\"token punctuation\">&gt;</span></span>\n  &lt;div class=\"takePhoto-btn\" @click=\"handleTakePhoto\" {{statusMsg}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">handleTakePhoto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 初始化摄像头</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>statusMsg <span class=\"token operator\">=</span> <span class=\"token string\">'查找设备中...'</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>photo<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>statusMsg <span class=\"token operator\">=</span> <span class=\"token string\">'拍照'</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'未发现设备'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 初始化摄像头</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 拍照</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>photo<span class=\"token punctuation\">.</span><span class=\"token function\">takePhoto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res<span class=\"token punctuation\">,</span> img</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>statusMsg <span class=\"token operator\">=</span> <span class=\"token string\">'重新拍'</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 重新拍</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>photo<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>statusMsg <span class=\"token operator\">=</span> <span class=\"token string\">'拍照'</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'未发现设备'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 初始化摄像头</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre><code>说明:组件中定义statusMsg和status两个变量,statusMsg主要是改变整个流程中状态信息的提示,status是对应的状态码.\n</code></pre>\n<p>3. 实际效果图</p>\n<p><img src=\"/images/photo.gif\"></p>\n","excerpt":"","more":"<pre><code>摘要:\n  基于vue组件化方式实现PC web端页面调用摄像头拍照功能,测试是在chrome浏览器的环境下.\n</code></pre>\n<p>1. 封装 TakePhoto 组件，组件里面暴露出始化摄像头，拍照并且返回拍照后图片的 base64 码的方法</p>\n<p>TakePhoto 组件的全部代码如下:</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span>\n      <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>video<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">:width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">:height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>height<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">autoplay</span>\n      <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\">width= 100%<span class=\"token punctuation\">;</span> height=100%<span class=\"token punctuation\">;</span> <span class=\"token property\">object-fit</span><span class=\"token punctuation\">:</span> fill</span><span class=\"token punctuation\">\"</span></span></span>\n    <span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>canvas<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>300<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>400<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-show</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>taked<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'TakePhoto'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token number\">300</span> <span class=\"token comment\">// 不传默认300</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token number\">400</span> <span class=\"token comment\">// 不传默认400</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">track</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">taked</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">call</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>taked <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>video\n      navigator<span class=\"token punctuation\">.</span>getUserMedia <span class=\"token operator\">=</span> navigator<span class=\"token punctuation\">.</span>getUserMedia <span class=\"token operator\">||</span> navigator<span class=\"token punctuation\">.</span>webkitGetUserMedia <span class=\"token operator\">||</span> navigator<span class=\"token punctuation\">.</span>mozGetUserMedia\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>getUserMedia<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        navigator<span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">(</span><span class=\"token parameter\">stream</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>track <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">.</span><span class=\"token function\">getTracks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">// 通过这个关闭摄像头</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span> <span class=\"token comment\">// chrome版本&lt;=70</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span>srcObject <span class=\"token operator\">=</span> stream <span class=\"token comment\">// chrome版本&gt;70</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onloadedmetadata</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n              console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n              <span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n            <span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">takePhoto</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">call</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> canvas <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>canvas\n      <span class=\"token keyword\">let</span> context2D <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span>\n      context2D<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> <span class=\"token string\">'#ffffff'</span>\n      context2D<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span>\n      context2D<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">let</span> image_code <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">toDataURL</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image/png'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//图片的base64</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>taked <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n      <span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> image_code<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>track<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>track<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//关闭摄像头</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">destroyed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>track<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>track<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//关闭摄像头</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">scoped</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token style\"><span class=\"token language-css\">\n<span class=\"token selector\">canvas</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n<span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> 1000<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.wrapper</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre><code>说明: 摄像区域的宽高由外部传入,不传采用默认的值.init()初始化摄像头,takePhoto()进行拍照操作\n</code></pre>\n<p>2. 调用 TakePhoto 组件里面的方法进行拍照</p>\n<p>调用 TakePhoto 组件的关键代码如下:</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TakePhoto</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>photo<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ref</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>photo<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>TakePhoto</span><span class=\"token punctuation\">&gt;</span></span>\n  &lt;div class=\"takePhoto-btn\" @click=\"handleTakePhoto\" {{statusMsg}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token function\">handleTakePhoto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 初始化摄像头</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>statusMsg <span class=\"token operator\">=</span> <span class=\"token string\">'查找设备中...'</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>photo<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>statusMsg <span class=\"token operator\">=</span> <span class=\"token string\">'拍照'</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'未发现设备'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 初始化摄像头</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 拍照</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>photo<span class=\"token punctuation\">.</span><span class=\"token function\">takePhoto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res<span class=\"token punctuation\">,</span> img</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>statusMsg <span class=\"token operator\">=</span> <span class=\"token string\">'重新拍'</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 重新拍</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>photo<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>statusMsg <span class=\"token operator\">=</span> <span class=\"token string\">'拍照'</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'未发现设备'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 初始化摄像头</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre><code>说明:组件中定义statusMsg和status两个变量,statusMsg主要是改变整个流程中状态信息的提示,status是对应的状态码.\n</code></pre>\n<p>3. 实际效果图</p>\n<p><img src=\"/images/photo.gif\"></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/photo.gif","popularPost_tmp_gaData":{"updated":"Thu Apr 24 2025 15:49:27 GMT+0800 (China Standard Time)","title":"基于 vue 组件实现 web 端页面调用摄像头拍照","path":"2019/01/17/基于vue组件实现web端页面调用摄像头拍照/","eyeCatchImage":"/images/photo.gif","excerpt":"基于vue组件化方式实现PC web端页面调用摄像头拍照功能,测试是在chrome浏览器的环境下.","date":{"_isAMomentObject":true,"_i":"2019-01-17T02:25:11.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2019-01-17T02:25:11.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["vue","web"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":192},{"title":"编译安装 nginx 添加 rtmp 模块","date":"2019-06-01T03:30:17.000Z","description":"nginx源码编译添加rtmp模块实现视频推流服务器","_content":"\n    摘要:nginx源码编译添加rtmp模块实现视频推流服务器\n    环境:deepin linux 15.10.1(基于debian9)\n\n### 安装依赖库\n\n执行命令前,最好执行一次sudo apt update更新下仓库\n\n`sudo apt install autoconf automake`\n\n`sudo apt install libpcre3 libpcre3-dev`\n\n`sudo apt install openssl`\n\n`sudo apt install libssl-dev`\n\n### 下载nginx和nginx-rtmp-module源码\n\n进入到一个目录(可以自己新建),然后clone nginx和rtmp模块的源码,地址可在github上面查找对应的仓库,然后进行clone操作(需要安装git)\n\n`git clone https://github.com/nginx/nginx.git --depth=1` // clone nginx源码,指定克隆深度depth为1即表示只克隆最近一次commit(clone时间大幅缩短)\n\n`git clone https://github.com/arut/nginx-rtmp-module.git --depth=1` // clone nginx-rtmp-module源码\n\n进入到nginx源码目录,有一个auto文件夹，里面有一个名为configure的文件.通过命令参数调用该文件,生成MakeFile\n\n`cd nginx` // 进入到nginx源码目录\n\n`./auto/configure --prefix=/opt/nginx --with-http_ssl_module --with-http_v2_module --with-http_flv_module --with-http_mp4_module --add-module=../nginx-rtmp-module/`\n\n`ls -al` // 查看当前目录(nginx)下的文件,会有一个产生的MakeFile文件\n\n### 编译和安装\n\n当前目录还是位于上一步的nginx目录\n\n`make` // 编译\n\n`sudo make install` // 安装\n\n### 查看结果\n\n`ls -l /opt/nginx/` // 查看opt目录下nginx目录的内容\n\n`sudo /opt/nginx/sbin/nginx` // 启动nginx服务,默认只能用root启动,所以加sudo\n\n`sudo chmod u+s /opt/nginx/sbin/nginx` // 为nginx文件加上setuid标志.(setuid只对文件有效).设置后可以通过普通用户就可以启动\n\n\n* 关于chmod扩展:如果是一个可执行文件, 那么在执行时, 一般该文件只拥有调用该文件的用户具有的权限. 而setuid, setgid 可以来改变这种设置:\n\n  setuid: 设置使文件在执行阶段具有文件所有者的权限\n  \n  setgid: 该权限只对目录有效. 目录被设置该位后, 任何用户在此目录下创建的文件都具有和该目录所属的组相同的组.\n  \n  sticky bit: 该位可以理解为防删除位. 一个文件是否可以被某用户删除, 主要取决于该文件所属的组是否对该用户具有写权限. 如果没有写权限, 则这个目录下的所有文件都不能被删除, 同时也不能添加新的文件. 如果希望用户能够添加文件但同时不能删除文件, 则可以对文件使用sticky bit位. 设置该位后, 就算用户对目录具有写权限, 也不能删除该文件,该权限只对目录有效.\n\n  具体使用如下\n\n  chmod u+s temp — 为temp文件加上setuid标志. (setuid 只对文件有效)\n  \n  chmod g+s tempdir — 为tempdir目录加上setgid标志 (setgid 只对目录有效)\n  \n  chmod o+t temp — 为temp文件加上sticky标志 (sticky只对文件有效) *\n\n\n浏览器打开localhost,正常就能打开nginx默认的首页面\n\n### nginx 推流配置\n\n`sudo vim /opt/nginx/conf/nginx.conf`\n\n    rtmp {\n      server {\n          listen 1935;\n          application rtmplive_demo {\n              live on;\n              max_connections 1024;\n          }\n          application hlsvideo {\n              live on;\n              hls on;\n              hls_path /home/bz/Desktop/video/hlsvideo; # 推流存放文件夹,自定义\n              hls_fragment 1s;\n          }\n      }\n    }\n\n    location ^~ /hlsvideo {\n      types {\n        application/vnd.apple.mpegurl    m3u8;\n        video/mp2t ts;\n      }\n      root /home/bz/Desktop/video; # 此处不能写/home/bz/Desktop/video/hlsvideo,因为路径中带了一层hlsvideo了,如果写上hlsvideo会导致读取m3u8文件404\n      add_header Cache-Control    no-cache;\n    }\n\n`sudo /opt/nginx/sbin/nginx -t` // 测试配置文件是否ok\n\n`sudo /opt/nginx/sbin/nginx -s reload`\n\n#### 测试rtmp推流\n\n`ffmpeg -re -i ./龙珠超.布罗利.mp4 -vcodec libx264 -vprofile baseline -acodec aac -ar 44100 -strict -2 -ac 1 -f flv -s 1280x720 -q 10 rtmp://192.168.100.31:1935/rtmplive_demo/longzhuchao`\n\n    注:rtmp://192.168.100.31:1935/rtmplive_demo/longzhuchao rtmp流地址,其中rtmplive_demo必须和nginx.conf中\n    application中的rtmplive_demo名称必须一致,否则导致推流不成功\n\n打开VLC Media Player测试\n\n在工具栏\"媒体->打开网络串流\"然后输入rtmp://192.168.100.31:1935/rtmplive_demo/longzhuchao点击确定即可进行直播预览转换后的rtmp视频流.效果如图\n\n![](/images/push_rtmp_res.png)\n\n\n#### 测试HLS推流\n\n`ffmpeg -re -i ./龙珠超.布罗利.mp4 -vcodec libx264 -vprofile baseline -acodec aac -ar 44100 -strict -2 -ac 1 -f flv -s 1280x720 -q 10 rtmp://192.168.100.31:1935/hlsvideo/longzhuchao`\n\n    注:rtmp://192.168.100.31:1935/hlsvideo/longzhuchao,其中hlsvideo必须和nginx.conf中\n    application中hlsvideo名称必须一致,否则导致推流不成功\n\n打开VLC Media Player测试\n\nHLS测试地址是http协议的.访问路径是nginx中http节点下server节点配置的.此处是http://192.168.100.31/hlsvideo/longzhuchao.m3u8\n\n在工具栏\"媒体->打开网络串流\"然后输入http://192.168.100.31/hlsvideo/longzhuchao.m3u8点击确定即可进行直播预览转换后的rtmp视频流.效果如图\n\n![](/images/m3u8-res.png)","source":"_posts/编译安装nginx添加rtmp模块.md","raw":"---\ntitle: 编译安装nginx添加rtmp模块\ndate: 2019-06-01 11:30:17\ndescription: nginx源码编译添加rtmp模块实现视频推流服务器\ntags:\n  - nginx\n  - rtmp\n---\n\n    摘要:nginx源码编译添加rtmp模块实现视频推流服务器\n    环境:deepin linux 15.10.1(基于debian9)\n\n### 安装依赖库\n\n执行命令前,最好执行一次sudo apt update更新下仓库\n\n`sudo apt install autoconf automake`\n\n`sudo apt install libpcre3 libpcre3-dev`\n\n`sudo apt install openssl`\n\n`sudo apt install libssl-dev`\n\n### 下载nginx和nginx-rtmp-module源码\n\n进入到一个目录(可以自己新建),然后clone nginx和rtmp模块的源码,地址可在github上面查找对应的仓库,然后进行clone操作(需要安装git)\n\n`git clone https://github.com/nginx/nginx.git --depth=1` // clone nginx源码,指定克隆深度depth为1即表示只克隆最近一次commit(clone时间大幅缩短)\n\n`git clone https://github.com/arut/nginx-rtmp-module.git --depth=1` // clone nginx-rtmp-module源码\n\n进入到nginx源码目录,有一个auto文件夹，里面有一个名为configure的文件.通过命令参数调用该文件,生成MakeFile\n\n`cd nginx` // 进入到nginx源码目录\n\n`./auto/configure --prefix=/opt/nginx --with-http_ssl_module --with-http_v2_module --with-http_flv_module --with-http_mp4_module --add-module=../nginx-rtmp-module/`\n\n`ls -al` // 查看当前目录(nginx)下的文件,会有一个产生的MakeFile文件\n\n### 编译和安装\n\n当前目录还是位于上一步的nginx目录\n\n`make` // 编译\n\n`sudo make install` // 安装\n\n### 查看结果\n\n`ls -l /opt/nginx/` // 查看opt目录下nginx目录的内容\n\n`sudo /opt/nginx/sbin/nginx` // 启动nginx服务,默认只能用root启动,所以加sudo\n\n`sudo chmod u+s /opt/nginx/sbin/nginx` // 为nginx文件加上setuid标志.(setuid只对文件有效).设置后可以通过普通用户就可以启动\n\n\n* 关于chmod扩展:如果是一个可执行文件, 那么在执行时, 一般该文件只拥有调用该文件的用户具有的权限. 而setuid, setgid 可以来改变这种设置:\n\n  setuid: 设置使文件在执行阶段具有文件所有者的权限\n  \n  setgid: 该权限只对目录有效. 目录被设置该位后, 任何用户在此目录下创建的文件都具有和该目录所属的组相同的组.\n  \n  sticky bit: 该位可以理解为防删除位. 一个文件是否可以被某用户删除, 主要取决于该文件所属的组是否对该用户具有写权限. 如果没有写权限, 则这个目录下的所有文件都不能被删除, 同时也不能添加新的文件. 如果希望用户能够添加文件但同时不能删除文件, 则可以对文件使用sticky bit位. 设置该位后, 就算用户对目录具有写权限, 也不能删除该文件,该权限只对目录有效.\n\n  具体使用如下\n\n  chmod u+s temp — 为temp文件加上setuid标志. (setuid 只对文件有效)\n  \n  chmod g+s tempdir — 为tempdir目录加上setgid标志 (setgid 只对目录有效)\n  \n  chmod o+t temp — 为temp文件加上sticky标志 (sticky只对文件有效) *\n\n\n浏览器打开localhost,正常就能打开nginx默认的首页面\n\n### nginx 推流配置\n\n`sudo vim /opt/nginx/conf/nginx.conf`\n\n    rtmp {\n      server {\n          listen 1935;\n          application rtmplive_demo {\n              live on;\n              max_connections 1024;\n          }\n          application hlsvideo {\n              live on;\n              hls on;\n              hls_path /home/bz/Desktop/video/hlsvideo; # 推流存放文件夹,自定义\n              hls_fragment 1s;\n          }\n      }\n    }\n\n    location ^~ /hlsvideo {\n      types {\n        application/vnd.apple.mpegurl    m3u8;\n        video/mp2t ts;\n      }\n      root /home/bz/Desktop/video; # 此处不能写/home/bz/Desktop/video/hlsvideo,因为路径中带了一层hlsvideo了,如果写上hlsvideo会导致读取m3u8文件404\n      add_header Cache-Control    no-cache;\n    }\n\n`sudo /opt/nginx/sbin/nginx -t` // 测试配置文件是否ok\n\n`sudo /opt/nginx/sbin/nginx -s reload`\n\n#### 测试rtmp推流\n\n`ffmpeg -re -i ./龙珠超.布罗利.mp4 -vcodec libx264 -vprofile baseline -acodec aac -ar 44100 -strict -2 -ac 1 -f flv -s 1280x720 -q 10 rtmp://192.168.100.31:1935/rtmplive_demo/longzhuchao`\n\n    注:rtmp://192.168.100.31:1935/rtmplive_demo/longzhuchao rtmp流地址,其中rtmplive_demo必须和nginx.conf中\n    application中的rtmplive_demo名称必须一致,否则导致推流不成功\n\n打开VLC Media Player测试\n\n在工具栏\"媒体->打开网络串流\"然后输入rtmp://192.168.100.31:1935/rtmplive_demo/longzhuchao点击确定即可进行直播预览转换后的rtmp视频流.效果如图\n\n![](/images/push_rtmp_res.png)\n\n\n#### 测试HLS推流\n\n`ffmpeg -re -i ./龙珠超.布罗利.mp4 -vcodec libx264 -vprofile baseline -acodec aac -ar 44100 -strict -2 -ac 1 -f flv -s 1280x720 -q 10 rtmp://192.168.100.31:1935/hlsvideo/longzhuchao`\n\n    注:rtmp://192.168.100.31:1935/hlsvideo/longzhuchao,其中hlsvideo必须和nginx.conf中\n    application中hlsvideo名称必须一致,否则导致推流不成功\n\n打开VLC Media Player测试\n\nHLS测试地址是http协议的.访问路径是nginx中http节点下server节点配置的.此处是http://192.168.100.31/hlsvideo/longzhuchao.m3u8\n\n在工具栏\"媒体->打开网络串流\"然后输入http://192.168.100.31/hlsvideo/longzhuchao.m3u8点击确定即可进行直播预览转换后的rtmp视频流.效果如图\n\n![](/images/m3u8-res.png)","slug":"编译安装nginx添加rtmp模块","published":1,"updated":"2025-04-22T08:21:26.595Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745j1002sd8gk3868gy6n","content":"<pre><code>摘要:nginx源码编译添加rtmp模块实现视频推流服务器\n环境:deepin linux 15.10.1(基于debian9)\n</code></pre>\n<h3 id=\"安装依赖库\"><a href=\"#安装依赖库\" class=\"headerlink\" title=\"安装依赖库\"></a>安装依赖库</h3><p>执行命令前，最好执行一次 sudo apt update 更新下仓库</p>\n<p><code>sudo apt install autoconf automake</code></p>\n<p><code>sudo apt install libpcre3 libpcre3-dev</code></p>\n<p><code>sudo apt install openssl</code></p>\n<p><code>sudo apt install libssl-dev</code></p>\n<h3 id=\"下载nginx和nginx-rtmp-module源码\"><a href=\"#下载nginx和nginx-rtmp-module源码\" class=\"headerlink\" title=\"下载nginx和nginx-rtmp-module源码\"></a>下载 nginx 和 nginx-rtmp-module 源码</h3><p>进入到一个目录 (可以自己新建), 然后 clone nginx 和 rtmp 模块的源码，地址可在 github 上面查找对应的仓库，然后进行 clone 操作 (需要安装 git)</p>\n<p><code>git clone https://github.com/nginx/nginx.git --depth=1</code> //clone nginx 源码，指定克隆深度 depth 为 1 即表示只克隆最近一次 commit (clone 时间大幅缩短)</p>\n<p><code>git clone https://github.com/arut/nginx-rtmp-module.git --depth=1</code> //clone nginx-rtmp-module 源码</p>\n<p>进入到 nginx 源码目录，有一个 auto 文件夹，里面有一个名为 configure 的文件。通过命令参数调用该文件，生成 MakeFile</p>\n<p><code>cd nginx</code> // 进入到 nginx 源码目录</p>\n<p><code>./auto/configure --prefix=/opt/nginx --with-http_ssl_module --with-http_v2_module --with-http_flv_module --with-http_mp4_module --add-module=../nginx-rtmp-module/</code></p>\n<p><code>ls -al</code> // 查看当前目录 (nginx) 下的文件，会有一个产生的 MakeFile 文件</p>\n<h3 id=\"编译和安装\"><a href=\"#编译和安装\" class=\"headerlink\" title=\"编译和安装\"></a>编译和安装</h3><p>当前目录还是位于上一步的 nginx 目录</p>\n<p><code>make</code> // 编译</p>\n<p><code>sudo make install</code> // 安装</p>\n<h3 id=\"查看结果\"><a href=\"#查看结果\" class=\"headerlink\" title=\"查看结果\"></a>查看结果</h3><p><code>ls -l /opt/nginx/</code> // 查看 opt 目录下 nginx 目录的内容</p>\n<p><code>sudo /opt/nginx/sbin/nginx</code> // 启动 nginx 服务，默认只能用 root 启动，所以加 sudo</p>\n<p><code>sudo chmod u+s /opt/nginx/sbin/nginx</code> // 为 nginx 文件加上 setuid 标志.(setuid 只对文件有效). 设置后可以通过普通用户就可以启动</p>\n<ul>\n<li><p>关于 chmod 扩展：如果是一个可执行文件，那么在执行时，一般该文件只拥有调用该文件的用户具有的权限。而 setuid, setgid 可以来改变这种设置:</p>\n<p>setuid: 设置使文件在执行阶段具有文件所有者的权限</p>\n<p>setgid: 该权限只对目录有效。目录被设置该位后，任何用户在此目录下创建的文件都具有和该目录所属的组相同的组.</p>\n<p>sticky bit: 该位可以理解为防删除位。一个文件是否可以被某用户删除，主要取决于该文件所属的组是否对该用户具有写权限。如果没有写权限，则这个目录下的所有文件都不能被删除，同时也不能添加新的文件。如果希望用户能够添加文件但同时不能删除文件，则可以对文件使用 sticky bit 位。设置该位后，就算用户对目录具有写权限，也不能删除该文件，该权限只对目录有效.</p>\n<p>具体使用如下</p>\n<p>chmod u+s temp — 为 temp 文件加上 setuid 标志. (setuid 只对文件有效)</p>\n<p>chmod g+s tempdir — 为 tempdir 目录加上 setgid 标志 (setgid 只对目录有效)</p>\n<p>chmod o+t temp — 为 temp 文件加上 sticky 标志 (sticky 只对文件有效) *</p>\n</li>\n</ul>\n<p>浏览器打开 localhost, 正常就能打开 nginx 默认的首页面</p>\n<h3 id=\"nginx-推流配置\"><a href=\"#nginx-推流配置\" class=\"headerlink\" title=\"nginx 推流配置\"></a>nginx 推流配置</h3><p><code>sudo vim /opt/nginx/conf/nginx.conf</code></p>\n<pre><code>rtmp {\n  server {\n      listen 1935;\n      application rtmplive_demo {\n          live on;\n          max_connections 1024;\n      }\n      application hlsvideo {\n          live on;\n          hls on;\n          hls_path /home/bz/Desktop/video/hlsvideo; # 推流存放文件夹,自定义\n          hls_fragment 1s;\n      }\n  }\n}\n\nlocation ^~ /hlsvideo {\n  types {\n    application/vnd.apple.mpegurl    m3u8;\n    video/mp2t ts;\n  }\n  root /home/bz/Desktop/video; # 此处不能写/home/bz/Desktop/video/hlsvideo,因为路径中带了一层hlsvideo了,如果写上hlsvideo会导致读取m3u8文件404\n  add_header Cache-Control    no-cache;\n}\n</code></pre>\n<p><code>sudo /opt/nginx/sbin/nginx -t</code> // 测试配置文件是否 ok</p>\n<p><code>sudo /opt/nginx/sbin/nginx -s reload</code></p>\n<h4 id=\"测试rtmp推流\"><a href=\"#测试rtmp推流\" class=\"headerlink\" title=\"测试rtmp推流\"></a>测试 rtmp 推流</h4><p><code>ffmpeg -re -i ./龙珠超.布罗利.mp4 -vcodec libx264 -vprofile baseline -acodec aac -ar 44100 -strict -2 -ac 1 -f flv -s 1280x720 -q 10 rtmp://192.168.100.31:1935/rtmplive_demo/longzhuchao</code></p>\n<pre><code>注:rtmp://192.168.100.31:1935/rtmplive_demo/longzhuchao rtmp流地址,其中rtmplive_demo必须和nginx.conf中\napplication中的rtmplive_demo名称必须一致,否则导致推流不成功\n</code></pre>\n<p>打开 VLC Media Player 测试</p>\n<p>在工具栏” 媒体 -&gt; 打开网络串流” 然后输入 rtmp://192.168.100.31:1935/rtmplive_demo/longzhuchao 点击确定即可进行直播预览转换后的 rtmp 视频流。效果如图</p>\n<p><img src=\"/images/push_rtmp_res.png\"></p>\n<h4 id=\"测试HLS推流\"><a href=\"#测试HLS推流\" class=\"headerlink\" title=\"测试HLS推流\"></a>测试 HLS 推流</h4><p><code>ffmpeg -re -i ./龙珠超.布罗利.mp4 -vcodec libx264 -vprofile baseline -acodec aac -ar 44100 -strict -2 -ac 1 -f flv -s 1280x720 -q 10 rtmp://192.168.100.31:1935/hlsvideo/longzhuchao</code></p>\n<pre><code>注:rtmp://192.168.100.31:1935/hlsvideo/longzhuchao,其中hlsvideo必须和nginx.conf中\napplication中hlsvideo名称必须一致,否则导致推流不成功\n</code></pre>\n<p>打开 VLC Media Player 测试</p>\n<p>HLS 测试地址是 http 协议的。访问路径是 nginx 中 http 节点下 server 节点配置的。此处是 <a href=\"http://192.168.100.31/hlsvideo/longzhuchao.m3u8\">http://192.168.100.31/hlsvideo/longzhuchao.m3u8</a></p>\n<p>在工具栏” 媒体 -&gt; 打开网络串流” 然后输入 <a href=\"http://192.168.100.31/hlsvideo/longzhuchao.m3u8%E7%82%B9%E5%87%BB%E7%A1%AE%E5%AE%9A%E5%8D%B3%E5%8F%AF%E8%BF%9B%E8%A1%8C%E7%9B%B4%E6%92%AD%E9%A2%84%E8%A7%88%E8%BD%AC%E6%8D%A2%E5%90%8E%E7%9A%84rtmp%E8%A7%86%E9%A2%91%E6%B5%81.%E6%95%88%E6%9E%9C%E5%A6%82%E5%9B%BE\">http://192.168.100.31/hlsvideo/longzhuchao.m3u8 点击确定即可进行直播预览转换后的 rtmp 视频流。效果如图</a></p>\n<p><img src=\"/images/m3u8-res.png\"></p>\n","excerpt":"","more":"<pre><code>摘要:nginx源码编译添加rtmp模块实现视频推流服务器\n环境:deepin linux 15.10.1(基于debian9)\n</code></pre>\n<h3 id=\"安装依赖库\"><a href=\"#安装依赖库\" class=\"headerlink\" title=\"安装依赖库\"></a>安装依赖库</h3><p>执行命令前，最好执行一次 sudo apt update 更新下仓库</p>\n<p><code>sudo apt install autoconf automake</code></p>\n<p><code>sudo apt install libpcre3 libpcre3-dev</code></p>\n<p><code>sudo apt install openssl</code></p>\n<p><code>sudo apt install libssl-dev</code></p>\n<h3 id=\"下载nginx和nginx-rtmp-module源码\"><a href=\"#下载nginx和nginx-rtmp-module源码\" class=\"headerlink\" title=\"下载nginx和nginx-rtmp-module源码\"></a>下载 nginx 和 nginx-rtmp-module 源码</h3><p>进入到一个目录 (可以自己新建), 然后 clone nginx 和 rtmp 模块的源码，地址可在 github 上面查找对应的仓库，然后进行 clone 操作 (需要安装 git)</p>\n<p><code>git clone https://github.com/nginx/nginx.git --depth=1</code> //clone nginx 源码，指定克隆深度 depth 为 1 即表示只克隆最近一次 commit (clone 时间大幅缩短)</p>\n<p><code>git clone https://github.com/arut/nginx-rtmp-module.git --depth=1</code> //clone nginx-rtmp-module 源码</p>\n<p>进入到 nginx 源码目录，有一个 auto 文件夹，里面有一个名为 configure 的文件。通过命令参数调用该文件，生成 MakeFile</p>\n<p><code>cd nginx</code> // 进入到 nginx 源码目录</p>\n<p><code>./auto/configure --prefix=/opt/nginx --with-http_ssl_module --with-http_v2_module --with-http_flv_module --with-http_mp4_module --add-module=../nginx-rtmp-module/</code></p>\n<p><code>ls -al</code> // 查看当前目录 (nginx) 下的文件，会有一个产生的 MakeFile 文件</p>\n<h3 id=\"编译和安装\"><a href=\"#编译和安装\" class=\"headerlink\" title=\"编译和安装\"></a>编译和安装</h3><p>当前目录还是位于上一步的 nginx 目录</p>\n<p><code>make</code> // 编译</p>\n<p><code>sudo make install</code> // 安装</p>\n<h3 id=\"查看结果\"><a href=\"#查看结果\" class=\"headerlink\" title=\"查看结果\"></a>查看结果</h3><p><code>ls -l /opt/nginx/</code> // 查看 opt 目录下 nginx 目录的内容</p>\n<p><code>sudo /opt/nginx/sbin/nginx</code> // 启动 nginx 服务，默认只能用 root 启动，所以加 sudo</p>\n<p><code>sudo chmod u+s /opt/nginx/sbin/nginx</code> // 为 nginx 文件加上 setuid 标志.(setuid 只对文件有效). 设置后可以通过普通用户就可以启动</p>\n<ul>\n<li><p>关于 chmod 扩展：如果是一个可执行文件，那么在执行时，一般该文件只拥有调用该文件的用户具有的权限。而 setuid, setgid 可以来改变这种设置:</p>\n<p>setuid: 设置使文件在执行阶段具有文件所有者的权限</p>\n<p>setgid: 该权限只对目录有效。目录被设置该位后，任何用户在此目录下创建的文件都具有和该目录所属的组相同的组.</p>\n<p>sticky bit: 该位可以理解为防删除位。一个文件是否可以被某用户删除，主要取决于该文件所属的组是否对该用户具有写权限。如果没有写权限，则这个目录下的所有文件都不能被删除，同时也不能添加新的文件。如果希望用户能够添加文件但同时不能删除文件，则可以对文件使用 sticky bit 位。设置该位后，就算用户对目录具有写权限，也不能删除该文件，该权限只对目录有效.</p>\n<p>具体使用如下</p>\n<p>chmod u+s temp — 为 temp 文件加上 setuid 标志. (setuid 只对文件有效)</p>\n<p>chmod g+s tempdir — 为 tempdir 目录加上 setgid 标志 (setgid 只对目录有效)</p>\n<p>chmod o+t temp — 为 temp 文件加上 sticky 标志 (sticky 只对文件有效) *</p>\n</li>\n</ul>\n<p>浏览器打开 localhost, 正常就能打开 nginx 默认的首页面</p>\n<h3 id=\"nginx-推流配置\"><a href=\"#nginx-推流配置\" class=\"headerlink\" title=\"nginx 推流配置\"></a>nginx 推流配置</h3><p><code>sudo vim /opt/nginx/conf/nginx.conf</code></p>\n<pre><code>rtmp {\n  server {\n      listen 1935;\n      application rtmplive_demo {\n          live on;\n          max_connections 1024;\n      }\n      application hlsvideo {\n          live on;\n          hls on;\n          hls_path /home/bz/Desktop/video/hlsvideo; # 推流存放文件夹,自定义\n          hls_fragment 1s;\n      }\n  }\n}\n\nlocation ^~ /hlsvideo {\n  types {\n    application/vnd.apple.mpegurl    m3u8;\n    video/mp2t ts;\n  }\n  root /home/bz/Desktop/video; # 此处不能写/home/bz/Desktop/video/hlsvideo,因为路径中带了一层hlsvideo了,如果写上hlsvideo会导致读取m3u8文件404\n  add_header Cache-Control    no-cache;\n}\n</code></pre>\n<p><code>sudo /opt/nginx/sbin/nginx -t</code> // 测试配置文件是否 ok</p>\n<p><code>sudo /opt/nginx/sbin/nginx -s reload</code></p>\n<h4 id=\"测试rtmp推流\"><a href=\"#测试rtmp推流\" class=\"headerlink\" title=\"测试rtmp推流\"></a>测试 rtmp 推流</h4><p><code>ffmpeg -re -i ./龙珠超.布罗利.mp4 -vcodec libx264 -vprofile baseline -acodec aac -ar 44100 -strict -2 -ac 1 -f flv -s 1280x720 -q 10 rtmp://192.168.100.31:1935/rtmplive_demo/longzhuchao</code></p>\n<pre><code>注:rtmp://192.168.100.31:1935/rtmplive_demo/longzhuchao rtmp流地址,其中rtmplive_demo必须和nginx.conf中\napplication中的rtmplive_demo名称必须一致,否则导致推流不成功\n</code></pre>\n<p>打开 VLC Media Player 测试</p>\n<p>在工具栏” 媒体 -&gt; 打开网络串流” 然后输入 rtmp://192.168.100.31:1935/rtmplive_demo/longzhuchao 点击确定即可进行直播预览转换后的 rtmp 视频流。效果如图</p>\n<p><img src=\"/images/push_rtmp_res.png\"></p>\n<h4 id=\"测试HLS推流\"><a href=\"#测试HLS推流\" class=\"headerlink\" title=\"测试HLS推流\"></a>测试 HLS 推流</h4><p><code>ffmpeg -re -i ./龙珠超.布罗利.mp4 -vcodec libx264 -vprofile baseline -acodec aac -ar 44100 -strict -2 -ac 1 -f flv -s 1280x720 -q 10 rtmp://192.168.100.31:1935/hlsvideo/longzhuchao</code></p>\n<pre><code>注:rtmp://192.168.100.31:1935/hlsvideo/longzhuchao,其中hlsvideo必须和nginx.conf中\napplication中hlsvideo名称必须一致,否则导致推流不成功\n</code></pre>\n<p>打开 VLC Media Player 测试</p>\n<p>HLS 测试地址是 http 协议的。访问路径是 nginx 中 http 节点下 server 节点配置的。此处是 <a href=\"http://192.168.100.31/hlsvideo/longzhuchao.m3u8\">http://192.168.100.31/hlsvideo/longzhuchao.m3u8</a></p>\n<p>在工具栏” 媒体 -&gt; 打开网络串流” 然后输入 <a href=\"http://192.168.100.31/hlsvideo/longzhuchao.m3u8%E7%82%B9%E5%87%BB%E7%A1%AE%E5%AE%9A%E5%8D%B3%E5%8F%AF%E8%BF%9B%E8%A1%8C%E7%9B%B4%E6%92%AD%E9%A2%84%E8%A7%88%E8%BD%AC%E6%8D%A2%E5%90%8E%E7%9A%84rtmp%E8%A7%86%E9%A2%91%E6%B5%81.%E6%95%88%E6%9E%9C%E5%A6%82%E5%9B%BE\">http://192.168.100.31/hlsvideo/longzhuchao.m3u8 点击确定即可进行直播预览转换后的 rtmp 视频流。效果如图</a></p>\n<p><img src=\"/images/m3u8-res.png\"></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/push_rtmp_res.png","popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:21:26 GMT+0800 (China Standard Time)","title":"编译安装 nginx 添加 rtmp 模块","path":"2019/06/01/编译安装nginx添加rtmp模块/","eyeCatchImage":"/images/push_rtmp_res.png","excerpt":"nginx源码编译添加rtmp模块实现视频推流服务器","date":{"_isAMomentObject":true,"_i":"2019-06-01T03:30:17.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2019-06-01T03:30:17.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["nginx","rtmp"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":1149},{"title":"使用 hexo+Next 創建和部署個人博客","date":"2025-04-24T01:57:58.000Z","description":"通過hexo生成或維護個人博客靜態網頁,更換Next主題，並deploy到github","_content":"\n## 安裝NodeJs和Git\n\n### 下载\n\n- [Node.js](https://nodejs.org/)\n- [Git](https://git-scm.com/)\n\n根據安裝界面自行安裝\n\n## 安裝hexo\n\n[Hexo官网](https://hexo.io/zh-cn/index.html)\n\n打开终端（或命令行窗口），运行以下命令来安装 Hexo (-g 為全局安裝)\n\n```bash\nnpm install hexo-cli -g\n```\n\n## hexo新建項目，或從github下載博客源碼\n\n在你选择存储博客文件的目录中，执行以下命令来创建一个新的 Hexo 项目：\n\n```bash\nhexo init blog\ncd blog\nnpm install\n```\n\n## 配置hexo\n\n编辑**根目錄**下的 _config.yml 文件，配置你的基本信息和其他相关设置\n\n具體參考：<https://hexo.io/docs/configuration>\n\n例如：\n\n```yml\n# Site\ntitle: ArHay\nsubtitle: 当赤道留住雪花，眼泪融掉细沙\ndescription: \nkeywords: ArHay\nauthor: ArHay\nlanguage: zh-CN\ntimezone: ''\n```\n\n## 創建文章\n\n使用以下命令创建新的博客文章\n\n```bash\nhexo new post \"My New Post\"\n```\n\n## 生成靜態文件\n\n在博客根目录下执行以下命令生成静态文件，文件存儲在 public 文件夾下：\n\n```bash\nhexo generate\n```\n\n或\n\n```bash\nhexo g\n```\n\n## 本地預覽\n\n```bash\nhexo server\n```\n\n或\n\n```bash\nhexo s\n```\n\n## 部署到GithubPage\n\n### 安装 hexo-deployer-git\n\n```bash\nnpm install hexo-deployer-git --save\n```\n\n参数 --save 的作用是在项目下的package.json文件记录安装过的依赖包名称。\n\n当复制项目到另外的电脑上,只需运行命令: npm i 就能自动安装项目用到的依赖包。\n\n### 编辑 _config.yml 文件\n\n配置你的博客信息、GitHub Pages 信息和其他相关设置\n\n```yml\n# Deployment\n## Docs: https://hexo.io/docs/one-command-deployment\ndeploy:\n  type: git\n  repository: https://github.com/ArHay0612/arhay0612.github.io.git\n  branch: master\n```\n\n### 部署\n\n运行以下命令将生成的静态文件部署到 GitHub Pages\n\n```bash\nhexo deploy\n```\n\n或\n\n```bash\nhexo d\n```\n\n然後根據彈窗完成登錄，即可部署完成\n\n## 訪問博客\n\n<https://ArHay0612.github.io>\n\nArHay0612是我的用戶名。請自行替換到自己的github usernames\n\n## 主題配置\n\n我用的是Next，就以Next為例\n\n參考:\n\n- [Next Github Page](https://github.com/next-theme/hexo-theme-next)\n\n- [NexT Documentation](https://theme-next.js.org/)\n\n### 安裝Next主題\n\n在博客項目根目錄下把Next主題 clone 到 themes/next 文件夾\n\n```bash\ncd hexo-site\ngit clone https://github.com/next-theme/hexo-theme-next themes/next\n```\n\n### 編輯 _config.yml 文件\n\n在**根目錄下**找到 _config.yml\n\n然後在theme配置項修改成\n\n```yml\ntheme: next\n```\n\n### Next 主題選擇\n\nnext 自帶4種類型的主題方案\n\n- Muse\n- Mist\n- Pisces\n- Gemini\n\n在 **`themes\\next\\_config.yml`** 文件下\n搜索 `Scheme Settings`\n\n然後選擇自己喜歡的主題方案\n\n```yml\n# Schemes\n# scheme: Muse\n# scheme: Mist\nscheme: Pisces\n# scheme: Gemini\n\n# Dark Mode\ndarkmode: true\n```\n\n### Next 主題配置\n\nNext 主題所有配置都在 **`themes\\next\\_config.yml`** 文件下\n\n根據需求選擇自己需要的內容，如菜單，統計，搜索，背景等……\n\n具體參考：\n\n- [Next主題設置documentation](https://theme-next.js.org/docs/theme-settings/)\n\n例如：\n\n```yml\nmenu:\n  home: / || fa fa-home #主頁\n  about: /about/ || fa fa-user #關於頁\n  tags: /tags/ || fa fa-tags  #標籤\n  #categories: /categories/ || fa fa-th\n  archives: /archives/ || fa fa-archive #歸檔\n  #schedule: /schedule/ || fa fa-calendar\n  #sitemap: /sitemap.xml || fa fa-sitemap\n  #commonweal: /404/ || fa fa-heartbeat\n```\n\n## 插件選擇\n\n### 本地搜索\n\n該功能允許用戶在網站內快速搜索文章內容，而不依賴於外部搜索服務（如 Algolia）。本地搜索的數據由 Hexo 生成，並存儲在靜態文件中，適合小型或中型博客。\n\n參考：<https://github.com/next-theme/hexo-generator-searchdb>\n\n#### 安裝\n\n```bash\nnpm install hexo-generator-searchdb --save\n```\n\n#### 配置插件\n\n在 Next 的配置文件 **`themes\\next\\_config.yml`** 中修改成以下內容：\n\n```yml\n# Local Search\n# Dependencies: https://github.com/next-theme/hexo-generator-searchdb\nlocal_search:\n  enable: true #控制是否啟用本地搜索功能\n  # 設置每篇文章中顯示的搜索結果數量。 -1 顯示所有。\n  top_n_per_article: 1\n  # 控制是否將 HTML 字符（如 &lt; 和 &gt;）轉換為可讀的文本。\n  unescape: false\n  # 控制是否在頁面加載時預加載搜索數據\n  preload: true\n```\n\n### Hexo Pangu\n\nHexo Pangu 是一個用於自動處理中英文之間空格的插件，基於 Pangu.js。它的作用是自動在中文與英文、數字、符號之間插入適當的空格，從而提升文章的可讀性，符合中文排版的最佳實踐。\n\n參考：\n\n- <https://github.com/next-theme/hexo-pangu>\n- <https://github.com/vinta/pangu.js>\n\n#### 安裝\n\n```bash\nnpm install hexo-pangu --save\n```\n\n### Hexo Word Counter\n\nHexo Word Counter 是一個用於統計文章字數和預估閱讀時間的插件。它的主要作用是為每篇文章顯示字數和閱讀時間，幫助讀者了解文章的長度和閱讀所需的時間，從而提升用戶體驗。\n\n參考：<https://github.com/next-theme/hexo-word-counter>\n\n#### 安裝\n\n```bash\nnpm install hexo-word-counter --save\n```\n\n#### 配置插件\n\n在 Next 的配置文件 **`themes\\next\\_config.yml`** 中修改成以下內容：\n\n```yml\nsymbols_count_time:\n  separated_meta: true\n  item_text_total: false\n```\n\n### oh-my-live2d\n\n是一個用於在 Hexo 博客中添加 Live2D 模型 的插件。它的作用是為網站添加一個可交互的 2D 虛擬角色，通常顯示在網站的角落，增強網站的趣味性和吸引力。（看板娘）\n\n參考：<https://github.com/next-theme/hexo-word-counter>\n\n#### 安裝\n\n```bash\nnpm install hexo-oh-my-live2d --save\n```\n\n#### 配置插件\n\n在博客根目錄的配置文件 **`.\\_config.yml`** 中修改成以下內容：\n\n```yml\nOhMyLive2d:\n  enable: true\n  CDN: https://registry.npmmirror.com/oh-my-live2d/latest/files\n  option:\n    dockedPosition: 'right' # 模型停靠位置 默认值: 'right' 可选值: 'left' | 'right'\n    menus: # 侧边栏菜单配置\n      items:  # 菜单项配置\n        - id: 'github'\n          icon: 'icon-switch'\n          title: '我的github'\n          onClick: ()=>window.open('https://github.com/ArHay0612')\n\n    mobileDisplay: true # 是否在移动端显示\n    models:\n      - path: \\live2d_models\\fll\\fll.model3.json # 模型的路径\n        mobilePosition: [-10, 23] # 移动端时模型在舞台中的位置。 默认值: [0,0] [横坐标, 纵坐标]\n        mobileScale: 0.1 # 移动端时模型的缩放比例 默认值: 0.1\n        mobileStageStyle: # 移动端时舞台的样式\n          width: 180\n          height: 166\n        motionPreloadStrategy: IDLE # 动作预加载策略 默认值: IDLE 可选值: ALL | IDLE | NONE\n        position: [-10, 35] # 模型在舞台中的位置。 默认值: [0,0] [横坐标, 纵坐标]\n        scale: 0.15 # 模型的缩放比例 默认值: 0.1\n        # showHitAreaFrames: false # 是否显示点击区域 默认值: false\n        stageStyle:\n          width: 300\n          height: 450\n    parentElement: document.body #为组件提供一个父元素，如果未指定则默认挂载到 body 中\n    primaryColor: 'var(--btn-bg)' # 主题色 支持变量\n    sayHello: false # 是否在初始化阶段打印项目信息\n    tips:\n      style:\n        width: 230\n        height: 120\n        left: calc(50% - 20px)\n        top: -100px\n      mobileStyle:\n        width: 180\n        height: 80\n        left: calc(50% - 30px)\n        top: -100px\n      idleTips:\n        interval: 10000\n        duration: 1500\n        message:\n          - 你好呀,欢迎来到ArHay的小站~\n```\n\n#### 更換模型\n\n##### 在互聯網上下載自己喜歡的live2D模型\n\n參考：\n\n- [Live2D官方示例数据集（可免费下载](https://www.live2d.com/zh-CHS/learn/sample/)\n\n- [模之屋](https://www.aplaybox.com/model/model)\n\n- [GitHub用戶Eikanya分享](https://github.com/Eikanya/Live2d-model)\n\n##### 項目引入模型\n\n在source 文件夾下，新建文件夾 `live2d_models\\`\n\n把下載下來的整個live2d資源包整個放進`live2d_models\\`文件夾中\n\n然後修改Hexo的主配置文件 `_config.yml`\n\n```yml\nmodels:\n      - path: \\live2d_models\\fll\\fll.model3.json # 模型的路径\n```\n\n此處路徑應為這個模型包下的json文件\n\n##### 預覽\n\n![live2d_demo](/images/live2d_demo.png)\n\n### 博客訪客和閱讀量統計\n\nbusuanzi（不蒜子） 是一個輕量級的網站訪問量和文章閱讀量統計工具，適合用於 Hexo 博客等靜態網站。它無需註冊或配置後端服務，通過嵌入 JavaScript 即可實現訪問量和閱讀量的統計。\n\n參考：<https://busuanzi.ibruce.info/>\n\n#### 配置插件\n\n在 Next 的配置文件 **`themes\\next\\_config.yml`** 中修改成以下內容：\n\n```yml\n# Show Views / Visitors of the website / page with busuanzi.\n# For more information: http://ibruce.info/2015/04/04/busuanzi/\nbusuanzi_count:\n  enable: true\n  total_visitors: true\n  total_visitors_icon: fa fa-user\n  total_views: true\n  total_views_icon: fa fa-eye\n  post_views: true\n  post_views_icon: far fa-eye\n```\n\n---\n>等我發掘到好玩的插件會繼續更新～\n>\n>*未完待續……*\n","source":"_posts/使用hexo創建和部署個人博客.md","raw":"---\ntitle: 使用hexo+Next創建和部署個人博客\ndate: 2025-04-24 09:57:58\ndescription: 通過hexo生成或維護個人博客靜態網頁,更換Next主題，並deploy到github\ntags: \n    - hexo \n    - nodejs\n---\n\n## 安裝NodeJs和Git\n\n### 下载\n\n- [Node.js](https://nodejs.org/)\n- [Git](https://git-scm.com/)\n\n根據安裝界面自行安裝\n\n## 安裝hexo\n\n[Hexo官网](https://hexo.io/zh-cn/index.html)\n\n打开终端（或命令行窗口），运行以下命令来安装 Hexo (-g 為全局安裝)\n\n```bash\nnpm install hexo-cli -g\n```\n\n## hexo新建項目，或從github下載博客源碼\n\n在你选择存储博客文件的目录中，执行以下命令来创建一个新的 Hexo 项目：\n\n```bash\nhexo init blog\ncd blog\nnpm install\n```\n\n## 配置hexo\n\n编辑**根目錄**下的 _config.yml 文件，配置你的基本信息和其他相关设置\n\n具體參考：<https://hexo.io/docs/configuration>\n\n例如：\n\n```yml\n# Site\ntitle: ArHay\nsubtitle: 当赤道留住雪花，眼泪融掉细沙\ndescription: \nkeywords: ArHay\nauthor: ArHay\nlanguage: zh-CN\ntimezone: ''\n```\n\n## 創建文章\n\n使用以下命令创建新的博客文章\n\n```bash\nhexo new post \"My New Post\"\n```\n\n## 生成靜態文件\n\n在博客根目录下执行以下命令生成静态文件，文件存儲在 public 文件夾下：\n\n```bash\nhexo generate\n```\n\n或\n\n```bash\nhexo g\n```\n\n## 本地預覽\n\n```bash\nhexo server\n```\n\n或\n\n```bash\nhexo s\n```\n\n## 部署到GithubPage\n\n### 安装 hexo-deployer-git\n\n```bash\nnpm install hexo-deployer-git --save\n```\n\n参数 --save 的作用是在项目下的package.json文件记录安装过的依赖包名称。\n\n当复制项目到另外的电脑上,只需运行命令: npm i 就能自动安装项目用到的依赖包。\n\n### 编辑 _config.yml 文件\n\n配置你的博客信息、GitHub Pages 信息和其他相关设置\n\n```yml\n# Deployment\n## Docs: https://hexo.io/docs/one-command-deployment\ndeploy:\n  type: git\n  repository: https://github.com/ArHay0612/arhay0612.github.io.git\n  branch: master\n```\n\n### 部署\n\n运行以下命令将生成的静态文件部署到 GitHub Pages\n\n```bash\nhexo deploy\n```\n\n或\n\n```bash\nhexo d\n```\n\n然後根據彈窗完成登錄，即可部署完成\n\n## 訪問博客\n\n<https://ArHay0612.github.io>\n\nArHay0612是我的用戶名。請自行替換到自己的github usernames\n\n## 主題配置\n\n我用的是Next，就以Next為例\n\n參考:\n\n- [Next Github Page](https://github.com/next-theme/hexo-theme-next)\n\n- [NexT Documentation](https://theme-next.js.org/)\n\n### 安裝Next主題\n\n在博客項目根目錄下把Next主題 clone 到 themes/next 文件夾\n\n```bash\ncd hexo-site\ngit clone https://github.com/next-theme/hexo-theme-next themes/next\n```\n\n### 編輯 _config.yml 文件\n\n在**根目錄下**找到 _config.yml\n\n然後在theme配置項修改成\n\n```yml\ntheme: next\n```\n\n### Next 主題選擇\n\nnext 自帶4種類型的主題方案\n\n- Muse\n- Mist\n- Pisces\n- Gemini\n\n在 **`themes\\next\\_config.yml`** 文件下\n搜索 `Scheme Settings`\n\n然後選擇自己喜歡的主題方案\n\n```yml\n# Schemes\n# scheme: Muse\n# scheme: Mist\nscheme: Pisces\n# scheme: Gemini\n\n# Dark Mode\ndarkmode: true\n```\n\n### Next 主題配置\n\nNext 主題所有配置都在 **`themes\\next\\_config.yml`** 文件下\n\n根據需求選擇自己需要的內容，如菜單，統計，搜索，背景等……\n\n具體參考：\n\n- [Next主題設置documentation](https://theme-next.js.org/docs/theme-settings/)\n\n例如：\n\n```yml\nmenu:\n  home: / || fa fa-home #主頁\n  about: /about/ || fa fa-user #關於頁\n  tags: /tags/ || fa fa-tags  #標籤\n  #categories: /categories/ || fa fa-th\n  archives: /archives/ || fa fa-archive #歸檔\n  #schedule: /schedule/ || fa fa-calendar\n  #sitemap: /sitemap.xml || fa fa-sitemap\n  #commonweal: /404/ || fa fa-heartbeat\n```\n\n## 插件選擇\n\n### 本地搜索\n\n該功能允許用戶在網站內快速搜索文章內容，而不依賴於外部搜索服務（如 Algolia）。本地搜索的數據由 Hexo 生成，並存儲在靜態文件中，適合小型或中型博客。\n\n參考：<https://github.com/next-theme/hexo-generator-searchdb>\n\n#### 安裝\n\n```bash\nnpm install hexo-generator-searchdb --save\n```\n\n#### 配置插件\n\n在 Next 的配置文件 **`themes\\next\\_config.yml`** 中修改成以下內容：\n\n```yml\n# Local Search\n# Dependencies: https://github.com/next-theme/hexo-generator-searchdb\nlocal_search:\n  enable: true #控制是否啟用本地搜索功能\n  # 設置每篇文章中顯示的搜索結果數量。 -1 顯示所有。\n  top_n_per_article: 1\n  # 控制是否將 HTML 字符（如 &lt; 和 &gt;）轉換為可讀的文本。\n  unescape: false\n  # 控制是否在頁面加載時預加載搜索數據\n  preload: true\n```\n\n### Hexo Pangu\n\nHexo Pangu 是一個用於自動處理中英文之間空格的插件，基於 Pangu.js。它的作用是自動在中文與英文、數字、符號之間插入適當的空格，從而提升文章的可讀性，符合中文排版的最佳實踐。\n\n參考：\n\n- <https://github.com/next-theme/hexo-pangu>\n- <https://github.com/vinta/pangu.js>\n\n#### 安裝\n\n```bash\nnpm install hexo-pangu --save\n```\n\n### Hexo Word Counter\n\nHexo Word Counter 是一個用於統計文章字數和預估閱讀時間的插件。它的主要作用是為每篇文章顯示字數和閱讀時間，幫助讀者了解文章的長度和閱讀所需的時間，從而提升用戶體驗。\n\n參考：<https://github.com/next-theme/hexo-word-counter>\n\n#### 安裝\n\n```bash\nnpm install hexo-word-counter --save\n```\n\n#### 配置插件\n\n在 Next 的配置文件 **`themes\\next\\_config.yml`** 中修改成以下內容：\n\n```yml\nsymbols_count_time:\n  separated_meta: true\n  item_text_total: false\n```\n\n### oh-my-live2d\n\n是一個用於在 Hexo 博客中添加 Live2D 模型 的插件。它的作用是為網站添加一個可交互的 2D 虛擬角色，通常顯示在網站的角落，增強網站的趣味性和吸引力。（看板娘）\n\n參考：<https://github.com/next-theme/hexo-word-counter>\n\n#### 安裝\n\n```bash\nnpm install hexo-oh-my-live2d --save\n```\n\n#### 配置插件\n\n在博客根目錄的配置文件 **`.\\_config.yml`** 中修改成以下內容：\n\n```yml\nOhMyLive2d:\n  enable: true\n  CDN: https://registry.npmmirror.com/oh-my-live2d/latest/files\n  option:\n    dockedPosition: 'right' # 模型停靠位置 默认值: 'right' 可选值: 'left' | 'right'\n    menus: # 侧边栏菜单配置\n      items:  # 菜单项配置\n        - id: 'github'\n          icon: 'icon-switch'\n          title: '我的github'\n          onClick: ()=>window.open('https://github.com/ArHay0612')\n\n    mobileDisplay: true # 是否在移动端显示\n    models:\n      - path: \\live2d_models\\fll\\fll.model3.json # 模型的路径\n        mobilePosition: [-10, 23] # 移动端时模型在舞台中的位置。 默认值: [0,0] [横坐标, 纵坐标]\n        mobileScale: 0.1 # 移动端时模型的缩放比例 默认值: 0.1\n        mobileStageStyle: # 移动端时舞台的样式\n          width: 180\n          height: 166\n        motionPreloadStrategy: IDLE # 动作预加载策略 默认值: IDLE 可选值: ALL | IDLE | NONE\n        position: [-10, 35] # 模型在舞台中的位置。 默认值: [0,0] [横坐标, 纵坐标]\n        scale: 0.15 # 模型的缩放比例 默认值: 0.1\n        # showHitAreaFrames: false # 是否显示点击区域 默认值: false\n        stageStyle:\n          width: 300\n          height: 450\n    parentElement: document.body #为组件提供一个父元素，如果未指定则默认挂载到 body 中\n    primaryColor: 'var(--btn-bg)' # 主题色 支持变量\n    sayHello: false # 是否在初始化阶段打印项目信息\n    tips:\n      style:\n        width: 230\n        height: 120\n        left: calc(50% - 20px)\n        top: -100px\n      mobileStyle:\n        width: 180\n        height: 80\n        left: calc(50% - 30px)\n        top: -100px\n      idleTips:\n        interval: 10000\n        duration: 1500\n        message:\n          - 你好呀,欢迎来到ArHay的小站~\n```\n\n#### 更換模型\n\n##### 在互聯網上下載自己喜歡的live2D模型\n\n參考：\n\n- [Live2D官方示例数据集（可免费下载](https://www.live2d.com/zh-CHS/learn/sample/)\n\n- [模之屋](https://www.aplaybox.com/model/model)\n\n- [GitHub用戶Eikanya分享](https://github.com/Eikanya/Live2d-model)\n\n##### 項目引入模型\n\n在source 文件夾下，新建文件夾 `live2d_models\\`\n\n把下載下來的整個live2d資源包整個放進`live2d_models\\`文件夾中\n\n然後修改Hexo的主配置文件 `_config.yml`\n\n```yml\nmodels:\n      - path: \\live2d_models\\fll\\fll.model3.json # 模型的路径\n```\n\n此處路徑應為這個模型包下的json文件\n\n##### 預覽\n\n![live2d_demo](/images/live2d_demo.png)\n\n### 博客訪客和閱讀量統計\n\nbusuanzi（不蒜子） 是一個輕量級的網站訪問量和文章閱讀量統計工具，適合用於 Hexo 博客等靜態網站。它無需註冊或配置後端服務，通過嵌入 JavaScript 即可實現訪問量和閱讀量的統計。\n\n參考：<https://busuanzi.ibruce.info/>\n\n#### 配置插件\n\n在 Next 的配置文件 **`themes\\next\\_config.yml`** 中修改成以下內容：\n\n```yml\n# Show Views / Visitors of the website / page with busuanzi.\n# For more information: http://ibruce.info/2015/04/04/busuanzi/\nbusuanzi_count:\n  enable: true\n  total_visitors: true\n  total_visitors_icon: fa fa-user\n  total_views: true\n  total_views_icon: fa fa-eye\n  post_views: true\n  post_views_icon: far fa-eye\n```\n\n---\n>等我發掘到好玩的插件會繼續更新～\n>\n>*未完待續……*\n","slug":"使用hexo創建和部署個人博客","published":1,"updated":"2025-04-25T02:47:34.241Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745j1002ud8gkhp7q7i5t","content":"<h2 id=\"安裝NodeJs和Git\"><a href=\"#安裝NodeJs和Git\" class=\"headerlink\" title=\"安裝NodeJs和Git\"></a>安裝 NodeJs 和 Git</h2><h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><ul>\n<li><a href=\"https://nodejs.org/\">Node.js</a></li>\n<li><a href=\"https://git-scm.com/\">Git</a></li>\n</ul>\n<p>根據安裝界面自行安裝</p>\n<h2 id=\"安裝hexo\"><a href=\"#安裝hexo\" class=\"headerlink\" title=\"安裝hexo\"></a>安裝 hexo</h2><p><a href=\"https://hexo.io/zh-cn/index.html\">Hexo 官网</a></p>\n<p>打开终端（或命令行窗口），运行以下命令来安装 Hexo (-g 為全局安裝)</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-cli <span class=\"token parameter variable\">-g</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"hexo新建項目，或從github下載博客源碼\"><a href=\"#hexo新建項目，或從github下載博客源碼\" class=\"headerlink\" title=\"hexo新建項目，或從github下載博客源碼\"></a>hexo 新建項目，或從 github 下載博客源碼</h2><p>在你选择存储博客文件的目录中，执行以下命令来创建一个新的 Hexo 项目：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo init blog\n<span class=\"token builtin class-name\">cd</span> blog\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"配置hexo\"><a href=\"#配置hexo\" class=\"headerlink\" title=\"配置hexo\"></a>配置 hexo</h2><p>编辑<strong>根目錄</strong>下的 _config.yml 文件，配置你的基本信息和其他相关设置</p>\n<p>具體參考：<a href=\"https://hexo.io/docs/configuration\">https://hexo.io/docs/configuration</a></p>\n<p>例如：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># Site</span>\n<span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> ArHay\n<span class=\"token key atrule\">subtitle</span><span class=\"token punctuation\">:</span> 当赤道留住雪花，眼泪融掉细沙\n<span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> \n<span class=\"token key atrule\">keywords</span><span class=\"token punctuation\">:</span> ArHay\n<span class=\"token key atrule\">author</span><span class=\"token punctuation\">:</span> ArHay\n<span class=\"token key atrule\">language</span><span class=\"token punctuation\">:</span> zh<span class=\"token punctuation\">-</span>CN\n<span class=\"token key atrule\">timezone</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"創建文章\"><a href=\"#創建文章\" class=\"headerlink\" title=\"創建文章\"></a>創建文章</h2><p>使用以下命令创建新的博客文章</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo new post <span class=\"token string\">\"My New Post\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"生成靜態文件\"><a href=\"#生成靜態文件\" class=\"headerlink\" title=\"生成靜態文件\"></a>生成靜態文件</h2><p>在博客根目录下执行以下命令生成静态文件，文件存儲在 public 文件夾下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo generate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>或</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo g<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"本地預覽\"><a href=\"#本地預覽\" class=\"headerlink\" title=\"本地預覽\"></a>本地預覽</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>或</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo s<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"部署到GithubPage\"><a href=\"#部署到GithubPage\" class=\"headerlink\" title=\"部署到GithubPage\"></a>部署到 GithubPage</h2><h3 id=\"安装-hexo-deployer-git\"><a href=\"#安装-hexo-deployer-git\" class=\"headerlink\" title=\"安装 hexo-deployer-git\"></a>安装 hexo-deployer-git</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-deployer-git <span class=\"token parameter variable\">--save</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>参数 –save 的作用是在项目下的 package.json 文件记录安装过的依赖包名称。</p>\n<p>当复制项目到另外的电脑上，只需运行命令: npm i 就能自动安装项目用到的依赖包。</p>\n<h3 id=\"编辑-config-yml-文件\"><a href=\"#编辑-config-yml-文件\" class=\"headerlink\" title=\"编辑 _config.yml 文件\"></a>编辑 _config.yml 文件</h3><p>配置你的博客信息、GitHub Pages 信息和其他相关设置</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># Deployment</span>\n<span class=\"token comment\">## Docs: https://hexo.io/docs/one-command-deployment</span>\n<span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n  <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/ArHay0612/arhay0612.github.io.git\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><p>运行以下命令将生成的静态文件部署到 GitHub Pages</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>或</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然後根據彈窗完成登錄，即可部署完成</p>\n<h2 id=\"訪問博客\"><a href=\"#訪問博客\" class=\"headerlink\" title=\"訪問博客\"></a>訪問博客</h2><p><a href=\"https://arhay0612.github.io/\">https://ArHay0612.github.io</a></p>\n<p>ArHay0612 是我的用戶名。請自行替換到自己的 github usernames</p>\n<h2 id=\"主題配置\"><a href=\"#主題配置\" class=\"headerlink\" title=\"主題配置\"></a>主題配置</h2><p>我用的是 Next，就以 Next 為例</p>\n<p>參考:</p>\n<ul>\n<li><p><a href=\"https://github.com/next-theme/hexo-theme-next\">Next Github Page</a></p>\n</li>\n<li><p><a href=\"https://theme-next.js.org/\">NexT Documentation</a></p>\n</li>\n</ul>\n<h3 id=\"安裝Next主題\"><a href=\"#安裝Next主題\" class=\"headerlink\" title=\"安裝Next主題\"></a>安裝 Next 主題</h3><p>在博客項目根目錄下把 Next 主題 clone 到 themes/next 文件夾</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> hexo-site\n<span class=\"token function\">git</span> clone https://github.com/next-theme/hexo-theme-next themes/next<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"編輯-config-yml-文件\"><a href=\"#編輯-config-yml-文件\" class=\"headerlink\" title=\"編輯 _config.yml 文件\"></a>編輯 _config.yml 文件</h3><p>在<strong>根目錄下</strong>找到 _config.yml</p>\n<p>然後在 theme 配置項修改成</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">theme</span><span class=\"token punctuation\">:</span> next<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"Next-主題選擇\"><a href=\"#Next-主題選擇\" class=\"headerlink\" title=\"Next 主題選擇\"></a>Next 主題選擇</h3><p>next 自帶 4 種類型的主題方案</p>\n<ul>\n<li>Muse</li>\n<li>Mist</li>\n<li>Pisces</li>\n<li>Gemini</li>\n</ul>\n<p>在 <strong><code>themes\\next\\_config.yml</code></strong> 文件下<br>搜索 <code>Scheme Settings</code></p>\n<p>然後選擇自己喜歡的主題方案</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># Schemes</span>\n<span class=\"token comment\"># scheme: Muse</span>\n<span class=\"token comment\"># scheme: Mist</span>\n<span class=\"token key atrule\">scheme</span><span class=\"token punctuation\">:</span> Pisces\n<span class=\"token comment\"># scheme: Gemini</span>\n\n<span class=\"token comment\"># Dark Mode</span>\n<span class=\"token key atrule\">darkmode</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Next-主題配置\"><a href=\"#Next-主題配置\" class=\"headerlink\" title=\"Next 主題配置\"></a>Next 主題配置</h3><p>Next 主題所有配置都在 <strong><code>themes\\next\\_config.yml</code></strong> 文件下</p>\n<p>根據需求選擇自己需要的內容，如菜單，統計，搜索，背景等……</p>\n<p>具體參考：</p>\n<ul>\n<li><a href=\"https://theme-next.js.org/docs/theme-settings/\">Next 主題設置 documentation</a></li>\n</ul>\n<p>例如：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">menu</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">home</span><span class=\"token punctuation\">:</span> / <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> fa fa<span class=\"token punctuation\">-</span>home <span class=\"token comment\">#主頁</span>\n  <span class=\"token key atrule\">about</span><span class=\"token punctuation\">:</span> /about/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> fa fa<span class=\"token punctuation\">-</span>user <span class=\"token comment\">#關於頁</span>\n  <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> /tags/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> fa fa<span class=\"token punctuation\">-</span>tags  <span class=\"token comment\">#標籤</span>\n  <span class=\"token comment\">#categories: /categories/ || fa fa-th</span>\n  <span class=\"token key atrule\">archives</span><span class=\"token punctuation\">:</span> /archives/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> fa fa<span class=\"token punctuation\">-</span>archive <span class=\"token comment\">#歸檔</span>\n  <span class=\"token comment\">#schedule: /schedule/ || fa fa-calendar</span>\n  <span class=\"token comment\">#sitemap: /sitemap.xml || fa fa-sitemap</span>\n  <span class=\"token comment\">#commonweal: /404/ || fa fa-heartbeat</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"插件選擇\"><a href=\"#插件選擇\" class=\"headerlink\" title=\"插件選擇\"></a>插件選擇</h2><h3 id=\"本地搜索\"><a href=\"#本地搜索\" class=\"headerlink\" title=\"本地搜索\"></a>本地搜索</h3><p>該功能允許用戶在網站內快速搜索文章內容，而不依賴於外部搜索服務（如 Algolia）。本地搜索的數據由 Hexo 生成，並存儲在靜態文件中，適合小型或中型博客。</p>\n<p>參考：<a href=\"https://github.com/next-theme/hexo-generator-searchdb\">https://github.com/next-theme/hexo-generator-searchdb</a></p>\n<h4 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-generator-searchdb <span class=\"token parameter variable\">--save</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"配置插件\"><a href=\"#配置插件\" class=\"headerlink\" title=\"配置插件\"></a>配置插件</h4><p>在 Next 的配置文件 <strong><code>themes\\next\\_config.yml</code></strong> 中修改成以下內容：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># Local Search</span>\n<span class=\"token comment\"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span>\n<span class=\"token key atrule\">local_search</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\">#控制是否啟用本地搜索功能</span>\n  <span class=\"token comment\"># 設置每篇文章中顯示的搜索結果數量。 -1 顯示所有。</span>\n  <span class=\"token key atrule\">top_n_per_article</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token comment\"># 控制是否將 HTML 字符（如 &amp;lt; 和 &amp;gt;）轉換為可讀的文本。</span>\n  <span class=\"token key atrule\">unescape</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token comment\"># 控制是否在頁面加載時預加載搜索數據</span>\n  <span class=\"token key atrule\">preload</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Hexo-Pangu\"><a href=\"#Hexo-Pangu\" class=\"headerlink\" title=\"Hexo Pangu\"></a>Hexo Pangu</h3><p>Hexo Pangu 是一個用於自動處理中英文之間空格的插件，基於 Pangu.js。它的作用是自動在中文與英文、數字、符號之間插入適當的空格，從而提升文章的可讀性，符合中文排版的最佳實踐。</p>\n<p>參考：</p>\n<ul>\n<li><a href=\"https://github.com/next-theme/hexo-pangu\">https://github.com/next-theme/hexo-pangu</a></li>\n<li><a href=\"https://github.com/vinta/pangu.js\">https://github.com/vinta/pangu.js</a></li>\n</ul>\n<h4 id=\"安裝-1\"><a href=\"#安裝-1\" class=\"headerlink\" title=\"安裝\"></a>安裝</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-pangu <span class=\"token parameter variable\">--save</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"Hexo-Word-Counter\"><a href=\"#Hexo-Word-Counter\" class=\"headerlink\" title=\"Hexo Word Counter\"></a>Hexo Word Counter</h3><p>Hexo Word Counter 是一個用於統計文章字數和預估閱讀時間的插件。它的主要作用是為每篇文章顯示字數和閱讀時間，幫助讀者了解文章的長度和閱讀所需的時間，從而提升用戶體驗。</p>\n<p>參考：<a href=\"https://github.com/next-theme/hexo-word-counter\">https://github.com/next-theme/hexo-word-counter</a></p>\n<h4 id=\"安裝-2\"><a href=\"#安裝-2\" class=\"headerlink\" title=\"安裝\"></a>安裝</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-word-counter <span class=\"token parameter variable\">--save</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"配置插件-1\"><a href=\"#配置插件-1\" class=\"headerlink\" title=\"配置插件\"></a>配置插件</h4><p>在 Next 的配置文件 <strong><code>themes\\next\\_config.yml</code></strong> 中修改成以下內容：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">symbols_count_time</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">separated_meta</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">item_text_total</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"oh-my-live2d\"><a href=\"#oh-my-live2d\" class=\"headerlink\" title=\"oh-my-live2d\"></a>oh-my-live2d</h3><p>是一個用於在 Hexo 博客中添加 Live2D 模型 的插件。它的作用是為網站添加一個可交互的 2D 虛擬角色，通常顯示在網站的角落，增強網站的趣味性和吸引力。（看板娘）</p>\n<p>參考：<a href=\"https://github.com/next-theme/hexo-word-counter\">https://github.com/next-theme/hexo-word-counter</a></p>\n<h4 id=\"安裝-3\"><a href=\"#安裝-3\" class=\"headerlink\" title=\"安裝\"></a>安裝</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-oh-my-live2d <span class=\"token parameter variable\">--save</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"配置插件-2\"><a href=\"#配置插件-2\" class=\"headerlink\" title=\"配置插件\"></a>配置插件</h4><p>在博客根目錄的配置文件 <strong><code>.\\_config.yml</code></strong> 中修改成以下內容：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">OhMyLive2d</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">CDN</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//registry.npmmirror.com/oh<span class=\"token punctuation\">-</span>my<span class=\"token punctuation\">-</span>live2d/latest/files\n  <span class=\"token key atrule\">option</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">dockedPosition</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'right'</span> <span class=\"token comment\"># 模型停靠位置 默认值: 'right' 可选值: 'left' | 'right'</span>\n    <span class=\"token key atrule\">menus</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 侧边栏菜单配置</span>\n      <span class=\"token key atrule\">items</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 菜单项配置</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'github'</span>\n          <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'icon-switch'</span>\n          <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'我的github'</span>\n          <span class=\"token key atrule\">onClick</span><span class=\"token punctuation\">:</span> ()=<span class=\"token punctuation\">&gt;</span>window.open('https<span class=\"token punctuation\">:</span>//github.com/ArHay0612')\n\n    <span class=\"token key atrule\">mobileDisplay</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 是否在移动端显示</span>\n    <span class=\"token key atrule\">models</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> \\live2d_models\\fll\\fll.model3.json <span class=\"token comment\"># 模型的路径</span>\n        <span class=\"token key atrule\">mobilePosition</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">-10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 移动端时模型在舞台中的位置。 默认值: [0,0] [横坐标, 纵坐标]</span>\n        <span class=\"token key atrule\">mobileScale</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.1</span> <span class=\"token comment\"># 移动端时模型的缩放比例 默认值: 0.1</span>\n        <span class=\"token key atrule\">mobileStageStyle</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 移动端时舞台的样式</span>\n          <span class=\"token key atrule\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">180</span>\n          <span class=\"token key atrule\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">166</span>\n        <span class=\"token key atrule\">motionPreloadStrategy</span><span class=\"token punctuation\">:</span> IDLE <span class=\"token comment\"># 动作预加载策略 默认值: IDLE 可选值: ALL | IDLE | NONE</span>\n        <span class=\"token key atrule\">position</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">-10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 模型在舞台中的位置。 默认值: [0,0] [横坐标, 纵坐标]</span>\n        <span class=\"token key atrule\">scale</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.15</span> <span class=\"token comment\"># 模型的缩放比例 默认值: 0.1</span>\n        <span class=\"token comment\"># showHitAreaFrames: false # 是否显示点击区域 默认值: false</span>\n        <span class=\"token key atrule\">stageStyle</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">300</span>\n          <span class=\"token key atrule\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">450</span>\n    <span class=\"token key atrule\">parentElement</span><span class=\"token punctuation\">:</span> document.body <span class=\"token comment\">#为组件提供一个父元素，如果未指定则默认挂载到 body 中</span>\n    <span class=\"token key atrule\">primaryColor</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'var(--btn-bg)'</span> <span class=\"token comment\"># 主题色 支持变量</span>\n    <span class=\"token key atrule\">sayHello</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 是否在初始化阶段打印项目信息</span>\n    <span class=\"token key atrule\">tips</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">style</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">230</span>\n        <span class=\"token key atrule\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">120</span>\n        <span class=\"token key atrule\">left</span><span class=\"token punctuation\">:</span> calc(50% <span class=\"token punctuation\">-</span> 20px)\n        <span class=\"token key atrule\">top</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">-</span>100px\n      <span class=\"token key atrule\">mobileStyle</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">180</span>\n        <span class=\"token key atrule\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n        <span class=\"token key atrule\">left</span><span class=\"token punctuation\">:</span> calc(50% <span class=\"token punctuation\">-</span> 30px)\n        <span class=\"token key atrule\">top</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">-</span>100px\n      <span class=\"token key atrule\">idleTips</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">interval</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10000</span>\n        <span class=\"token key atrule\">duration</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1500</span>\n        <span class=\"token key atrule\">message</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> 你好呀<span class=\"token punctuation\">,</span>欢迎来到ArHay的小站~<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"更換模型\"><a href=\"#更換模型\" class=\"headerlink\" title=\"更換模型\"></a>更換模型</h4><h5 id=\"在互聯網上下載自己喜歡的live2D模型\"><a href=\"#在互聯網上下載自己喜歡的live2D模型\" class=\"headerlink\" title=\"在互聯網上下載自己喜歡的live2D模型\"></a>在互聯網上下載自己喜歡的 live2D 模型</h5><p>參考：</p>\n<ul>\n<li><p><a href=\"https://www.live2d.com/zh-CHS/learn/sample/\">Live2D 官方示例数据集（可免费下载</a></p>\n</li>\n<li><p><a href=\"https://www.aplaybox.com/model/model\">模之屋</a></p>\n</li>\n<li><p><a href=\"https://github.com/Eikanya/Live2d-model\">GitHub 用戶 Eikanya 分享</a></p>\n</li>\n</ul>\n<h5 id=\"項目引入模型\"><a href=\"#項目引入模型\" class=\"headerlink\" title=\"項目引入模型\"></a>項目引入模型</h5><p>在 source 文件夾下，新建文件夾 <code>live2d_models\\</code></p>\n<p>把下載下來的整個 live2d 資源包整個放進 <code>live2d_models\\</code> 文件夾中</p>\n<p>然後修改 Hexo 的主配置文件 <code>_config.yml</code></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">models</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> \\live2d_models\\fll\\fll.model3.json <span class=\"token comment\"># 模型的路径</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>此處路徑應為這個模型包下的 json 文件</p>\n<h5 id=\"預覽\"><a href=\"#預覽\" class=\"headerlink\" title=\"預覽\"></a>預覽</h5><p><img src=\"/images/live2d_demo.png\" alt=\"live2d_demo\"></p>\n<h3 id=\"博客訪客和閱讀量統計\"><a href=\"#博客訪客和閱讀量統計\" class=\"headerlink\" title=\"博客訪客和閱讀量統計\"></a>博客訪客和閱讀量統計</h3><p>busuanzi（不蒜子） 是一個輕量級的網站訪問量和文章閱讀量統計工具，適合用於 Hexo 博客等靜態網站。它無需註冊或配置後端服務，通過嵌入 JavaScript 即可實現訪問量和閱讀量的統計。</p>\n<p>參考：<a href=\"https://busuanzi.ibruce.info/\">https://busuanzi.ibruce.info/</a></p>\n<h4 id=\"配置插件-3\"><a href=\"#配置插件-3\" class=\"headerlink\" title=\"配置插件\"></a>配置插件</h4><p>在 Next 的配置文件 <strong><code>themes\\next\\_config.yml</code></strong> 中修改成以下內容：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># Show Views / Visitors of the website / page with busuanzi.</span>\n<span class=\"token comment\"># For more information: http://ibruce.info/2015/04/04/busuanzi/</span>\n<span class=\"token key atrule\">busuanzi_count</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">total_visitors</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">total_visitors_icon</span><span class=\"token punctuation\">:</span> fa fa<span class=\"token punctuation\">-</span>user\n  <span class=\"token key atrule\">total_views</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">total_views_icon</span><span class=\"token punctuation\">:</span> fa fa<span class=\"token punctuation\">-</span>eye\n  <span class=\"token key atrule\">post_views</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">post_views_icon</span><span class=\"token punctuation\">:</span> far fa<span class=\"token punctuation\">-</span>eye<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<hr>\n<blockquote>\n<p>等我發掘到好玩的插件會繼續更新～</p>\n<p><em>未完待續……</em></p>\n</blockquote>\n","excerpt":"","more":"<h2 id=\"安裝NodeJs和Git\"><a href=\"#安裝NodeJs和Git\" class=\"headerlink\" title=\"安裝NodeJs和Git\"></a>安裝 NodeJs 和 Git</h2><h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><ul>\n<li><a href=\"https://nodejs.org/\">Node.js</a></li>\n<li><a href=\"https://git-scm.com/\">Git</a></li>\n</ul>\n<p>根據安裝界面自行安裝</p>\n<h2 id=\"安裝hexo\"><a href=\"#安裝hexo\" class=\"headerlink\" title=\"安裝hexo\"></a>安裝 hexo</h2><p><a href=\"https://hexo.io/zh-cn/index.html\">Hexo 官网</a></p>\n<p>打开终端（或命令行窗口），运行以下命令来安装 Hexo (-g 為全局安裝)</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-cli <span class=\"token parameter variable\">-g</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"hexo新建項目，或從github下載博客源碼\"><a href=\"#hexo新建項目，或從github下載博客源碼\" class=\"headerlink\" title=\"hexo新建項目，或從github下載博客源碼\"></a>hexo 新建項目，或從 github 下載博客源碼</h2><p>在你选择存储博客文件的目录中，执行以下命令来创建一个新的 Hexo 项目：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo init blog\n<span class=\"token builtin class-name\">cd</span> blog\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"配置hexo\"><a href=\"#配置hexo\" class=\"headerlink\" title=\"配置hexo\"></a>配置 hexo</h2><p>编辑<strong>根目錄</strong>下的 _config.yml 文件，配置你的基本信息和其他相关设置</p>\n<p>具體參考：<a href=\"https://hexo.io/docs/configuration\">https://hexo.io/docs/configuration</a></p>\n<p>例如：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># Site</span>\n<span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> ArHay\n<span class=\"token key atrule\">subtitle</span><span class=\"token punctuation\">:</span> 当赤道留住雪花，眼泪融掉细沙\n<span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> \n<span class=\"token key atrule\">keywords</span><span class=\"token punctuation\">:</span> ArHay\n<span class=\"token key atrule\">author</span><span class=\"token punctuation\">:</span> ArHay\n<span class=\"token key atrule\">language</span><span class=\"token punctuation\">:</span> zh<span class=\"token punctuation\">-</span>CN\n<span class=\"token key atrule\">timezone</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"創建文章\"><a href=\"#創建文章\" class=\"headerlink\" title=\"創建文章\"></a>創建文章</h2><p>使用以下命令创建新的博客文章</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo new post <span class=\"token string\">\"My New Post\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"生成靜態文件\"><a href=\"#生成靜態文件\" class=\"headerlink\" title=\"生成靜態文件\"></a>生成靜態文件</h2><p>在博客根目录下执行以下命令生成静态文件，文件存儲在 public 文件夾下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo generate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>或</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo g<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"本地預覽\"><a href=\"#本地預覽\" class=\"headerlink\" title=\"本地預覽\"></a>本地預覽</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>或</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo s<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"部署到GithubPage\"><a href=\"#部署到GithubPage\" class=\"headerlink\" title=\"部署到GithubPage\"></a>部署到 GithubPage</h2><h3 id=\"安装-hexo-deployer-git\"><a href=\"#安装-hexo-deployer-git\" class=\"headerlink\" title=\"安装 hexo-deployer-git\"></a>安装 hexo-deployer-git</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-deployer-git <span class=\"token parameter variable\">--save</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>参数 –save 的作用是在项目下的 package.json 文件记录安装过的依赖包名称。</p>\n<p>当复制项目到另外的电脑上，只需运行命令: npm i 就能自动安装项目用到的依赖包。</p>\n<h3 id=\"编辑-config-yml-文件\"><a href=\"#编辑-config-yml-文件\" class=\"headerlink\" title=\"编辑 _config.yml 文件\"></a>编辑 _config.yml 文件</h3><p>配置你的博客信息、GitHub Pages 信息和其他相关设置</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># Deployment</span>\n<span class=\"token comment\">## Docs: https://hexo.io/docs/one-command-deployment</span>\n<span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git\n  <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/ArHay0612/arhay0612.github.io.git\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><p>运行以下命令将生成的静态文件部署到 GitHub Pages</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>或</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>然後根據彈窗完成登錄，即可部署完成</p>\n<h2 id=\"訪問博客\"><a href=\"#訪問博客\" class=\"headerlink\" title=\"訪問博客\"></a>訪問博客</h2><p><a href=\"https://arhay0612.github.io/\">https://ArHay0612.github.io</a></p>\n<p>ArHay0612 是我的用戶名。請自行替換到自己的 github usernames</p>\n<h2 id=\"主題配置\"><a href=\"#主題配置\" class=\"headerlink\" title=\"主題配置\"></a>主題配置</h2><p>我用的是 Next，就以 Next 為例</p>\n<p>參考:</p>\n<ul>\n<li><p><a href=\"https://github.com/next-theme/hexo-theme-next\">Next Github Page</a></p>\n</li>\n<li><p><a href=\"https://theme-next.js.org/\">NexT Documentation</a></p>\n</li>\n</ul>\n<h3 id=\"安裝Next主題\"><a href=\"#安裝Next主題\" class=\"headerlink\" title=\"安裝Next主題\"></a>安裝 Next 主題</h3><p>在博客項目根目錄下把 Next 主題 clone 到 themes/next 文件夾</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> hexo-site\n<span class=\"token function\">git</span> clone https://github.com/next-theme/hexo-theme-next themes/next<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"編輯-config-yml-文件\"><a href=\"#編輯-config-yml-文件\" class=\"headerlink\" title=\"編輯 _config.yml 文件\"></a>編輯 _config.yml 文件</h3><p>在<strong>根目錄下</strong>找到 _config.yml</p>\n<p>然後在 theme 配置項修改成</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">theme</span><span class=\"token punctuation\">:</span> next<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"Next-主題選擇\"><a href=\"#Next-主題選擇\" class=\"headerlink\" title=\"Next 主題選擇\"></a>Next 主題選擇</h3><p>next 自帶 4 種類型的主題方案</p>\n<ul>\n<li>Muse</li>\n<li>Mist</li>\n<li>Pisces</li>\n<li>Gemini</li>\n</ul>\n<p>在 <strong><code>themes\\next\\_config.yml</code></strong> 文件下<br>搜索 <code>Scheme Settings</code></p>\n<p>然後選擇自己喜歡的主題方案</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># Schemes</span>\n<span class=\"token comment\"># scheme: Muse</span>\n<span class=\"token comment\"># scheme: Mist</span>\n<span class=\"token key atrule\">scheme</span><span class=\"token punctuation\">:</span> Pisces\n<span class=\"token comment\"># scheme: Gemini</span>\n\n<span class=\"token comment\"># Dark Mode</span>\n<span class=\"token key atrule\">darkmode</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Next-主題配置\"><a href=\"#Next-主題配置\" class=\"headerlink\" title=\"Next 主題配置\"></a>Next 主題配置</h3><p>Next 主題所有配置都在 <strong><code>themes\\next\\_config.yml</code></strong> 文件下</p>\n<p>根據需求選擇自己需要的內容，如菜單，統計，搜索，背景等……</p>\n<p>具體參考：</p>\n<ul>\n<li><a href=\"https://theme-next.js.org/docs/theme-settings/\">Next 主題設置 documentation</a></li>\n</ul>\n<p>例如：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">menu</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">home</span><span class=\"token punctuation\">:</span> / <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> fa fa<span class=\"token punctuation\">-</span>home <span class=\"token comment\">#主頁</span>\n  <span class=\"token key atrule\">about</span><span class=\"token punctuation\">:</span> /about/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> fa fa<span class=\"token punctuation\">-</span>user <span class=\"token comment\">#關於頁</span>\n  <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> /tags/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> fa fa<span class=\"token punctuation\">-</span>tags  <span class=\"token comment\">#標籤</span>\n  <span class=\"token comment\">#categories: /categories/ || fa fa-th</span>\n  <span class=\"token key atrule\">archives</span><span class=\"token punctuation\">:</span> /archives/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> fa fa<span class=\"token punctuation\">-</span>archive <span class=\"token comment\">#歸檔</span>\n  <span class=\"token comment\">#schedule: /schedule/ || fa fa-calendar</span>\n  <span class=\"token comment\">#sitemap: /sitemap.xml || fa fa-sitemap</span>\n  <span class=\"token comment\">#commonweal: /404/ || fa fa-heartbeat</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"插件選擇\"><a href=\"#插件選擇\" class=\"headerlink\" title=\"插件選擇\"></a>插件選擇</h2><h3 id=\"本地搜索\"><a href=\"#本地搜索\" class=\"headerlink\" title=\"本地搜索\"></a>本地搜索</h3><p>該功能允許用戶在網站內快速搜索文章內容，而不依賴於外部搜索服務（如 Algolia）。本地搜索的數據由 Hexo 生成，並存儲在靜態文件中，適合小型或中型博客。</p>\n<p>參考：<a href=\"https://github.com/next-theme/hexo-generator-searchdb\">https://github.com/next-theme/hexo-generator-searchdb</a></p>\n<h4 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-generator-searchdb <span class=\"token parameter variable\">--save</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"配置插件\"><a href=\"#配置插件\" class=\"headerlink\" title=\"配置插件\"></a>配置插件</h4><p>在 Next 的配置文件 <strong><code>themes\\next\\_config.yml</code></strong> 中修改成以下內容：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># Local Search</span>\n<span class=\"token comment\"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span>\n<span class=\"token key atrule\">local_search</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\">#控制是否啟用本地搜索功能</span>\n  <span class=\"token comment\"># 設置每篇文章中顯示的搜索結果數量。 -1 顯示所有。</span>\n  <span class=\"token key atrule\">top_n_per_article</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token comment\"># 控制是否將 HTML 字符（如 &amp;lt; 和 &amp;gt;）轉換為可讀的文本。</span>\n  <span class=\"token key atrule\">unescape</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token comment\"># 控制是否在頁面加載時預加載搜索數據</span>\n  <span class=\"token key atrule\">preload</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Hexo-Pangu\"><a href=\"#Hexo-Pangu\" class=\"headerlink\" title=\"Hexo Pangu\"></a>Hexo Pangu</h3><p>Hexo Pangu 是一個用於自動處理中英文之間空格的插件，基於 Pangu.js。它的作用是自動在中文與英文、數字、符號之間插入適當的空格，從而提升文章的可讀性，符合中文排版的最佳實踐。</p>\n<p>參考：</p>\n<ul>\n<li><a href=\"https://github.com/next-theme/hexo-pangu\">https://github.com/next-theme/hexo-pangu</a></li>\n<li><a href=\"https://github.com/vinta/pangu.js\">https://github.com/vinta/pangu.js</a></li>\n</ul>\n<h4 id=\"安裝-1\"><a href=\"#安裝-1\" class=\"headerlink\" title=\"安裝\"></a>安裝</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-pangu <span class=\"token parameter variable\">--save</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"Hexo-Word-Counter\"><a href=\"#Hexo-Word-Counter\" class=\"headerlink\" title=\"Hexo Word Counter\"></a>Hexo Word Counter</h3><p>Hexo Word Counter 是一個用於統計文章字數和預估閱讀時間的插件。它的主要作用是為每篇文章顯示字數和閱讀時間，幫助讀者了解文章的長度和閱讀所需的時間，從而提升用戶體驗。</p>\n<p>參考：<a href=\"https://github.com/next-theme/hexo-word-counter\">https://github.com/next-theme/hexo-word-counter</a></p>\n<h4 id=\"安裝-2\"><a href=\"#安裝-2\" class=\"headerlink\" title=\"安裝\"></a>安裝</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-word-counter <span class=\"token parameter variable\">--save</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"配置插件-1\"><a href=\"#配置插件-1\" class=\"headerlink\" title=\"配置插件\"></a>配置插件</h4><p>在 Next 的配置文件 <strong><code>themes\\next\\_config.yml</code></strong> 中修改成以下內容：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">symbols_count_time</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">separated_meta</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">item_text_total</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"oh-my-live2d\"><a href=\"#oh-my-live2d\" class=\"headerlink\" title=\"oh-my-live2d\"></a>oh-my-live2d</h3><p>是一個用於在 Hexo 博客中添加 Live2D 模型 的插件。它的作用是為網站添加一個可交互的 2D 虛擬角色，通常顯示在網站的角落，增強網站的趣味性和吸引力。（看板娘）</p>\n<p>參考：<a href=\"https://github.com/next-theme/hexo-word-counter\">https://github.com/next-theme/hexo-word-counter</a></p>\n<h4 id=\"安裝-3\"><a href=\"#安裝-3\" class=\"headerlink\" title=\"安裝\"></a>安裝</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-oh-my-live2d <span class=\"token parameter variable\">--save</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"配置插件-2\"><a href=\"#配置插件-2\" class=\"headerlink\" title=\"配置插件\"></a>配置插件</h4><p>在博客根目錄的配置文件 <strong><code>.\\_config.yml</code></strong> 中修改成以下內容：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">OhMyLive2d</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">CDN</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//registry.npmmirror.com/oh<span class=\"token punctuation\">-</span>my<span class=\"token punctuation\">-</span>live2d/latest/files\n  <span class=\"token key atrule\">option</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">dockedPosition</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'right'</span> <span class=\"token comment\"># 模型停靠位置 默认值: 'right' 可选值: 'left' | 'right'</span>\n    <span class=\"token key atrule\">menus</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 侧边栏菜单配置</span>\n      <span class=\"token key atrule\">items</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 菜单项配置</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'github'</span>\n          <span class=\"token key atrule\">icon</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'icon-switch'</span>\n          <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'我的github'</span>\n          <span class=\"token key atrule\">onClick</span><span class=\"token punctuation\">:</span> ()=<span class=\"token punctuation\">&gt;</span>window.open('https<span class=\"token punctuation\">:</span>//github.com/ArHay0612')\n\n    <span class=\"token key atrule\">mobileDisplay</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 是否在移动端显示</span>\n    <span class=\"token key atrule\">models</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> \\live2d_models\\fll\\fll.model3.json <span class=\"token comment\"># 模型的路径</span>\n        <span class=\"token key atrule\">mobilePosition</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">-10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 移动端时模型在舞台中的位置。 默认值: [0,0] [横坐标, 纵坐标]</span>\n        <span class=\"token key atrule\">mobileScale</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.1</span> <span class=\"token comment\"># 移动端时模型的缩放比例 默认值: 0.1</span>\n        <span class=\"token key atrule\">mobileStageStyle</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 移动端时舞台的样式</span>\n          <span class=\"token key atrule\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">180</span>\n          <span class=\"token key atrule\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">166</span>\n        <span class=\"token key atrule\">motionPreloadStrategy</span><span class=\"token punctuation\">:</span> IDLE <span class=\"token comment\"># 动作预加载策略 默认值: IDLE 可选值: ALL | IDLE | NONE</span>\n        <span class=\"token key atrule\">position</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">-10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 模型在舞台中的位置。 默认值: [0,0] [横坐标, 纵坐标]</span>\n        <span class=\"token key atrule\">scale</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.15</span> <span class=\"token comment\"># 模型的缩放比例 默认值: 0.1</span>\n        <span class=\"token comment\"># showHitAreaFrames: false # 是否显示点击区域 默认值: false</span>\n        <span class=\"token key atrule\">stageStyle</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">300</span>\n          <span class=\"token key atrule\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">450</span>\n    <span class=\"token key atrule\">parentElement</span><span class=\"token punctuation\">:</span> document.body <span class=\"token comment\">#为组件提供一个父元素，如果未指定则默认挂载到 body 中</span>\n    <span class=\"token key atrule\">primaryColor</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'var(--btn-bg)'</span> <span class=\"token comment\"># 主题色 支持变量</span>\n    <span class=\"token key atrule\">sayHello</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 是否在初始化阶段打印项目信息</span>\n    <span class=\"token key atrule\">tips</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">style</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">230</span>\n        <span class=\"token key atrule\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">120</span>\n        <span class=\"token key atrule\">left</span><span class=\"token punctuation\">:</span> calc(50% <span class=\"token punctuation\">-</span> 20px)\n        <span class=\"token key atrule\">top</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">-</span>100px\n      <span class=\"token key atrule\">mobileStyle</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">180</span>\n        <span class=\"token key atrule\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n        <span class=\"token key atrule\">left</span><span class=\"token punctuation\">:</span> calc(50% <span class=\"token punctuation\">-</span> 30px)\n        <span class=\"token key atrule\">top</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">-</span>100px\n      <span class=\"token key atrule\">idleTips</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">interval</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10000</span>\n        <span class=\"token key atrule\">duration</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1500</span>\n        <span class=\"token key atrule\">message</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> 你好呀<span class=\"token punctuation\">,</span>欢迎来到ArHay的小站~<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"更換模型\"><a href=\"#更換模型\" class=\"headerlink\" title=\"更換模型\"></a>更換模型</h4><h5 id=\"在互聯網上下載自己喜歡的live2D模型\"><a href=\"#在互聯網上下載自己喜歡的live2D模型\" class=\"headerlink\" title=\"在互聯網上下載自己喜歡的live2D模型\"></a>在互聯網上下載自己喜歡的 live2D 模型</h5><p>參考：</p>\n<ul>\n<li><p><a href=\"https://www.live2d.com/zh-CHS/learn/sample/\">Live2D 官方示例数据集（可免费下载</a></p>\n</li>\n<li><p><a href=\"https://www.aplaybox.com/model/model\">模之屋</a></p>\n</li>\n<li><p><a href=\"https://github.com/Eikanya/Live2d-model\">GitHub 用戶 Eikanya 分享</a></p>\n</li>\n</ul>\n<h5 id=\"項目引入模型\"><a href=\"#項目引入模型\" class=\"headerlink\" title=\"項目引入模型\"></a>項目引入模型</h5><p>在 source 文件夾下，新建文件夾 <code>live2d_models\\</code></p>\n<p>把下載下來的整個 live2d 資源包整個放進 <code>live2d_models\\</code> 文件夾中</p>\n<p>然後修改 Hexo 的主配置文件 <code>_config.yml</code></p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">models</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> \\live2d_models\\fll\\fll.model3.json <span class=\"token comment\"># 模型的路径</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>此處路徑應為這個模型包下的 json 文件</p>\n<h5 id=\"預覽\"><a href=\"#預覽\" class=\"headerlink\" title=\"預覽\"></a>預覽</h5><p><img src=\"/images/live2d_demo.png\" alt=\"live2d_demo\"></p>\n<h3 id=\"博客訪客和閱讀量統計\"><a href=\"#博客訪客和閱讀量統計\" class=\"headerlink\" title=\"博客訪客和閱讀量統計\"></a>博客訪客和閱讀量統計</h3><p>busuanzi（不蒜子） 是一個輕量級的網站訪問量和文章閱讀量統計工具，適合用於 Hexo 博客等靜態網站。它無需註冊或配置後端服務，通過嵌入 JavaScript 即可實現訪問量和閱讀量的統計。</p>\n<p>參考：<a href=\"https://busuanzi.ibruce.info/\">https://busuanzi.ibruce.info/</a></p>\n<h4 id=\"配置插件-3\"><a href=\"#配置插件-3\" class=\"headerlink\" title=\"配置插件\"></a>配置插件</h4><p>在 Next 的配置文件 <strong><code>themes\\next\\_config.yml</code></strong> 中修改成以下內容：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># Show Views / Visitors of the website / page with busuanzi.</span>\n<span class=\"token comment\"># For more information: http://ibruce.info/2015/04/04/busuanzi/</span>\n<span class=\"token key atrule\">busuanzi_count</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">total_visitors</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">total_visitors_icon</span><span class=\"token punctuation\">:</span> fa fa<span class=\"token punctuation\">-</span>user\n  <span class=\"token key atrule\">total_views</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">total_views_icon</span><span class=\"token punctuation\">:</span> fa fa<span class=\"token punctuation\">-</span>eye\n  <span class=\"token key atrule\">post_views</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">post_views_icon</span><span class=\"token punctuation\">:</span> far fa<span class=\"token punctuation\">-</span>eye<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<hr>\n<blockquote>\n<p>等我發掘到好玩的插件會繼續更新～</p>\n<p><em>未完待續……</em></p>\n</blockquote>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/live2d_demo.png","popularPost_tmp_gaData":{"updated":"Fri Apr 25 2025 10:47:34 GMT+0800 (China Standard Time)","title":"使用 hexo+Next 創建和部署個人博客","path":"2025/04/24/使用hexo創建和部署個人博客/","eyeCatchImage":"/images/live2d_demo.png","excerpt":"通過hexo生成或維護個人博客靜態網頁,更換Next主題，並deploy到github","date":{"_isAMomentObject":true,"_i":"2025-04-24T01:57:58.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2025-04-24T01:57:58.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["nodejs","hexo"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":1153},{"title":"远程 tomcat 配置 jconsole 连接监测 jvm 参数","date":"2018-08-20T03:10:30.000Z","description":"jconsole是Java 自带性能监控工具，监视和管理控制台 jconsole，它可以提供 Java 某个进程的内存、线程、类加载、 jvm 概要以及 MBean 等的实时信息. Jvisualvm是jdk1.6 update 7 才有，是jconsole的升级工具，功能更强大，最大好处是支持插件安装。所以Jvisualvm远程 JMX连接方式和jconsole远程连接方式一样","_content":"\n1.在tomcat的bin目录下catalina.sh文件首部增加以下配置(注意:不用换行)\n\n    CATALINA_OPTS=\"-Dfile.encoding=UTF-8 -server -Xms256m -Xmx256m -Djava.rmi.server.hostname=0.0.0.0 -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=10001 -Dcom.sun.management.jmxremote.rmi.port=10001 -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.password.file=./conf/jmxremote.password -Dcom.sun.management.jmxremote.access.file=./conf/jmxremote.access\"\n\n    其中-Xms256m -Xmx256m是配置jvm虚拟机参数的,最小堆内存和最大堆内存,推荐保持一致,如果不一致会增加gc回收次数,\n    对性能有严重影响.\n    -Djava.rmi.server.hostname:本机的ip地址,可设置为0.0.0.0\n    -Dcom.sun.management.jmxremote.port:监控的端口.不能和其他运行的端口相冲突\n    -Dcom.sun.management.jmxremote.authenticate:需要授权才能进行连接\n    -Dcom.sun.management.jmxremote.password.file:指定配置授权的密码文件存放位置,推荐放入到tomcat的conf目录下\n    -Dcom.sun.management.jmxremote.access.file:指定配置授权账户的权限的文件存放位置,推荐放入到tomcat的conf目录下\n\n\n2.在tomcat的bin目录下startup.sh文件首部增加以下配置\n\n    JAVA_OPTS=\"-Djava.rmi.server.hostname=0.0.0.0\"\n\n3.启动本地的jconsole即可,输入远程ip和端口,username和password即可连接\n\n注意:\n\n    1.配置授权的2个文件是在系统的%JAVA_HOME%/jre/lib/management目录下可以找到对应的模板.将其复制到tomcat的conf目录下,\n    并将jmxremote.password.template重命名为jmxremote.password\n    2.jmxremote.access用户权限分readonly和readwrite两种，在jmxremote.access尾部添加用户权限\"admin  readwrite\",\n    其中admin代表远程授权的用户名\n    3.在jmxremote.password尾部添加用户密码\"admin 123456\"其中admin代表用户名,123456代表对应的密码\n    4.对jmxremote.access和jmxremote.password文件进行授权,chmod 600  jmxremote.access和\n    chmod 600 jmxremote.password\n    5.针对为什么在startup.sh文件中增加对应的-Djava.rmi.server.hostname=0.0.0.0配置,主要是因为在不加配置的情况下,\n    用shutdown.sh关闭tomcat的时候会报该端口已经被占用,因为关闭tomcat时候，还会读取catalina.sh.所以推荐在startup.sh文件中配置\n    6.一般情况下远程服务器系统是开启防火墙的,所以还需要将10001端口配置为允许访问\n    7.如果配置一切无误,还是连接不上的话,请将0.0.0.0换成对应的IP地址.因为亲测在Ubuntu下0.0.0.0能连接成功,\n    但是在centos7下连接不成功\n\n","source":"_posts/远程tomcat配置jconsole连接监测jvm参数.md","raw":"---\ntitle: 远程tomcat配置jconsole连接监测jvm参数\ndate: 2018-08-20 11:10:30\ndescription:       jconsole是Java 自带性能监控工具，监视和管理控制台 jconsole，它可以提供 Java 某个进程的内存、线程、类加载、\n      jvm 概要以及 MBean 等的实时信息.\n      Jvisualvm是jdk1.6 update 7 才有，是jconsole的升级工具，功能更强大，最大好处是支持插件安装。所以Jvisualvm远程\n      JMX连接方式和jconsole远程连接方式一样\ntags:\n  - java\n  - jconsole\n  - jvm\n  - tomcat\n---\n\n1.在tomcat的bin目录下catalina.sh文件首部增加以下配置(注意:不用换行)\n\n    CATALINA_OPTS=\"-Dfile.encoding=UTF-8 -server -Xms256m -Xmx256m -Djava.rmi.server.hostname=0.0.0.0 -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=10001 -Dcom.sun.management.jmxremote.rmi.port=10001 -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.password.file=./conf/jmxremote.password -Dcom.sun.management.jmxremote.access.file=./conf/jmxremote.access\"\n\n    其中-Xms256m -Xmx256m是配置jvm虚拟机参数的,最小堆内存和最大堆内存,推荐保持一致,如果不一致会增加gc回收次数,\n    对性能有严重影响.\n    -Djava.rmi.server.hostname:本机的ip地址,可设置为0.0.0.0\n    -Dcom.sun.management.jmxremote.port:监控的端口.不能和其他运行的端口相冲突\n    -Dcom.sun.management.jmxremote.authenticate:需要授权才能进行连接\n    -Dcom.sun.management.jmxremote.password.file:指定配置授权的密码文件存放位置,推荐放入到tomcat的conf目录下\n    -Dcom.sun.management.jmxremote.access.file:指定配置授权账户的权限的文件存放位置,推荐放入到tomcat的conf目录下\n\n\n2.在tomcat的bin目录下startup.sh文件首部增加以下配置\n\n    JAVA_OPTS=\"-Djava.rmi.server.hostname=0.0.0.0\"\n\n3.启动本地的jconsole即可,输入远程ip和端口,username和password即可连接\n\n注意:\n\n    1.配置授权的2个文件是在系统的%JAVA_HOME%/jre/lib/management目录下可以找到对应的模板.将其复制到tomcat的conf目录下,\n    并将jmxremote.password.template重命名为jmxremote.password\n    2.jmxremote.access用户权限分readonly和readwrite两种，在jmxremote.access尾部添加用户权限\"admin  readwrite\",\n    其中admin代表远程授权的用户名\n    3.在jmxremote.password尾部添加用户密码\"admin 123456\"其中admin代表用户名,123456代表对应的密码\n    4.对jmxremote.access和jmxremote.password文件进行授权,chmod 600  jmxremote.access和\n    chmod 600 jmxremote.password\n    5.针对为什么在startup.sh文件中增加对应的-Djava.rmi.server.hostname=0.0.0.0配置,主要是因为在不加配置的情况下,\n    用shutdown.sh关闭tomcat的时候会报该端口已经被占用,因为关闭tomcat时候，还会读取catalina.sh.所以推荐在startup.sh文件中配置\n    6.一般情况下远程服务器系统是开启防火墙的,所以还需要将10001端口配置为允许访问\n    7.如果配置一切无误,还是连接不上的话,请将0.0.0.0换成对应的IP地址.因为亲测在Ubuntu下0.0.0.0能连接成功,\n    但是在centos7下连接不成功\n\n","slug":"远程tomcat配置jconsole连接监测jvm参数","published":1,"updated":"2025-04-22T08:21:31.932Z","comments":1,"layout":"post","photos":[],"_id":"cm9w745j1002wd8gk5q4d7hqm","content":"<p>1. 在 tomcat 的 bin 目录下 catalina.sh 文件首部增加以下配置 (注意：不用换行)</p>\n<pre><code>CATALINA_OPTS=\"-Dfile.encoding=UTF-8 -server -Xms256m -Xmx256m -Djava.rmi.server.hostname=0.0.0.0 -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=10001 -Dcom.sun.management.jmxremote.rmi.port=10001 -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.password.file=./conf/jmxremote.password -Dcom.sun.management.jmxremote.access.file=./conf/jmxremote.access\"\n\n其中-Xms256m -Xmx256m是配置jvm虚拟机参数的,最小堆内存和最大堆内存,推荐保持一致,如果不一致会增加gc回收次数,\n对性能有严重影响.\n-Djava.rmi.server.hostname:本机的ip地址,可设置为0.0.0.0\n-Dcom.sun.management.jmxremote.port:监控的端口.不能和其他运行的端口相冲突\n-Dcom.sun.management.jmxremote.authenticate:需要授权才能进行连接\n-Dcom.sun.management.jmxremote.password.file:指定配置授权的密码文件存放位置,推荐放入到tomcat的conf目录下\n-Dcom.sun.management.jmxremote.access.file:指定配置授权账户的权限的文件存放位置,推荐放入到tomcat的conf目录下\n</code></pre>\n<p>2. 在 tomcat 的 bin 目录下 startup.sh 文件首部增加以下配置</p>\n<pre><code>JAVA_OPTS=\"-Djava.rmi.server.hostname=0.0.0.0\"\n</code></pre>\n<p>3. 启动本地的 jconsole 即可，输入远程 ip 和端口，username 和 password 即可连接</p>\n<p>注意:</p>\n<pre><code>1.配置授权的2个文件是在系统的%JAVA_HOME%/jre/lib/management目录下可以找到对应的模板.将其复制到tomcat的conf目录下,\n并将jmxremote.password.template重命名为jmxremote.password\n2.jmxremote.access用户权限分readonly和readwrite两种，在jmxremote.access尾部添加用户权限\"admin  readwrite\",\n其中admin代表远程授权的用户名\n3.在jmxremote.password尾部添加用户密码\"admin 123456\"其中admin代表用户名,123456代表对应的密码\n4.对jmxremote.access和jmxremote.password文件进行授权,chmod 600  jmxremote.access和\nchmod 600 jmxremote.password\n5.针对为什么在startup.sh文件中增加对应的-Djava.rmi.server.hostname=0.0.0.0配置,主要是因为在不加配置的情况下,\n用shutdown.sh关闭tomcat的时候会报该端口已经被占用,因为关闭tomcat时候，还会读取catalina.sh.所以推荐在startup.sh文件中配置\n6.一般情况下远程服务器系统是开启防火墙的,所以还需要将10001端口配置为允许访问\n7.如果配置一切无误,还是连接不上的话,请将0.0.0.0换成对应的IP地址.因为亲测在Ubuntu下0.0.0.0能连接成功,\n但是在centos7下连接不成功\n</code></pre>\n","excerpt":"","more":"<p>1. 在 tomcat 的 bin 目录下 catalina.sh 文件首部增加以下配置 (注意：不用换行)</p>\n<pre><code>CATALINA_OPTS=\"-Dfile.encoding=UTF-8 -server -Xms256m -Xmx256m -Djava.rmi.server.hostname=0.0.0.0 -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=10001 -Dcom.sun.management.jmxremote.rmi.port=10001 -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.password.file=./conf/jmxremote.password -Dcom.sun.management.jmxremote.access.file=./conf/jmxremote.access\"\n\n其中-Xms256m -Xmx256m是配置jvm虚拟机参数的,最小堆内存和最大堆内存,推荐保持一致,如果不一致会增加gc回收次数,\n对性能有严重影响.\n-Djava.rmi.server.hostname:本机的ip地址,可设置为0.0.0.0\n-Dcom.sun.management.jmxremote.port:监控的端口.不能和其他运行的端口相冲突\n-Dcom.sun.management.jmxremote.authenticate:需要授权才能进行连接\n-Dcom.sun.management.jmxremote.password.file:指定配置授权的密码文件存放位置,推荐放入到tomcat的conf目录下\n-Dcom.sun.management.jmxremote.access.file:指定配置授权账户的权限的文件存放位置,推荐放入到tomcat的conf目录下\n</code></pre>\n<p>2. 在 tomcat 的 bin 目录下 startup.sh 文件首部增加以下配置</p>\n<pre><code>JAVA_OPTS=\"-Djava.rmi.server.hostname=0.0.0.0\"\n</code></pre>\n<p>3. 启动本地的 jconsole 即可，输入远程 ip 和端口，username 和 password 即可连接</p>\n<p>注意:</p>\n<pre><code>1.配置授权的2个文件是在系统的%JAVA_HOME%/jre/lib/management目录下可以找到对应的模板.将其复制到tomcat的conf目录下,\n并将jmxremote.password.template重命名为jmxremote.password\n2.jmxremote.access用户权限分readonly和readwrite两种，在jmxremote.access尾部添加用户权限\"admin  readwrite\",\n其中admin代表远程授权的用户名\n3.在jmxremote.password尾部添加用户密码\"admin 123456\"其中admin代表用户名,123456代表对应的密码\n4.对jmxremote.access和jmxremote.password文件进行授权,chmod 600  jmxremote.access和\nchmod 600 jmxremote.password\n5.针对为什么在startup.sh文件中增加对应的-Djava.rmi.server.hostname=0.0.0.0配置,主要是因为在不加配置的情况下,\n用shutdown.sh关闭tomcat的时候会报该端口已经被占用,因为关闭tomcat时候，还会读取catalina.sh.所以推荐在startup.sh文件中配置\n6.一般情况下远程服务器系统是开启防火墙的,所以还需要将10001端口配置为允许访问\n7.如果配置一切无误,还是连接不上的话,请将0.0.0.0换成对应的IP地址.因为亲测在Ubuntu下0.0.0.0能连接成功,\n但是在centos7下连接不成功\n</code></pre>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Tue Apr 22 2025 16:21:31 GMT+0800 (China Standard Time)","title":"远程 tomcat 配置 jconsole 连接监测 jvm 参数","path":"2018/08/20/远程tomcat配置jconsole连接监测jvm参数/","eyeCatchImage":null,"excerpt":"jconsole是Java 自带性能监控工具，监视和管理控制台 jconsole，它可以提供 Java 某个进程的内存、线程、类加载、 jvm 概要以及 MBean 等的实时信息. Jvisualvm是jdk1.6 update 7 才有，是jconsole的升级工具，功能更强大，最大好处是支持插件安装。所以Jvisualvm远程 JMX连接方式和jconsole远程连接方式一样","date":{"_isAMomentObject":true,"_i":"2018-08-20T03:10:30.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2018-08-20T03:10:30.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":["java","tomcat","jconsole","jvm"],"internalLinks":[],"keywords":[],"keywordsLength":0},"length":544}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cm9w745ik0008d8gk7ee5h1s6","tag_id":"cm9w745ii0004d8gkb2537gh8","_id":"cm9w745im000cd8gkfyep39pu"},{"post_id":"cm9w745ie0001d8gk5mjkggk8","tag_id":"cm9w745ii0004d8gkb2537gh8","_id":"cm9w745ip000ld8gkgmis658b"},{"post_id":"cm9w745ie0001d8gk5mjkggk8","tag_id":"cm9w745il000bd8gk2pcq5z7t","_id":"cm9w745ip000nd8gkdr8h0v0j"},{"post_id":"cm9w745ie0001d8gk5mjkggk8","tag_id":"cm9w745in000gd8gk9hq5eh32","_id":"cm9w745iq000qd8gkgccyb7h2"},{"post_id":"cm9w745iq000rd8gkdko5bb2j","tag_id":"cm9w745ii0004d8gkb2537gh8","_id":"cm9w745ir000ud8gkcf5igqtj"},{"post_id":"cm9w745ig0003d8gkcsmz2y7o","tag_id":"cm9w745il000bd8gk2pcq5z7t","_id":"cm9w745ir000yd8gkfgv52q5w"},{"post_id":"cm9w745ig0003d8gkcsmz2y7o","tag_id":"cm9w745ii0004d8gkb2537gh8","_id":"cm9w745is0010d8gk55hhc8h3"},{"post_id":"cm9w745ig0003d8gkcsmz2y7o","tag_id":"cm9w745iq000sd8gk18ue9z4v","_id":"cm9w745is0013d8gkea8kf20h"},{"post_id":"cm9w745ir000xd8gk95fx95jn","tag_id":"cm9w745il000bd8gk2pcq5z7t","_id":"cm9w745it0015d8gk7h9n91co"},{"post_id":"cm9w745is0014d8gkaibug4bt","tag_id":"cm9w745ii0004d8gkb2537gh8","_id":"cm9w745it0018d8gk24x83a73"},{"post_id":"cm9w745ij0006d8gkfs7mdnbf","tag_id":"cm9w745ii0004d8gkb2537gh8","_id":"cm9w745iu001ad8gkb11229nj"},{"post_id":"cm9w745ij0006d8gkfs7mdnbf","tag_id":"cm9w745is0011d8gk5xn3fbmw","_id":"cm9w745iu001cd8gk2cp06crh"},{"post_id":"cm9w745it0016d8gkb5krc7dw","tag_id":"cm9w745ii0004d8gkb2537gh8","_id":"cm9w745iu001dd8gk8iut2kbb"},{"post_id":"cm9w745il000ad8gk06o6dsoh","tag_id":"cm9w745ii0004d8gkb2537gh8","_id":"cm9w745iu001fd8gk4crrd9xo"},{"post_id":"cm9w745il000ad8gk06o6dsoh","tag_id":"cm9w745it0017d8gk7wglgvax","_id":"cm9w745iu001gd8gk837q4sf7"},{"post_id":"cm9w745im000ed8gk3v1kdfwm","tag_id":"cm9w745iu001bd8gk7zyxdh3k","_id":"cm9w745iu001id8gk7vks6ilq"},{"post_id":"cm9w745im000fd8gkcjflbmu1","tag_id":"cm9w745iu001bd8gk7zyxdh3k","_id":"cm9w745iu001jd8gk3yg0486r"},{"post_id":"cm9w745in000hd8gk6mp3cmy5","tag_id":"cm9w745iu001bd8gk7zyxdh3k","_id":"cm9w745iv001ld8gk74o2bke9"},{"post_id":"cm9w745in000id8gkbwn58oj3","tag_id":"cm9w745iu001bd8gk7zyxdh3k","_id":"cm9w745iv001nd8gk89bd5wyz"},{"post_id":"cm9w745io000kd8gkgii4fkyo","tag_id":"cm9w745ii0004d8gkb2537gh8","_id":"cm9w745iv001pd8gk1xgn86ls"},{"post_id":"cm9w745io000kd8gkgii4fkyo","tag_id":"cm9w745iv001md8gkcv0tgy1v","_id":"cm9w745iv001qd8gk0u1c3gq8"},{"post_id":"cm9w745ip000md8gk4ji194ut","tag_id":"cm9w745iv001od8gk3uhl937e","_id":"cm9w745iv001td8gk24p92s4u"},{"post_id":"cm9w745ip000md8gk4ji194ut","tag_id":"cm9w745iv001rd8gk3ozqb6rk","_id":"cm9w745iv001ud8gk95fe6ibj"},{"post_id":"cm9w745ip000md8gk4ji194ut","tag_id":"cm9w745il000bd8gk2pcq5z7t","_id":"cm9w745iw001wd8gk641866fk"},{"post_id":"cm9w745ip000pd8gkhda9d976","tag_id":"cm9w745iv001sd8gkbxia83ol","_id":"cm9w745iw001xd8gk00680dl0"},{"post_id":"cm9w745iq000td8gkb2df48ud","tag_id":"cm9w745ii0004d8gkb2537gh8","_id":"cm9w745iw001zd8gk7rhgbjy3"},{"post_id":"cm9w745iq000td8gkb2df48ud","tag_id":"cm9w745iv001vd8gk0z0ta47x","_id":"cm9w745iw0020d8gk9eusevjl"},{"post_id":"cm9w745ir000vd8gk8sckgxn1","tag_id":"cm9w745iw001yd8gk9xe1hny9","_id":"cm9w745iw0022d8gk7wdadtio"},{"post_id":"cm9w745is000zd8gk4p6m4fs9","tag_id":"cm9w745ii0004d8gkb2537gh8","_id":"cm9w745iw0024d8gkhiwjb8db"},{"post_id":"cm9w745is000zd8gk4p6m4fs9","tag_id":"cm9w745iw0021d8gk2kwvg6ro","_id":"cm9w745iw0025d8gk64b34qnq"},{"post_id":"cm9w745is0012d8gk0yqqfcqw","tag_id":"cm9w745iw0023d8gk97rc63lh","_id":"cm9w745ix002ad8gk255n92mf"},{"post_id":"cm9w745is0012d8gk0yqqfcqw","tag_id":"cm9w745iw0026d8gk803zgr94","_id":"cm9w745ix002bd8gk4n157xui"},{"post_id":"cm9w745is0012d8gk0yqqfcqw","tag_id":"cm9w745iw0027d8gkdnn37umo","_id":"cm9w745ix002dd8gk5hprfgwk"},{"post_id":"cm9w745is0012d8gk0yqqfcqw","tag_id":"cm9w745ix0028d8gkh8mf44hb","_id":"cm9w745ix002ed8gk58tqdsh0"},{"post_id":"cm9w745it0019d8gk39xq2ar1","tag_id":"cm9w745iw0021d8gk2kwvg6ro","_id":"cm9w745ix002hd8gk3nt8b4ax"},{"post_id":"cm9w745it0019d8gk39xq2ar1","tag_id":"cm9w745ix002cd8gk0kob00yo","_id":"cm9w745ix002id8gk9pr60bzm"},{"post_id":"cm9w745it0019d8gk39xq2ar1","tag_id":"cm9w745ix002fd8gkbo9y6ynj","_id":"cm9w745ix002jd8gk4023cn48"},{"post_id":"cm9w745it0019d8gk39xq2ar1","tag_id":"cm9w745ix002gd8gkh58cg658","_id":"cm9w745ix002kd8gkgyvcf3ux"},{"post_id":"cm9w745iz002ld8gkeunj30u4","tag_id":"cm9w745iw0021d8gk2kwvg6ro","_id":"cm9w745iz002nd8gk74jdflf1"},{"post_id":"cm9w745j1002sd8gk3868gy6n","tag_id":"cm9w745iw0021d8gk2kwvg6ro","_id":"cm9w745j1002vd8gkezz7d9g3"},{"post_id":"cm9w745j1002sd8gk3868gy6n","tag_id":"cm9w745ix002cd8gk0kob00yo","_id":"cm9w745j2002yd8gk6w0v1js4"},{"post_id":"cm9w745iz002md8gk5erq93xk","tag_id":"cm9w745il000bd8gk2pcq5z7t","_id":"cm9w745j2002zd8gk1vfl1cmu"},{"post_id":"cm9w745iz002md8gk5erq93xk","tag_id":"cm9w745j0002pd8gkfhmqe1a0","_id":"cm9w745j20031d8gka20d4tgf"},{"post_id":"cm9w745iz002md8gk5erq93xk","tag_id":"cm9w745j1002td8gk7fm39y3p","_id":"cm9w745j20032d8gk989ugtay"},{"post_id":"cm9w745iz002od8gkewvqbct5","tag_id":"cm9w745j2002xd8gkdk33bsna","_id":"cm9w745j20033d8gk2bo76v26"},{"post_id":"cm9w745j0002qd8gk9u8tfyiy","tag_id":"cm9w745j20030d8gk75zi78sy","_id":"cm9w745j20035d8gkdkb43si1"},{"post_id":"cm9w745j0002rd8gk39wfdxy6","tag_id":"cm9w745j20034d8gk0puxatq8","_id":"cm9w745j30038d8gk06wsa75c"},{"post_id":"cm9w745j0002rd8gk39wfdxy6","tag_id":"cm9w745j30036d8gk7dq05o94","_id":"cm9w745j30039d8gk3at18bum"},{"post_id":"cm9w745j1002ud8gkhp7q7i5t","tag_id":"cm9w745j30037d8gkeyysfqcv","_id":"cm9w745j3003bd8gkfb3ygla8"},{"post_id":"cm9w745j1002ud8gkhp7q7i5t","tag_id":"cm9w745it0017d8gk7wglgvax","_id":"cm9w745j3003cd8gk5aqtg8hv"},{"post_id":"cm9w745j1002wd8gk5q4d7hqm","tag_id":"cm9w745il000bd8gk2pcq5z7t","_id":"cm9w745j3003fd8gk5rp164ce"},{"post_id":"cm9w745j1002wd8gk5q4d7hqm","tag_id":"cm9w745j3003ad8gkad9ugvdy","_id":"cm9w745j3003gd8gkcadh35zc"},{"post_id":"cm9w745j1002wd8gk5q4d7hqm","tag_id":"cm9w745j3003dd8gk0aox1mln","_id":"cm9w745j4003hd8gk36386iwi"},{"post_id":"cm9w745j1002wd8gk5q4d7hqm","tag_id":"cm9w745j2002xd8gkdk33bsna","_id":"cm9w745j4003id8gkg3nx2tbf"}],"Tag":[{"name":"linux","_id":"cm9w745ii0004d8gkb2537gh8"},{"name":"java","_id":"cm9w745il000bd8gk2pcq5z7t"},{"name":"jdk","_id":"cm9w745in000gd8gk9hq5eh32"},{"name":"maven","_id":"cm9w745iq000sd8gk18ue9z4v"},{"name":"swap","_id":"cm9w745is0011d8gk5xn3fbmw"},{"name":"nodejs","_id":"cm9w745it0017d8gk7wglgvax"},{"name":"MySQL","_id":"cm9w745iu001bd8gk7zyxdh3k"},{"name":"shell","_id":"cm9w745iv001md8gkcv0tgy1v"},{"name":"axis2","_id":"cm9w745iv001od8gk3uhl937e"},{"name":"WebService","_id":"cm9w745iv001rd8gk3ozqb6rk"},{"name":"atom","_id":"cm9w745iv001sd8gkbxia83ol"},{"name":"docker","_id":"cm9w745iv001vd8gk0z0ta47x"},{"name":"Git","_id":"cm9w745iw001yd8gk9xe1hny9"},{"name":"nginx","_id":"cm9w745iw0021d8gk2kwvg6ro"},{"name":"jsp","_id":"cm9w745iw0023d8gk97rc63lh"},{"name":"SSL","_id":"cm9w745iw0026d8gk803zgr94"},{"name":"Certification","_id":"cm9w745iw0027d8gkdnn37umo"},{"name":"JAVA","_id":"cm9w745ix0028d8gkh8mf44hb"},{"name":"rtmp","_id":"cm9w745ix002cd8gk0kob00yo"},{"name":"rtsp","_id":"cm9w745ix002fd8gkbo9y6ynj"},{"name":"ffmpeg","_id":"cm9w745ix002gd8gkh58cg658"},{"name":"pdfbox","_id":"cm9w745j0002pd8gkfhmqe1a0"},{"name":"pdf","_id":"cm9w745j1002td8gk7fm39y3p"},{"name":"tomcat","_id":"cm9w745j2002xd8gkdk33bsna"},{"name":"vscode","_id":"cm9w745j20030d8gk75zi78sy"},{"name":"vue","_id":"cm9w745j20034d8gk0puxatq8"},{"name":"web","_id":"cm9w745j30036d8gk7dq05o94"},{"name":"hexo","_id":"cm9w745j30037d8gkeyysfqcv"},{"name":"jconsole","_id":"cm9w745j3003ad8gkad9ugvdy"},{"name":"jvm","_id":"cm9w745j3003dd8gk0aox1mln"}]}}